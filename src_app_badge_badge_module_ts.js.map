{"version":3,"file":"src_app_badge_badge_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;ICcc,iFAAgG;;;IAAlD,2EAAe;;ADPpE,MAAM,qBAAqB;IALlC;QAME,WAAM,GAAG;YACP,SAAS;YACT,WAAW;YACX,QAAQ;YACR,SAAS;YACT,SAAS;YACT,OAAO;YACP,MAAM;SACP,CAAC;QAEF,kBAAa,GAAG,SAAS,CAAC;QAC1B,cAAS,GAAG,KAAK,CAAC;QAElB,WAAM,GAAG,KAAK,CAAC;KAChB;;0FAfY,qBAAqB;mHAArB,qBAAqB;QCPlC,qEAAI;QAAA,+EAAoB;QAAA,4DAAK;QAC7B,yEAAwB;QAMsB,sEAAW;QAAA,4DAAS;QAC1D,2EAAsF;QAAxB,4LAAuB;QAArF,4DAAsF;QACtF,iEAAI;QACJ,0EAAiB;QAEc,wEAAY;QAAA,4DAAS;QAChD,qFAAuD;QAA5B,0MAA2B;QACpD,2IAAgG;QAClG,4DAAiB;QAEnB,0EAAqB;QACS,6EAAiB;QAAA,4DAAS;QAEtD,mFAA2D;QAAlC,gMAAoB;QAAc,4DAAc;QAQjF,2EAA4B;QACH,2EAAe;QAAA,4DAAK;QAE3C,sEAAI;QAAA,6EAAiB;QAAA,uEAAkF;QAAA,4DAAK;QAE5G,sEAAI;QAAA,4EAAgB;QAAA,oEAA4D;QAAA,4DAAK;;QAzBrB,0DAAuB;QAAvB,kFAAuB;QAKtD,0DAA2B;QAA3B,sFAA2B;QACjB,0DAAS;QAAT,+EAAS;QAMrB,0DAAoB;QAApB,+EAAoB;QAWxB,0DAAqB;QAArB,kFAAqB;QAED,0DAA4B;QAA5B,yFAA4B;;;;;;;;;;;;;;;;;;;;;;AC1B1E,MAAM,sBAAsB;IAEjC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4FALU,sBAAsB;oHAAtB,sBAAsB;QCDnC,8EAAqC;;;;;;;;;;;;;;;;;;;;;;ACL0B;;;;;;AAOxD,MAAM,mBAAmB;IAI9B;QACE,IAAI,CAAC,SAAS,GAAS,uEAA8B,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC;IAC1G,CAAC;;sFANU,mBAAmB;iHAAnB,mBAAmB;QCRhC,wEAAqB;QAAA,gEAAK;QAAA,4DAAK;QAC/B,uEAAmB;QAAA,mJAAwF;QAAA,4DAAI;QAC/G,+EAAc;QAEV,oEAA+C;QACjD,4DAAS;QACT,4EAAoB;QAClB,kFAA+D;QACjE,4DAAS;QACT,4EAAuB;QACrB,gFAAuC;QACzC,4DAAS;;QAPF,0DAAmC;QAAnC,8JAAmC;QAGrB,0DAAuB;QAAvB,oFAAuB;;;;;;;;;;;;;;;;;;;ACNS;AACmB;;;AAE1E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAmB,EAAE;CAC7C,CAAC;AAMK,MAAM,kBAAkB;;oFAAlB,kBAAkB;+GAAlB,kBAAkB;mHAHnB,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,kBAAkB,oFAFnB,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;ACTuB;AACF;AAEuC;AAE7B;AAEK;AACoB;AACG;AACT;;AAenE,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GARpB,yDAAY;QACZ,8FAAsB;QACtB,uDAAW;QACX,+DAAY;QACZ,qEAAkB;mIAIT,WAAW,mBAFP,yFAAqB,EAAE,4FAAsB,EAAE,mFAAmB,aAN/E,yDAAY;QACZ,8FAAsB;QACtB,uDAAW;QACX,+DAAY;QACZ,qEAAkB","sources":["./src/app/badge/badge-example/badge-example.component.ts","./src/app/badge/badge-example/badge-example.component.html","./src/app/badge/badge-examples/badge-examples.component.ts","./src/app/badge/badge-examples/badge-examples.component.html","./src/app/badge/badge-index/badge-index.component.ts","./src/app/badge/badge-index/badge-index.component.html","./src/app/badge/badge-routing.module.ts","./src/app/badge/badge.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'it-badge-example',\n  templateUrl: './badge-example.component.html',\n  styleUrls: ['./badge-example.component.scss']\n})\nexport class BadgeExampleComponent {\n  colors = [\n    'primary',\n    'secondary',\n    'danger',\n    'warning',\n    'success',\n    'light',\n    'dark'\n  ];\n\n  selectedColor = 'primary';\n  badgeText = 'New';\n\n  isPill = false;\n}\n","<h3>Configurazione badge</h3>\n<div class=\"bd-example\">\n  \n  <div class=\"row\">\n    <div class=\"col-4\">\n      <div class=\"example-section\">\n        \n        <label for=\"exampleInputText\"><strong>Testo badge</strong></label>\n        <input type=\"text\" class=\"form-control\" id=\"exampleInputText\" [(ngModel)]=\"badgeText\">\n        <hr>\n        <div class=\"row\">\n          <div class=\"col-6\">\n            <label for=\"color\"><strong>Colore Badge</strong></label>\n            <it-radio-group id=\"color\" [(ngModel)]=\"selectedColor\">\n              <it-radio-button *ngFor=\"let color of colors\" [value]=\"color\" [label]=\"color\"></it-radio-button>\n            </it-radio-group>\n          </div>\n          <div class = \"col-6\">\n            <label for=\"isPill\"><strong>Badge arrotondato</strong></label>\n\n            <it-checkbox id=\"isPill\" [(ngModel)]=\"isPill\" label=\"Pill\"></it-checkbox>\n\n          </div>\n        </div>\n       \n      </div>\n    </div>\n\n    <div class=\"col-6 offset-2\">\n      <h4 class=\"card-title\">Risultato badge</h4>\n  \n      <h5>Testo di esempio <span [itBadge]=\"badgeText\" [badgeColor]=\"selectedColor\" [isPill]=\"isPill\"></span></h5>\n  \n      <h5>Link di esempio <a href=\"#\" itBadge=\"link\" [badgeColor]=\"selectedColor\"></a></h5>\n    </div>\n  </div>\n      \n</div>\n  \n\n\n    \n      \n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'it-badge-examples',\n  templateUrl: './badge-examples.component.html',\n  styleUrls: ['./badge-examples.component.scss']\n})\nexport class BadgeExamplesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","\n\n\n\n\n\n<it-badge-example></it-badge-example>\n\n<it-source-display html=\"\n  \n  &lt;h3&gt;Configurazione badge&lt;/h3&gt;\n&lt;div class=&quot;bd-example&quot;&gt;\n  \n  &lt;div class=&quot;row&quot;&gt;\n    &lt;div class=&quot;col-4&quot;&gt;\n      &lt;div class=&quot;example-section&quot;&gt;\n        \n        &lt;label for=&quot;exampleInputText&quot;&gt;&lt;strong&gt;Testo badge&lt;/strong&gt;&lt;/label&gt;\n        &lt;input type=&quot;text&quot; class=&quot;form-control&quot; id=&quot;exampleInputText&quot; [(ngModel)]=&quot;badgeText&quot;&gt;\n        &lt;hr&gt;\n        &lt;div class=&quot;row&quot;&gt;\n          &lt;div class=&quot;col-6&quot;&gt;\n            &lt;label for=&quot;color&quot;&gt;&lt;strong&gt;Colore Badge&lt;/strong&gt;&lt;/label&gt;\n            &lt;it-radio-group id=&quot;color&quot; [(ngModel)]=&quot;selectedColor&quot;&gt;\n              &lt;it-radio-button *ngFor=&quot;let color of colors&quot; [value]=&quot;color&quot; [label]=&quot;color&quot;&gt;&lt;/it-radio-button&gt;\n            &lt;/it-radio-group&gt;\n          &lt;/div&gt;\n          &lt;div class = &quot;col-6&quot;&gt;\n            &lt;label for=&quot;isPill&quot;&gt;&lt;strong&gt;Badge arrotondato&lt;/strong&gt;&lt;/label&gt;\n\n            &lt;it-checkbox id=&quot;isPill&quot; [(ngModel)]=&quot;isPill&quot; label=&quot;Pill&quot;&gt;&lt;/it-checkbox&gt;\n\n          &lt;/div&gt;\n        &lt;/div&gt;\n       \n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=&quot;col-6 offset-2&quot;&gt;\n      &lt;h4 class=&quot;card-title&quot;&gt;Risultato badge&lt;/h4&gt;\n  \n      &lt;h5&gt;Testo di esempio &lt;span [itBadge]=&quot;badgeText&quot; [badgeColor]=&quot;selectedColor&quot; [isPill]=&quot;isPill&quot;&gt;&lt;/span&gt;&lt;/h5&gt;\n  \n      &lt;h5&gt;Link di esempio &lt;a href=&quot;#&quot; itBadge=&quot;link&quot; [badgeColor]=&quot;selectedColor&quot;&gt;&lt;/a&gt;&lt;/h5&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n      \n&lt;/div&gt;\n  \n\n\n    \n      \n\n\n\n\" typescript=\"\n  \n  import { Component } from &#39;@angular/core&#39;;\n\n@Component({\n  selector: &#39;it-badge-example&#39;,\n  templateUrl: &#39;./badge-example.component.html&#39;,\n  styleUrls: [&#39;./badge-example.component.scss&#39;]\n})\nexport class BadgeExampleComponent {\n  colors = [\n    &#39;primary&#39;,\n    &#39;secondary&#39;,\n    &#39;danger&#39;,\n    &#39;warning&#39;,\n    &#39;success&#39;,\n    &#39;light&#39;,\n    &#39;dark&#39;\n  ];\n\n  selectedColor = &#39;primary&#39;;\n  badgeText = &#39;New&#39;;\n\n  isPill = false;\n}\n\n\n\" >\n</it-source-display>\n","import { Component } from '@angular/core';\nimport Documentation from '../../../assets/documentation.json';\n\n@Component({\n  selector: 'it-badge-index',\n  templateUrl: './badge-index.component.html',\n  styleUrls: ['./badge-index.component.scss']\n})\nexport class BadgeIndexComponent {\n\n  directive: any;\n\n  constructor() {\n    this.directive = (<any>Documentation).directives.find(directive => directive.name === 'BadgeDirective');\n  }\n\n}\n","<h1 class=\"bd-title\">Badge</h1>\n<p class=\"bd-lead\">Documentazione ed esempi del componente badge, utile per piccoli contatori ed etichette.</p>\n<it-tab-group>\n  <it-tab label=\"Descrizione\">\n    <div [innerHTML]=\"directive.description\"></div>\n  </it-tab>\n  <it-tab label=\"API\">\n    <it-api-parameters [component]=\"directive\"></it-api-parameters>\n  </it-tab>\n  <it-tab label=\"Esempi\">\n    <it-badge-examples></it-badge-examples>\n  </it-tab>\n</it-tab-group>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BadgeIndexComponent } from './badge-index/badge-index.component';\n\nconst routes: Routes = [\n  { path: '', component: BadgeIndexComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BadgeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { DesignAngularKitModule } from 'projects/design-angular-kit/src/public_api';\n\nimport { SharedModule } from '../shared/shared.module';\n\nimport { BadgeRoutingModule } from './badge-routing.module';\nimport { BadgeExampleComponent } from './badge-example/badge-example.component';\nimport { BadgeExamplesComponent } from './badge-examples/badge-examples.component';\nimport { BadgeIndexComponent } from './badge-index/badge-index.component';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DesignAngularKitModule,\n    FormsModule,\n    SharedModule,\n    BadgeRoutingModule\n  ],\n  declarations: [BadgeExampleComponent, BadgeExamplesComponent, BadgeIndexComponent]\n})\nexport class BadgeModule { }\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
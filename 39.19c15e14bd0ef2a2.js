"use strict";(self.webpackChunkdesign_angular_kit_bundle=self.webpackChunkdesign_angular_kit_bundle||[]).push([[39],{8340:(m,c,n)=>{n.d(c,{G:()=>s});var e=n(8274),l=n(6895);function d(t,i){if(1&t&&(e.TgZ(0,"div")(1,"table",2)(2,"tbody")(3,"tr")(4,"td",3)(5,"code"),e._uU(6),e.qZA()(),e.TgZ(7,"td",4)(8,"p")(9,"em"),e._uU(10,"Tipo: "),e.qZA(),e.TgZ(11,"code"),e._uU(12),e.qZA()()()(),e.TgZ(13,"tr"),e._UZ(14,"td",5),e.qZA()()()()),2&t){const a=i.$implicit;e.xp6(6),e.Oqu(a.name),e.xp6(6),e.Oqu(a.type),e.xp6(2),e.Q6J("innerHTML",a.description,e.oJD)}}function g(t,i){if(1&t&&(e.TgZ(0,"div")(1,"h3"),e._uU(2,"Input"),e.qZA(),e.YNc(3,d,15,3,"div",1),e.qZA()),2&t){const a=e.oxw();e.xp6(3),e.Q6J("ngForOf",a.component.inputsClass)}}function f(t,i){if(1&t&&(e.TgZ(0,"div")(1,"table",2)(2,"tbody")(3,"tr")(4,"td",3)(5,"code"),e._uU(6),e.qZA()(),e.TgZ(7,"td",4)(8,"p")(9,"em"),e._uU(10,"Tipo: "),e.qZA(),e.TgZ(11,"code"),e._uU(12),e.qZA()()()(),e.TgZ(13,"tr"),e._UZ(14,"td",5),e.qZA()()()()),2&t){const a=i.$implicit;e.xp6(6),e.Oqu(a.name),e.xp6(6),e.Oqu(a.type),e.xp6(2),e.Q6J("innerHTML",a.description,e.oJD)}}function u(t,i){if(1&t&&(e.TgZ(0,"div")(1,"h3"),e._uU(2,"Output"),e.qZA(),e.YNc(3,f,15,3,"div",1),e.qZA()),2&t){const a=e.oxw();e.xp6(3),e.Q6J("ngForOf",a.component.outputsClass)}}function h(t,i){if(1&t&&(e.TgZ(0,"tr")(1,"td",3)(2,"code"),e._uU(3),e.qZA()(),e.TgZ(4,"td",4)(5,"p")(6,"em"),e._uU(7,"Tipo: "),e.qZA(),e.TgZ(8,"code"),e._uU(9),e.qZA()()()()),2&t){const a=i.$implicit;e.xp6(3),e.Oqu(a.name),e.xp6(6),e.Oqu(a.type)}}const b=function(){return[]};function r(t,i){if(1&t&&(e.TgZ(0,"div")(1,"table",2)(2,"thead")(3,"tr"),e._UZ(4,"th",6)(5,"th",7),e.qZA()(),e.TgZ(6,"tbody")(7,"tr")(8,"td",8)(9,"p")(10,"em"),e._uU(11,"Tipo di ritorno: "),e.qZA(),e.TgZ(12,"code"),e._uU(13),e.qZA()()()(),e.TgZ(14,"tr")(15,"td",8),e._uU(16,"Attributi:"),e.qZA()(),e.YNc(17,h,10,2,"tr",1),e.qZA()()()),2&t){const a=i.$implicit;e.xp6(4),e.Q6J("innerHTML",a.name,e.oJD),e.xp6(1),e.Q6J("innerHTML",a.description,e.oJD),e.xp6(8),e.Oqu(a.returnType),e.xp6(4),e.Q6J("ngForOf",a.args||e.DdM(4,b))}}function o(t,i){if(1&t&&(e.TgZ(0,"div")(1,"h3"),e._uU(2,"Metodi"),e.qZA(),e.YNc(3,r,18,5,"div",1),e.qZA()),2&t){const a=e.oxw();e.xp6(3),e.Q6J("ngForOf",a.service.methods)}}class s{}s.\u0275fac=function(i){return new(i||s)},s.\u0275cmp=e.Xpm({type:s,selectors:[["it-api-parameters"]],inputs:{component:"component",service:"service"},decls:3,vars:3,consts:[[4,"ngIf"],[4,"ngFor","ngForOf"],[1,"table","table-bordered","table-sm"],[2,"width","20%"],[2,"width","80%"],["colspan","2",1,"col-md-2",3,"innerHTML"],[2,"width","20%",3,"innerHTML"],[2,"width","80%",3,"innerHTML"],["colspan","2",1,"col-md-2"]],template:function(i,a){1&i&&(e.YNc(0,g,4,1,"div",0),e.YNc(1,u,4,1,"div",0),e.YNc(2,o,4,1,"div",0)),2&i&&(e.Q6J("ngIf",(null==a.component?null:a.component.inputsClass)&&a.component.inputsClass.length>0),e.xp6(1),e.Q6J("ngIf",(null==a.component?null:a.component.outputsClass)&&a.component.outputsClass.length>0),e.xp6(1),e.Q6J("ngIf",(null==a.service?null:a.service.methods)&&a.service.methods.length>0))},dependencies:[l.sg,l.O5]})},4944:(m,c,n)=>{n.d(c,{m:()=>p});var e=n(6895),l=n(8878),d=n(4656),v=(n(1944),n(3148),n(137),n(3952),n(7299),n(5806),n(9065),n(6788),n(2667),n(3080),n(6718),n(8110),n(2722),n(2543),n(3777),n(1132),n(1544),n(1380),n(6331),n(9455),n(950),n(6746),n(5477),n(4834),n(4697),n(8579),n(6356),n(5520),n(3570),n(1754),n(5792),n(2717),n(3010),n(5583),n(7417),n(4127),n(7206),n(3512),n(3852),n(6816),n(1872),n(4449),n(5411),n(4933),n(9289),n(7029),n(3930),n(8109),n(4393),n(3199),n(9461),n(286),n(7066),n(8274));class p{}p.\u0275fac=function(C){return new(C||p)},p.\u0275mod=v.oAB({type:p}),p.\u0275inj=v.cJS({imports:[e.ez,l._l,d.z,d.z]})},6242:(m,c,n)=>{n.d(c,{F:()=>r});var e=n(8274),l=n(6895),d=n(8878),g=n(5792),f=n(2717);function u(o,s){if(1&o&&(e.TgZ(0,"it-tab-item",4)(1,"pre"),e._UZ(2,"code",5),e.qZA()()),2&o){const t=e.oxw();e.Q6J("active",!!t.html),e.xp6(2),e.Q6J("highlight",t.html)}}function h(o,s){if(1&o&&(e.TgZ(0,"it-tab-item",6)(1,"pre"),e._UZ(2,"code",5),e.qZA()()),2&o){const t=e.oxw();e.Q6J("active",!t.html&&!!t.typescript),e.xp6(2),e.Q6J("highlight",t.typescript)}}function b(o,s){if(1&o&&(e.TgZ(0,"it-tab-item",7)(1,"pre"),e._UZ(2,"code",5),e.qZA()()),2&o){const t=e.oxw();e.xp6(2),e.Q6J("highlight",t.scss)}}class r{ngOnInit(){this.html&&(this.html=this.html.replace(/\/{\/{/g,"{{"),this.html=this.html.replace(/\/}\/}/g,"}}")),this.typescript&&(this.typescript=this.typescript.replace(/\/{\/{/g,"{{"),this.typescript=this.typescript.replace(/\/}\/}/g,"}}")),this.scss&&(this.scss=this.scss.replace(/\/{\/{/g,"{{"),this.scss=this.scss.replace(/\/}\/}/g,"}}"))}}r.\u0275fac=function(s){return new(s||r)},r.\u0275cmp=e.Xpm({type:r,selectors:[["it-source-display"]],inputs:{html:"html",typescript:"typescript",scss:"scss"},decls:5,vars:3,consts:[[1,"source-display-container","bd-example"],["label","HTML",3,"active",4,"ngIf"],["label","TypeScript",3,"active",4,"ngIf"],["label","SCSS",4,"ngIf"],["label","HTML",3,"active"],[3,"highlight"],["label","TypeScript",3,"active"],["label","SCSS"]],template:function(s,t){1&s&&(e.TgZ(0,"div",0)(1,"it-tab-container"),e.YNc(2,u,3,2,"it-tab-item",1),e.YNc(3,h,3,2,"it-tab-item",2),e.YNc(4,b,3,1,"it-tab-item",3),e.qZA()()),2&s&&(e.xp6(2),e.Q6J("ngIf",t.html),e.xp6(1),e.Q6J("ngIf",t.typescript),e.xp6(1),e.Q6J("ngIf",t.scss))},dependencies:[l.O5,d.y$,g.H,f.D],styles:[".bd-example[_ngcontent-%COMP%]{border-top:none;margin-top:auto;padding-top:20px}"]})},7069:m=>{m.exports=JSON.parse('{"G5":[{"name":"NotificationsService","id":"injectable-NotificationsService-83f3d9eb610f9d0450a68ed407e32c6b98edc88abac2d223d40cd2d9fbf310386a061d3659cdf7e564a8dd7e1d8b4c1a727f13fa248f731f32ecb569d7519575","file":"projects/design-angular-kit/src/lib/services/notifications/notifications.service.ts","properties":[{"name":"subject","defaultValue":"new Subject<Notification>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":7,"modifierKind":[121]}],"methods":[{"name":"addNotification","args":[{"name":"notification","type":"Notification","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow new notification\\n","description":"<p>Show new notification</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":662,"end":674,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"notification"},"type":"Notification","deprecated":false,"deprecationMessage":"","tagName":{"pos":656,"end":661,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification</p>\\n"}]},{"name":"error","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"dismissible","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","optional":true},{"name":"position","type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate new Error notification\\n","description":"<p>Create new Error notification</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1983,"end":1988,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1977,"end":1982,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification title</p>\\n"},{"name":{"pos":2020,"end":2027,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"message"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2014,"end":2019,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification message</p>\\n"},{"name":{"pos":2061,"end":2072,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dismissible"},"type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2055,"end":2060,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification dismissible</p>\\n"},{"name":{"pos":2110,"end":2118,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2104,"end":2109,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification duration (milliseconds)</p>\\n"},{"name":{"pos":2168,"end":2176,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"position"},"type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2162,"end":2167,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification position</p>\\n"}]},{"name":"info","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"dismissible","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","optional":true},{"name":"position","type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate new Info notification\\n","description":"<p>Create new Info notification</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":3106,"end":3111,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":3100,"end":3105,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification title</p>\\n"},{"name":{"pos":3143,"end":3150,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"message"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3137,"end":3142,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification message</p>\\n"},{"name":{"pos":3184,"end":3195,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dismissible"},"type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3178,"end":3183,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification dismissible</p>\\n"},{"name":{"pos":3233,"end":3241,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3227,"end":3232,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification duration (milliseconds)</p>\\n"},{"name":{"pos":3291,"end":3299,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"position"},"type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":3285,"end":3290,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification position</p>\\n"}]},{"name":"onNotification","args":[{"name":"filterType","type":"NotificationType","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<Notification>","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nListen on notification arrived\\n","description":"<p>Listen on notification arrived</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":367,"end":377,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"filterType"},"type":"NotificationType","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":361,"end":366,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>filter type of notification</p>\\n"}]},{"name":"standard","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"dismissible","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","optional":true},{"name":"position","type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate new Standard notification\\n","description":"<p>Create new Standard notification</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":853,"end":858,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":847,"end":852,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification title</p>\\n"},{"name":{"pos":890,"end":897,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"message"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":884,"end":889,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification message</p>\\n"},{"name":{"pos":931,"end":942,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dismissible"},"type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":925,"end":930,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification dismissible</p>\\n"},{"name":{"pos":980,"end":988,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":974,"end":979,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification duration (milliseconds)</p>\\n"},{"name":{"pos":1038,"end":1046,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"position"},"type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1032,"end":1037,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification position</p>\\n"}]},{"name":"success","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"dismissible","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","optional":true},{"name":"position","type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate new Success notification\\n","description":"<p>Create new Success notification</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":1420,"end":1425,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1414,"end":1419,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification title</p>\\n"},{"name":{"pos":1457,"end":1464,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"message"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1451,"end":1456,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification message</p>\\n"},{"name":{"pos":1498,"end":1509,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dismissible"},"type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1492,"end":1497,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification dismissible</p>\\n"},{"name":{"pos":1547,"end":1555,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1541,"end":1546,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification duration (milliseconds)</p>\\n"},{"name":{"pos":1605,"end":1613,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"position"},"type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":1599,"end":1604,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification position</p>\\n"}]},{"name":"warning","args":[{"name":"title","type":"string","deprecated":false,"deprecationMessage":""},{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"dismissible","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true},{"name":"duration","type":"number","deprecated":false,"deprecationMessage":"","optional":true},{"name":"position","type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate new Warning notification\\n","description":"<p>Create new Warning notification</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2544,"end":2549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":2538,"end":2543,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification title</p>\\n"},{"name":{"pos":2581,"end":2588,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"message"},"type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2575,"end":2580,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification message</p>\\n"},{"name":{"pos":2622,"end":2633,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"dismissible"},"type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2616,"end":2621,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification dismissible</p>\\n"},{"name":{"pos":2671,"end":2679,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"duration"},"type":"number","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2665,"end":2670,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification duration (milliseconds)</p>\\n"},{"name":{"pos":2729,"end":2737,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"position"},"type":"NotificationPosition","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":2723,"end":2728,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>notification position</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { filter, Observable, Subject } from \'rxjs\';\\nimport { Notification, NotificationPosition, NotificationType } from \'../../interfaces/core\';\\n\\n@Injectable({ providedIn: \'root\' })\\nexport class NotificationsService {\\n  private subject = new Subject<Notification>();\\n\\n  /**\\n   * Listen on notification arrived\\n   * @param filterType filter type of notification\\n   */\\n  public onNotification(filterType?: NotificationType): Observable<Notification> {\\n    return this.subject.asObservable().pipe(\\n      filter(n => n && (!filterType || (n.type === filterType)))\\n    );\\n  }\\n\\n  /**\\n   * Show new notification\\n   * @param notification notification\\n   */\\n  public addNotification(notification: Notification): void {\\n    this.subject.next(notification);\\n  }\\n\\n  /**\\n   * Create new Standard notification\\n   * @param title notification title\\n   * @param message notification message\\n   * @param dismissible notification dismissible\\n   * @param duration notification duration (milliseconds)\\n   * @param position notification position\\n   */\\n  public standard(title: string, message?: string, dismissible?:boolean, duration?: number, position?: NotificationPosition): void {\\n    this.addNotification({\\n      type: NotificationType.Standard,\\n      message,\\n      title,\\n      duration,\\n      dismissible,\\n      position\\n    });\\n  }\\n\\n  /**\\n   * Create new Success notification\\n   * @param title notification title\\n   * @param message notification message\\n   * @param dismissible notification dismissible\\n   * @param duration notification duration (milliseconds)\\n   * @param position notification position\\n   */\\n  public success(title: string, message?: string, dismissible?:boolean, duration?: number, position?: NotificationPosition): void {\\n    this.addNotification({\\n      type: NotificationType.Success,\\n      message,\\n      title,\\n      duration,\\n      dismissible,\\n      position\\n    });\\n  }\\n\\n  /**\\n   * Create new Error notification\\n   * @param title notification title\\n   * @param message notification message\\n   * @param dismissible notification dismissible\\n   * @param duration notification duration (milliseconds)\\n   * @param position notification position\\n   */\\n  public error(title: string, message?: string, dismissible?:boolean, duration?: number, position?: NotificationPosition): void {\\n    this.addNotification({\\n      type: NotificationType.Error,\\n      message,\\n      title,\\n      duration,\\n      dismissible,\\n      position\\n    });\\n  }\\n\\n  /**\\n   * Create new Warning notification\\n   * @param title notification title\\n   * @param message notification message\\n   * @param dismissible notification dismissible\\n   * @param duration notification duration (milliseconds)\\n   * @param position notification position\\n   */\\n  public warning(title: string, message?: string, dismissible?:boolean, duration?: number, position?: NotificationPosition): void {\\n    this.addNotification({\\n      type: NotificationType.Warning,\\n      message,\\n      title,\\n      duration,\\n      dismissible,\\n      position\\n    });\\n  }\\n\\n  /**\\n   * Create new Info notification\\n   * @param title notification title\\n   * @param message notification message\\n   * @param dismissible notification dismissible\\n   * @param duration notification duration (milliseconds)\\n   * @param position notification position\\n   */\\n  public info(title: string, message?: string, dismissible?:boolean, duration?: number, position?: NotificationPosition): void {\\n    this.addNotification({\\n      type: NotificationType.Info,\\n      message,\\n      title,\\n      duration,\\n      dismissible,\\n      position\\n    });\\n  }\\n}\\n","type":"injectable"}],"s7":[{"name":"BadgeDirective","id":"directive-BadgeDirective-3c302262e8340a51c83b6bfdc963f6af542be8242070a3312843ce45ce325df264d80595e19106cecaecfa3bda095c28428485bba455522219b02709463e10bb","file":"projects/design-angular-kit/src/lib/components/core/badge/badge.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { Directive, HostBinding, Input } from \'@angular/core\';\\nimport { BadgeColor } from \'../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Directive({\\n  selector: \'[itBadge]\',\\n  exportAs: \'itBadge\'\\n})\\nexport class BadgeDirective {\\n\\n  /**\\n   * Define the badge color\\n   */\\n  @Input(\'itBadge\') color?: BadgeColor;\\n\\n  /**\\n   * Show rounded badge\\n   */\\n  @Input(\'rounded\') rounded?: BooleanInput;\\n\\n  @HostBinding(\'class\')\\n  get badgeClass(): string {\\n    let badgeClass = \'badge\';\\n    if (isTrueBooleanInput(this.rounded)) {\\n      badgeClass += ` rounded-pill`;\\n    }\\n    if (this.color) {\\n      badgeClass += ` bg-${this.color}`;\\n    }\\n\\n    return badgeClass;\\n  }\\n\\n}\\n","selector":"[itBadge]","providers":[],"inputsClass":[{"name":"itBadge","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDefine the badge color\\n","description":"<p>Define the badge color</p>\\n","line":14,"type":"BadgeColor","decorators":[]},{"name":"rounded","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow rounded badge\\n","description":"<p>Show rounded badge</p>\\n","line":19,"type":"BooleanInput","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]}],"hostListeners":[],"propertiesClass":[],"methodsClass":[],"accessors":{"badgeClass":{"name":"badgeClass","getSignature":{"name":"badgeClass","type":"string","returnType":"string","line":22}}}},{"name":"ButtonDirective","id":"directive-ButtonDirective-0d9e0c98a51d7aa19fd22a9353ec0f1921239a53cf1f37144daa9fe3d12733debb4eaa68ed3901a41f17d74151f111c94b0947ffb4b3774402198f2a899f5311","file":"projects/design-angular-kit/src/lib/components/core/button/button.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { ContentChildren, Directive, Host, HostBinding, HostListener, Input, Optional, QueryList } from \'@angular/core\';\\nimport { ButtonColor, ButtonSize } from \'../../../interfaces/core\';\\nimport { IconComponent } from \'../../utils/icon/icon.component\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { ProgressButtonComponent } from \'../progress-button/progress-button.component\';\\n\\n@Directive({\\n  selector: \'[itButton]\',\\n  exportAs: \'itButton\'\\n})\\nexport class ButtonDirective {\\n\\n  /**\\n   * Button color\\n   */\\n  @Input(\'itButton\') color?: ButtonColor;\\n\\n  /**\\n   * Button size\\n   */\\n  @Input() size?: ButtonSize;\\n\\n  /**\\n   * Indicates whether the button occupies all the width available to it.\\n   */\\n  @Input() block?: ButtonSize;\\n\\n  /**\\n   * If button is disabled\\n   */\\n  @Input() @HostBinding(\'disabled\') disabled?: BooleanInput;\\n\\n  /**\\n   * The icon children\\n   */\\n  @ContentChildren(IconComponent) icons?: QueryList<IconComponent>;\\n\\n  private isFocus = false;\\n\\n  constructor(\\n    @Optional() @Host() private progressButtonComponent: ProgressButtonComponent\\n  ) {\\n  }\\n\\n  @HostListener(\'focus\')\\n  onFocus() {\\n    this.isFocus = true;\\n  }\\n\\n  @HostListener(\'blur\')\\n  onBlur() {\\n    this.isFocus = false;\\n  }\\n\\n  @HostBinding(\'class\')\\n  get hostClasses(): string {\\n    let cssClass = \'btn\';\\n\\n    if (this.color) {\\n      cssClass += ` btn-${this.color}`;\\n    }\\n\\n    if (this.size) {\\n      cssClass += ` btn-${this.size}`;\\n    }\\n\\n    if (this.block) {\\n      cssClass += \' btn-block\';\\n    }\\n\\n    if (isTrueBooleanInput(this.disabled)) {\\n      cssClass += \' disabled\';\\n    }\\n\\n    if (this.isFocus) {\\n      cssClass += \' focus--mouse\';\\n    }\\n\\n    if (this.icons?.length && !this.progressButtonComponent) {\\n      cssClass += \' btn-icon\';\\n    }\\n\\n    if (!!this.progressButtonComponent) {\\n      cssClass += \' btn-progress\';\\n    }\\n\\n    return cssClass;\\n  }\\n\\n}\\n","selector":"[itButton]","providers":[],"inputsClass":[{"name":"block","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndicates whether the button occupies all the width available to it.\\n","description":"<p>Indicates whether the button occupies all the width available to it.</p>\\n","line":26,"type":"ButtonSize","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf button is disabled\\n","description":"<p>If button is disabled</p>\\n","line":31,"type":"BooleanInput","decorators":[]},{"name":"itButton","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nButton color\\n","description":"<p>Button color</p>\\n","line":16,"type":"ButtonColor","decorators":[]},{"name":"size","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nButton size\\n","description":"<p>Button size</p>\\n","line":21,"type":"ButtonSize","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[{"name":"class","deprecated":false,"deprecationMessage":"","line":56,"type":"string","decorators":[]}],"hostListeners":[{"name":"blur","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":51},{"name":"focus","args":[],"argsDecorator":[],"deprecated":false,"deprecationMessage":"","line":46}],"propertiesClass":[{"name":"icons","deprecated":false,"deprecationMessage":"","type":"QueryList<IconComponent>","optional":true,"description":"<p>The icon children</p>\\n","line":36,"rawdescription":"\\n\\nThe icon children\\n","decorators":[{"name":"ContentChildren","stringifiedArguments":"IconComponent"}]},{"name":"isFocus","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38,"modifierKind":[121]}],"methodsClass":[{"name":"onBlur","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'blur\'"}]},{"name":"onFocus","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'focus\'"}]}],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"progressButtonComponent","type":"ProgressButtonComponent","deprecated":false,"deprecationMessage":""}],"line":38,"jsdoctags":[{"name":"progressButtonComponent","type":"ProgressButtonComponent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"hostClasses":{"name":"hostClasses","getSignature":{"name":"hostClasses","type":"string","returnType":"string","line":56}}}},{"name":"ForwardDirective","id":"directive-ForwardDirective-0d0d2df628d510d036b34f22217fd0e7b2a2030af8ffa482515dd3ffa3069cee144884184608f3ba1d2839be5c537bb0756136992d426e180180208560a1f883","file":"projects/design-angular-kit/src/lib/components/core/forward/forward.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { DOCUMENT } from \'@angular/common\';\\nimport { Directive, HostListener, Inject, Input } from \'@angular/core\';\\n\\n@Directive({\\n  selector: \'[itForward]\',\\n  host: {\'class\': \'forward\'}\\n})\\nexport class ForwardDirective {\\n\\n  /**\\n   * Indica, se HTMLElement, l\'elemento a cui navigare, o se stringa, il selettore che selezioner\xe0 l\'elemento a cui navigare.\\n  */\\n  @Input() set itForward(value: HTMLElement | string | undefined) { this._itForward = value; }\\n  get itForward(): HTMLElement | string | undefined { return this._itForward; }\\n  private _itForward: HTMLElement | string | undefined = undefined;\\n\\n  constructor(\\n    @Inject(DOCUMENT) private document?: Document\\n  ) { }\\n\\n  @HostListener(\'click\', [\'$event\'])\\n  onClick(event: any) {\\n    event.preventDefault();\\n    if (this.itForward) {\\n      if (typeof this.itForward === \'string\') {\\n        this.document?.querySelector(this.itForward)?.scrollIntoView({\\n          behavior: \'smooth\',\\n          block: \'start\',\\n          inline: \\"nearest\\"\\n        })\\n      } else if (this.itForward instanceof HTMLElement) {\\n        this.itForward.scrollIntoView({\\n          behavior: \'smooth\',\\n          block: \'start\',\\n          inline: \\"nearest\\"\\n        });\\n      }\\n    }\\n  }\\n\\n}\\n","selector":"[itForward]","providers":[],"inputsClass":[{"name":"itForward","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica, se HTMLElement, l\'elemento a cui navigare, o se stringa, il selettore che selezioner\xe0 l\'elemento a cui navigare.\\n","description":"<p>Indica, se HTMLElement, l&#39;elemento a cui navigare, o se stringa, il selettore che selezioner\xe0 l&#39;elemento a cui navigare.</p>\\n","line":13,"type":"HTMLElement | string | undefined","decorators":[]}],"outputsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"click","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":22}],"propertiesClass":[{"name":"_itForward","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"HTMLElement | string | undefined","optional":false,"description":"","line":15,"modifierKind":[121]}],"methodsClass":[{"name":"onClick","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'click\', [\'$event\']"}],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"document","type":"Document","deprecated":false,"deprecationMessage":"","optional":true}],"line":15,"jsdoctags":[{"name":"document","type":"Document","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},"accessors":{"itForward":{"name":"itForward","setSignature":{"name":"itForward","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"HTMLElement | string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":13,"rawdescription":"\\n\\nIndica, se HTMLElement, l\'elemento a cui navigare, o se stringa, il selettore che selezioner\xe0 l\'elemento a cui navigare.\\n","description":"<p>Indica, se HTMLElement, l&#39;elemento a cui navigare, o se stringa, il selettore che selezioner\xe0 l&#39;elemento a cui navigare.</p>\\n","jsdoctags":[{"name":"value","type":"HTMLElement | string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"itForward","type":"","returnType":"HTMLElement | string | undefined","line":14}}}},{"name":"PopoverDirective","id":"directive-PopoverDirective-cb69bc9406fe3882a0e2f541e09915fde82fdbbc729634ff6d53de95a111552e075fd085a3a562a214e47178333964b30a36f17d3e3cf8f247e8829b9844cccd","file":"projects/design-angular-kit/src/lib/components/core/popover/popover.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, Output } from \'@angular/core\';\\nimport { ElementPlacement } from \'../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { Popover } from \'bootstrap-italia\';\\n\\n@Directive({\\n  selector: \'[itPopover]\',\\n  exportAs: \'itPopover\'\\n})\\nexport class PopoverDirective implements AfterViewInit, OnDestroy {\\n\\n  /**\\n   * Define the popover content\\n   * @param content the popover content\\n   */\\n  @Input(\'itPopover\') set content(content: string) {\\n    this.element.setAttribute(\'data-bs-content\', content);\\n  }\\n\\n  /**\\n   * Define the popover title\\n   * @param title the popover title\\n   */\\n  @Input(\'popoverTitle\') set title(title: string | undefined) {\\n    if (title) {\\n      this.element.setAttribute(\'title\', title);\\n      this.element.setAttribute(\'data-bs-original-title\', title);\\n    }\\n  }\\n\\n\\n  /**\\n   * Define the popover placement\\n   * @param placement\\n   */\\n  @Input(\'popoverPlacement\') set placement(placement: ElementPlacement) {\\n    this.element.setAttribute(\'data-bs-placement\', placement);\\n  }\\n\\n  /**\\n   * Appends the popover to a specific element.\\n   * @param container\\n   */\\n  @Input(\'popoverContainer\') set container(container: \'body\' | string | undefined) {\\n    if (container) {\\n      this.element.setAttribute(\'data-container\', container);\\n    }\\n  }\\n\\n  /**\\n   * Indicates whether the title contains html\\n   * @param html true if contain html\\n   */\\n  @Input(\'popoverHtml\') set html(html: BooleanInput) {\\n    this.element.setAttribute(\'data-bs-html\', isTrueBooleanInput(html) ? \'true\' : \'false\');\\n  }\\n\\n  /**\\n   * How popover is triggered\\n   * - \'hover\': To open the Popover on hover of the mouse over the element\\n   * - \'focus\': To ignore popovers on the user\'s next click of an element other than the toggle element.\\n   * @param trigger\\n   */\\n  @Input(\'popoverTrigger\') set hover(trigger: \'click\' | \'hover\' | \'focus\' | \'manual\' | undefined) {\\n    if (trigger) {\\n      this.element.setAttribute(\'data-bs-trigger\', trigger);\\n    }\\n  }\\n\\n  /**\\n   * This event fires immediately when the show method is called.\\n   */\\n  @Output() onShow: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n   */\\n  @Output() onShown: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires immediately when the hide method is called.\\n   */\\n  @Output() onHide: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n   */\\n  @Output() onHidden: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires after the show event when the tooltip template has been added to the DOM.\\n   */\\n  @Output() onInserted: EventEmitter<Event> = new EventEmitter();\\n\\n  private readonly element: HTMLElement;\\n  private popover?: Popover;\\n\\n  constructor(\\n    private readonly _elementRef: ElementRef\\n  ) {\\n    this.element = this._elementRef.nativeElement;\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.element.setAttribute(\'data-bs-toggle\', \'popover\');\\n    this.popover = Popover.getOrCreateInstance(this.element);\\n\\n    this.element.addEventListener(\'show.bs.popover\', event => this.onShow.emit(event));\\n    this.element.addEventListener(\'shown.bs.popover\', event => this.onShown.emit(event));\\n    this.element.addEventListener(\'hide.bs.popover\', event => this.onHide.emit(event));\\n    this.element.addEventListener(\'hidden.bs.popover\', event => this.onHidden.emit(event));\\n    this.element.addEventListener(\'inserted.bs.popover\', event => this.onInserted.emit(event));\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.dispose();\\n  }\\n\\n  /**\\n   * Shows the popover of an item.\\n   */\\n  public show(): void {\\n    this.popover?.show();\\n  }\\n\\n  /**\\n   * Hide the popover of an element.\\n   */\\n  public hide(): void {\\n    this.popover?.hide();\\n  }\\n\\n  /**\\n   * Activate / Deactivate the popover of an element\\n   */\\n  public toggle(): void {\\n    this.popover?.toggle();\\n  }\\n\\n  /**\\n   * Hides and destroys the popover of an element.\\n   */\\n  public dispose(): void {\\n    this.popover?.dispose();\\n  }\\n\\n  /**\\n   * Gives the popover of an element a chance to be shown.\\n   */\\n  public enable(): void {\\n    this.popover?.enable();\\n  }\\n\\n  /**\\n   * Removes the ability to show the popover of an element.\\n   */\\n  public disable(): void {\\n    this.popover?.disable();\\n  }\\n\\n  /**\\n   * Toggles the possibility that the popover of an element is shown or hidden.\\n   */\\n  public toggleEnabled(): void {\\n    this.popover?.disable();\\n  }\\n\\n  /**\\n   * Updates the position of an element\'s popover.\\n   */\\n  public update(): void {\\n    this.popover?.disable();\\n  }\\n\\n}\\n","selector":"[itPopover]","providers":[],"inputsClass":[{"name":"itPopover","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":476,"end":514,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":477,"end":482,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the popover content</p>\\n","name":{"pos":483,"end":490,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"content"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nDefine the popover content\\n","description":"<p>Define the popover content</p>\\n","line":16,"type":"string","decorators":[]},{"name":"popoverContainer","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1189,"end":1209,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1190,"end":1195,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":1196,"end":1205,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"container"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nAppends the popover to a specific element.\\n","description":"<p>Appends the popover to a specific element.</p>\\n","line":44,"type":"\\"body\\" | string | undefined","decorators":[]},{"name":"popoverHtml","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1449,"end":1485,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1450,"end":1455,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>true if contain html</p>\\n","name":{"pos":1456,"end":1460,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"html"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nIndicates whether the title contains html\\n","description":"<p>Indicates whether the title contains html</p>\\n","line":54,"type":"BooleanInput","decorators":[]},{"name":"popoverPlacement","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":965,"end":985,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":966,"end":971,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":972,"end":981,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"placement"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nDefine the popover placement\\n","description":"<p>Define the popover placement</p>\\n","line":36,"type":"ElementPlacement","decorators":[]},{"name":"popoverTitle","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":675,"end":709,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":676,"end":681,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the popover title</p>\\n","name":{"pos":682,"end":687,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nDefine the popover title\\n","description":"<p>Define the popover title</p>\\n","line":24,"type":"string | undefined","decorators":[]},{"name":"popoverTrigger","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1861,"end":1879,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":1862,"end":1867,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":1868,"end":1875,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"trigger"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nHow popover is triggered\\n- \'hover\': To open the Popover on hover of the mouse over the element\\n- \'focus\': To ignore popovers on the user\'s next click of an element other than the toggle element.\\n","description":"<p>How popover is triggered</p>\\n<ul>\\n<li>&#39;hover&#39;: To open the Popover on hover of the mouse over the element</li>\\n<li>&#39;focus&#39;: To ignore popovers on the user&#39;s next click of an element other than the toggle element.</li>\\n</ul>\\n","line":64,"type":"\\"click\\" | \\"hover\\" | \\"focus\\" | \\"manual\\" | undefined","decorators":[]}],"outputsClass":[{"name":"onHidden","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).</p>\\n","line":88,"type":"EventEmitter<Event>"},{"name":"onHide","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the hide method is called.\\n","description":"<p>This event fires immediately when the hide method is called.</p>\\n","line":83,"type":"EventEmitter<Event>"},{"name":"onInserted","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires after the show event when the tooltip template has been added to the DOM.\\n","description":"<p>This event fires after the show event when the tooltip template has been added to the DOM.</p>\\n","line":93,"type":"EventEmitter<Event>"},{"name":"onShow","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the show method is called.\\n","description":"<p>This event fires immediately when the show method is called.</p>\\n","line":73,"type":"EventEmitter<Event>"},{"name":"onShown","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).</p>\\n","line":78,"type":"EventEmitter<Event>"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"element","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":95,"modifierKind":[121,144]},{"name":"popover","deprecated":false,"deprecationMessage":"","type":"Popover","optional":true,"description":"","line":96,"modifierKind":[121]}],"methodsClass":[{"name":"disable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves the ability to show the popover of an element.\\n","description":"<p>Removes the ability to show the popover of an element.</p>\\n","modifierKind":[123]},{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":143,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHides and destroys the popover of an element.\\n","description":"<p>Hides and destroys the popover of an element.</p>\\n","modifierKind":[123]},{"name":"enable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGives the popover of an element a chance to be shown.\\n","description":"<p>Gives the popover of an element a chance to be shown.</p>\\n","modifierKind":[123]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHide the popover of an element.\\n","description":"<p>Hide the popover of an element.</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":""},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows the popover of an item.\\n","description":"<p>Shows the popover of an item.</p>\\n","modifierKind":[123]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nActivate / Deactivate the popover of an element\\n","description":"<p>Activate / Deactivate the popover of an element</p>\\n","modifierKind":[123]},{"name":"toggleEnabled","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":164,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggles the possibility that the popover of an element is shown or hidden.\\n","description":"<p>Toggles the possibility that the popover of an element is shown or hidden.</p>\\n","modifierKind":[123]},{"name":"update","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the position of an element\'s popover.\\n","description":"<p>Updates the position of an element&#39;s popover.</p>\\n","modifierKind":[123]}],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":96,"jsdoctags":[{"name":"_elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"content":{"name":"content","setSignature":{"name":"content","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"content","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":16,"rawdescription":"\\n\\nDefine the popover content\\n","description":"<p>Define the popover content</p>\\n","jsdoctags":[{"name":{"pos":483,"end":490,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"content"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":477,"end":482,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the popover content</p>\\n"}]}},"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"title","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":24,"rawdescription":"\\n\\nDefine the popover title\\n","description":"<p>Define the popover title</p>\\n","jsdoctags":[{"name":{"pos":682,"end":687,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"pos":676,"end":681,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the popover title</p>\\n"}]}},"placement":{"name":"placement","setSignature":{"name":"placement","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"placement","type":"ElementPlacement","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":36,"rawdescription":"\\n\\nDefine the popover placement\\n","description":"<p>Define the popover placement</p>\\n","jsdoctags":[{"name":{"pos":972,"end":981,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"placement"},"type":"ElementPlacement","deprecated":false,"deprecationMessage":"","tagName":{"pos":966,"end":971,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}},"container":{"name":"container","setSignature":{"name":"container","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"container","type":"\\"body\\" | string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":44,"rawdescription":"\\n\\nAppends the popover to a specific element.\\n","description":"<p>Appends the popover to a specific element.</p>\\n","jsdoctags":[{"name":{"pos":1196,"end":1205,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"container"},"type":"\\"body\\" | string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"pos":1190,"end":1195,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}},"html":{"name":"html","setSignature":{"name":"html","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"html","type":"BooleanInput","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":54,"rawdescription":"\\n\\nIndicates whether the title contains html\\n","description":"<p>Indicates whether the title contains html</p>\\n","jsdoctags":[{"name":{"pos":1456,"end":1460,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"html"},"type":"BooleanInput","deprecated":false,"deprecationMessage":"","tagName":{"pos":1450,"end":1455,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>true if contain html</p>\\n"}]}},"hover":{"name":"hover","setSignature":{"name":"hover","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"trigger","type":"\\"click\\" | \\"hover\\" | \\"focus\\" | \\"manual\\" | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":64,"rawdescription":"\\n\\nHow popover is triggered\\n- \'hover\': To open the Popover on hover of the mouse over the element\\n- \'focus\': To ignore popovers on the user\'s next click of an element other than the toggle element.\\n","description":"<p>How popover is triggered</p>\\n<ul>\\n<li>&#39;hover&#39;: To open the Popover on hover of the mouse over the element</li>\\n<li>&#39;focus&#39;: To ignore popovers on the user&#39;s next click of an element other than the toggle element.</li>\\n</ul>\\n","jsdoctags":[{"name":{"pos":1868,"end":1875,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"trigger"},"type":"\\"click\\" | \\"hover\\" | \\"focus\\" | \\"manual\\" | undefined","deprecated":false,"deprecationMessage":"","tagName":{"pos":1862,"end":1867,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}}}},{"name":"TooltipDirective","id":"directive-TooltipDirective-c35ed82d09305c429777d945ebd3cabb16d2b49db6000d08ff4116db45a7763f9bfa5e5f6200453e6c47e33fa59c23ebf4335ef1c7d33765d544ad5c9bfcd581","file":"projects/design-angular-kit/src/lib/components/core/tooltip/tooltip.directive.ts","type":"directive","description":"","rawdescription":"\\n","sourceCode":"import { AfterViewInit, Directive, ElementRef, EventEmitter, Input, OnDestroy, Output } from \'@angular/core\';\\nimport { ElementPlacement } from \'../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { Tooltip } from \'bootstrap-italia\';\\n\\n@Directive({\\n  selector: \'[itTooltip]\',\\n  exportAs: \'itTooltip\'\\n})\\nexport class TooltipDirective implements AfterViewInit, OnDestroy {\\n\\n  /**\\n   * Define the tooltip title\\n   * @param title the tooltip title\\n   */\\n  @Input(\'itTooltip\') set title(title: string | undefined) {\\n    if (title) {\\n      // this.element.setAttribute(\\"title\\", title);\\n      this.element.setAttribute(\'data-bs-original-title\', title);\\n    }\\n  }\\n\\n  /**\\n   * Define the tooltip placement\\n   * @param placement\\n   */\\n  @Input(\'tooltipPlacement\') set placement(placement: ElementPlacement) {\\n    this.element.setAttribute(\'data-bs-placement\', placement);\\n  }\\n\\n  /**\\n   * Indicates whether the title contains html\\n   * @param html true if contain html\\n   */\\n  @Input(\'tooltipHtml\') set html(html: BooleanInput) {\\n    this.element.setAttribute(\'data-bs-html\', isTrueBooleanInput(html) ? \'true\' : \'false\');\\n  }\\n\\n  /**\\n   * This event fires immediately when the show method is called.\\n   */\\n  @Output() onShow: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n   */\\n  @Output() onShown: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires immediately when the hide method is called.\\n   */\\n  @Output() onHide: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n   */\\n  @Output() onHidden: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires after the show event when the tooltip template has been added to the DOM.\\n   */\\n  @Output() onInserted: EventEmitter<Event> = new EventEmitter();\\n\\n  private readonly element: HTMLElement;\\n  private tooltip?: Tooltip;\\n\\n  constructor(\\n    private readonly _elementRef: ElementRef\\n  ) {\\n    this.element = this._elementRef.nativeElement;\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.element.setAttribute(\'data-bs-toggle\', \'tooltip\');\\n    this.tooltip = Tooltip.getOrCreateInstance(this.element);\\n\\n    this.element.addEventListener(\'show.bs.tooltip\', event => this.onShow.emit(event));\\n    this.element.addEventListener(\'shown.bs.tooltip\', event => this.onShown.emit(event));\\n    this.element.addEventListener(\'hide.bs.tooltip\', event => this.onHide.emit(event));\\n    this.element.addEventListener(\'hidden.bs.tooltip\', event => this.onHidden.emit(event));\\n    this.element.addEventListener(\'inserted.bs.tooltip\', event => this.onInserted.emit(event));\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.dispose();\\n  }\\n\\n  /**\\n   * Shows the tooltip of an item.\\n   */\\n  public show(): void {\\n    this.tooltip?.show();\\n  }\\n\\n  /**\\n   * Hide the tooltip of an element.\\n   */\\n  public hide(): void {\\n    this.tooltip?.hide();\\n  }\\n\\n  /**\\n   * Activate / Deactivate the tooltip of an element\\n   */\\n  public toggle(): void {\\n    this.tooltip?.toggle();\\n  }\\n\\n  /**\\n   * Hides and destroys the tooltip of an element.\\n   */\\n  public dispose(): void {\\n    this.tooltip?.dispose();\\n  }\\n\\n  /**\\n   * Gives the tooltip of an element a chance to be shown.\\n   */\\n  public enable(): void {\\n    this.tooltip?.enable();\\n  }\\n\\n  /**\\n   * Removes the ability to show the tooltip of an element.\\n   */\\n  public disable(): void {\\n    this.tooltip?.disable();\\n  }\\n\\n  /**\\n   * Toggles the possibility that the tooltip of an element is shown or hidden.\\n   */\\n  public toggleEnabled(): void {\\n    this.tooltip?.disable();\\n  }\\n\\n  /**\\n   * Updates the position of an element\'s tooltip.\\n   */\\n  public update(): void {\\n    this.tooltip?.disable();\\n  }\\n\\n}\\n","selector":"[itTooltip]","providers":[],"inputsClass":[{"name":"itTooltip","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":474,"end":508,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":475,"end":480,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the tooltip title</p>\\n","name":{"pos":481,"end":486,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nDefine the tooltip title\\n","description":"<p>Define the tooltip title</p>\\n","line":16,"type":"string | undefined","decorators":[]},{"name":"tooltipHtml","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":986,"end":1022,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":987,"end":992,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>true if contain html</p>\\n","name":{"pos":993,"end":997,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"html"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nIndicates whether the title contains html\\n","description":"<p>Indicates whether the title contains html</p>\\n","line":35,"type":"BooleanInput","decorators":[]},{"name":"tooltipPlacement","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":763,"end":783,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":764,"end":769,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"","name":{"pos":770,"end":779,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"placement"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nDefine the tooltip placement\\n","description":"<p>Define the tooltip placement</p>\\n","line":27,"type":"ElementPlacement","decorators":[]}],"outputsClass":[{"name":"onHidden","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).</p>\\n","line":57,"type":"EventEmitter<Event>"},{"name":"onHide","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the hide method is called.\\n","description":"<p>This event fires immediately when the hide method is called.</p>\\n","line":52,"type":"EventEmitter<Event>"},{"name":"onInserted","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires after the show event when the tooltip template has been added to the DOM.\\n","description":"<p>This event fires after the show event when the tooltip template has been added to the DOM.</p>\\n","line":62,"type":"EventEmitter<Event>"},{"name":"onShow","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the show method is called.\\n","description":"<p>This event fires immediately when the show method is called.</p>\\n","line":42,"type":"EventEmitter<Event>"},{"name":"onShown","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).</p>\\n","line":47,"type":"EventEmitter<Event>"}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"propertiesClass":[{"name":"element","deprecated":false,"deprecationMessage":"","type":"HTMLElement","optional":false,"description":"","line":64,"modifierKind":[121,144]},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"Tooltip","optional":true,"description":"","line":65,"modifierKind":[121]}],"methodsClass":[{"name":"disable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves the ability to show the tooltip of an element.\\n","description":"<p>Removes the ability to show the tooltip of an element.</p>\\n","modifierKind":[123]},{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHides and destroys the tooltip of an element.\\n","description":"<p>Hides and destroys the tooltip of an element.</p>\\n","modifierKind":[123]},{"name":"enable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGives the tooltip of an element a chance to be shown.\\n","description":"<p>Gives the tooltip of an element a chance to be shown.</p>\\n","modifierKind":[123]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHide the tooltip of an element.\\n","description":"<p>Hide the tooltip of an element.</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":""},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows the tooltip of an item.\\n","description":"<p>Shows the tooltip of an item.</p>\\n","modifierKind":[123]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nActivate / Deactivate the tooltip of an element\\n","description":"<p>Activate / Deactivate the tooltip of an element</p>\\n","modifierKind":[123]},{"name":"toggleEnabled","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggles the possibility that the tooltip of an element is shown or hidden.\\n","description":"<p>Toggles the possibility that the tooltip of an element is shown or hidden.</p>\\n","modifierKind":[123]},{"name":"update","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the position of an element\'s tooltip.\\n","description":"<p>Updates the position of an element&#39;s tooltip.</p>\\n","modifierKind":[123]}],"implements":["AfterViewInit","OnDestroy"],"constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"_elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"title":{"name":"title","setSignature":{"name":"title","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"title","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":16,"rawdescription":"\\n\\nDefine the tooltip title\\n","description":"<p>Define the tooltip title</p>\\n","jsdoctags":[{"name":{"pos":481,"end":486,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"title"},"type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"pos":475,"end":480,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the tooltip title</p>\\n"}]}},"placement":{"name":"placement","setSignature":{"name":"placement","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"placement","type":"ElementPlacement","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":27,"rawdescription":"\\n\\nDefine the tooltip placement\\n","description":"<p>Define the tooltip placement</p>\\n","jsdoctags":[{"name":{"pos":770,"end":779,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"placement"},"type":"ElementPlacement","deprecated":false,"deprecationMessage":"","tagName":{"pos":764,"end":769,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]}},"html":{"name":"html","setSignature":{"name":"html","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"html","type":"BooleanInput","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":35,"rawdescription":"\\n\\nIndicates whether the title contains html\\n","description":"<p>Indicates whether the title contains html</p>\\n","jsdoctags":[{"name":{"pos":993,"end":997,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"html"},"type":"BooleanInput","deprecated":false,"deprecationMessage":"","tagName":{"pos":987,"end":992,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>true if contain html</p>\\n"}]}}}}],"wx":[{"name":"AbstractComponent","id":"component-AbstractComponent-d249a0e51a0ac53100a2755097ef57eb757818daa84517c9ed5e1e7dfaf977cd8e97c13715eea45af74a86bb18280cb284812574e49435e67655b652da8af5ad","file":"projects/design-angular-kit/src/lib/abstracts/abstract.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[]}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>"}],"propertiesClass":[{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144]},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144]},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144]},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]}],"methodsClass":[{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectorRef,\\n  Component,\\n  ElementRef,\\n  EventEmitter,\\n  inject,\\n  Input,\\n  OnChanges,\\n  Output,\\n  Renderer2,\\n  SimpleChanges\\n} from \'@angular/core\';\\n\\n@Component({ template: \'\' })\\nexport abstract class AbstractComponent implements AfterViewInit, OnChanges {\\n\\n  /**\\n   * The element ID\\n   */\\n  @Input() id: string = this.getDefaultId();\\n\\n  /**\\n   * Fired when component input attributes was changed\\n   */\\n  @Output() public valueChanges: EventEmitter<void>;\\n\\n  /**\\n   * Counter of active instances\\n   * @private\\n   */\\n  private static instances = 0;\\n\\n\\n  protected readonly _renderer: Renderer2; // Injected\\n  protected readonly _elementRef: ElementRef; // Injected\\n  protected readonly _changeDetectorRef: ChangeDetectorRef; // Injected\\n\\n  constructor() {\\n    this._renderer = inject(Renderer2);\\n    this._elementRef = inject(ElementRef);\\n    this._changeDetectorRef = inject(ChangeDetectorRef);\\n\\n    this.valueChanges = new EventEmitter<void>();\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this._renderer.removeAttribute(this._elementRef.nativeElement, \'id\');\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges): void {\\n    this.valueChanges.next(); // The inputs were changed\\n  }\\n\\n  /**\\n   * Generate unique id for components\\n   * @private\\n   */\\n  private getDefaultId(): string {\\n    const name = this.constructor.name.replace(\'Component\', \'\');\\n    const kebabName = name.replace(/[A-Z]+(?![a-z])|[A-Z]/g, ($, ofs) => (ofs ? \'-\' : \'\') + $.toLowerCase());\\n    return `it-${kebabName}-${AbstractComponent.instances++}`;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":37},"implements":["AfterViewInit","OnChanges"]},{"name":"AbstractFormComponent","id":"component-AbstractFormComponent-b375fd3837ef15052ebaf1fb8a030bd2de70a3070f30c67e667bfa5e6ab3ed977c2363d32e02369214f2c116b9dcc4cae64b97a54c4e801b32a169f392e06bb6","file":"projects/design-angular-kit/src/lib/abstracts/abstract-form.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[]},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n"},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}]},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}]},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}]},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n"},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n"},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":""},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ControlValueAccessor, FormControl, NgControl, ValidatorFn } from \'@angular/forms\';\\nimport { Component, DoCheck, Input, OnInit, Optional, Self } from \'@angular/core\';\\nimport { AbstractComponent } from \'./abstract.component\';\\nimport { BooleanInput, isFalseBooleanInput, isTrueBooleanInput } from \'../utils/boolean-input\';\\nimport { Observable } from \'rxjs\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\n\\n@Component({ template: \'\' })\\nexport abstract class AbstractFormComponent<T = any> extends AbstractComponent implements OnInit, ControlValueAccessor, DoCheck {\\n\\n  /**\\n   * The label of form control\\n   */\\n  @Input() label?: string;\\n\\n  /**\\n   * Validation color display mode (validation triggered if field is touched or not pristine)\\n   * - <b>true</b>: Always show the validation color\\n   * - <b>false</b>: Never show validation color\\n   * - <b>only-valid</b>: Show only valid validation color\\n   * - <b>only-invalid</b>: Show only invalid validation color\\n   * @default <b>only-invalid</b>: Show only invalid validation color\\n   */\\n  @Input() validationMode: BooleanInput | \'only-valid\' | \'only-invalid\' = \'only-invalid\';\\n\\n  /**\\n   * Set the disabled state\\n   */\\n  @Input() set disabled(isDisabled: BooleanInput) {\\n    this.setDisabledState(isTrueBooleanInput(isDisabled));\\n  }\\n\\n  /**\\n   * Internal form control\\n   */\\n  control: FormControl;\\n\\n  constructor(\\n    protected readonly _translateService: TranslateService,\\n    @Self() @Optional() protected readonly _ngControl: NgControl\\n  ) {\\n    super();\\n    this.control = new FormControl();\\n    this._ngControl && (this._ngControl.valueAccessor = this);\\n  }\\n\\n  /**\\n   * Check if field is invalid (Validation failed)\\n   */\\n  get isInvalid(): boolean | undefined {\\n    if (this.validationMode === \'only-valid\' || (this.validationMode !== \'only-invalid\' && isFalseBooleanInput(this.validationMode))) {\\n      return undefined;\\n    }\\n\\n    if (this._ngControl) {\\n      return this._ngControl.invalid === true && (!this._ngControl.pristine || this._ngControl.touched === true);\\n    }\\n    return this.control.invalid && (!this.control.pristine || this.control.touched);\\n  }\\n\\n  /**\\n   * Check if field is valid (Validation successful)\\n   */\\n  get isValid(): boolean | undefined {\\n    if (this.validationMode === \'only-invalid\' || (this.validationMode !== \'only-valid\' && isFalseBooleanInput(this.validationMode))) {\\n      return undefined;\\n    }\\n\\n    if (this._ngControl) {\\n      return this._ngControl.valid === true && (!this._ngControl.pristine || this._ngControl.touched === true);\\n    }\\n    return this.control.valid && (!this.control.pristine || this.control.touched);\\n  }\\n\\n  /**\\n   * Return the invalid message string from TranslateService\\n   */\\n  get invalidMessage(): Observable<string> {\\n    if (this.control.hasError(\'required\')) {\\n      return this._translateService.get(\'it.errors.required-field\');\\n    }\\n\\n    return this._translateService.get(\'it.errors.invalid-field\');\\n  }\\n\\n  ngOnInit(): void {\\n    if (this._ngControl?.control) {\\n      this.control.setValidators((this._ngControl.control as FormControl).validator);\\n    }\\n  }\\n\\n  onChange = (_: T) => {\\n  };\\n\\n  onTouched = () => {\\n  };\\n\\n  registerOnChange(fn: any): void {\\n    this.control.valueChanges.subscribe(fn);\\n    this.onChange = fn;\\n  }\\n\\n  registerOnTouched(fn: any): void {\\n    this.onTouched = fn;\\n  }\\n\\n  setDisabledState(isDisabled: boolean): void {\\n    if (isDisabled) {\\n      return this.control.disable();\\n    }\\n    this.control.enable();\\n  }\\n\\n  writeValue(value: T): void {\\n    this.control.setValue(value, { emitEvent: false });\\n  }\\n\\n  /**\\n   * Mark the control as touched\\n   */\\n  markAsTouched(): void {\\n    if (!this.control.touched) {\\n      this.onTouched();\\n    }\\n  }\\n\\n  /**\\n   * Fired to check if form control is touched\\n   */\\n  ngDoCheck() {\\n    if (!this._ngControl?.control) {\\n      return;\\n    }\\n\\n    const ngControl = this._ngControl.control;\\n    if (this.control.touched !== ngControl.touched) {\\n      if (ngControl.touched) {\\n        this.control.markAsTouched();\\n      } else {\\n        this.control.markAsUntouched();\\n      }\\n      this._changeDetectorRef.detectChanges();\\n    }\\n    if (this.control.pristine !== ngControl.pristine) {\\n      if (ngControl.pristine) {\\n        this.control.markAsPristine();\\n      } else {\\n        this.control.markAsDirty();\\n      }\\n      this._changeDetectorRef.detectChanges();\\n    }\\n  }\\n\\n  /**\\n   * Add the validators in control and parent control\\n   * @param validators the validators\\n   * @protected\\n   */\\n  protected addValidators(validators: ValidatorFn | ValidatorFn[]): void {\\n    if (!Array.isArray(validators)) {\\n      validators = [validators];\\n    }\\n\\n    validators.forEach(validator => {\\n      if (!this.control.hasValidator(validator)) {\\n        this.control.addValidators(validator);\\n      }\\n\\n      if (this._ngControl?.control && !this._ngControl.control.hasValidator(validator)) {\\n        this._ngControl.control.addValidators(validator);\\n      }\\n    });\\n  }\\n\\n  /**\\n   * Reports whether the control with the given path has the error specified. <br/>\\n   * If the control is not present, false is returned.\\n   * @param errorCode The code of the error to check\\n   * @param path A list of control names that designates how to move from the current control\\n   * to the control that should be queried for errors.\\n   * @returns whether the given error is present in the control at the given path.\\n   */\\n  public hasError(errorCode: string, path?: Array<string | number> | string): boolean {\\n    if (this._ngControl) {\\n      return this._ngControl.hasError(errorCode, path);\\n    }\\n    return this.control.hasError(errorCode, path);\\n  }\\n\\n  /**\\n   * Reports error data for the control with the given path.\\n   * @param errorCode The code of the error to check\\n   * @param path A list of control names that designates how to move from the current control\\n   * to the control that should be queried for errors.\\n   * @returns error data for that particular error. If the control or error is not present,\\n   * null is returned.\\n   */\\n  public getError(errorCode: string, path?: Array<string | number> | string): any {\\n    if (this._ngControl) {\\n      return this._ngControl.getError(errorCode, path);\\n    }\\n    return this.control.getError(errorCode, path);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""},{"name":"_ngControl","type":"NgControl","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"_translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_ngControl","type":"NgControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":"AbstractComponent","implements":["OnInit","ControlValueAccessor","DoCheck"],"accessors":{"disabled":{"name":"disabled","setSignature":{"name":"disabled","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"isDisabled","type":"BooleanInput","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":29,"rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","jsdoctags":[{"name":"isDisabled","type":"BooleanInput","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}},"isInvalid":{"name":"isInvalid","getSignature":{"name":"isInvalid","type":"","returnType":"boolean | undefined","line":50,"rawdescription":"\\n\\nCheck if field is invalid (Validation failed)\\n","description":"<p>Check if field is invalid (Validation failed)</p>\\n"}},"isValid":{"name":"isValid","getSignature":{"name":"isValid","type":"","returnType":"boolean | undefined","line":64,"rawdescription":"\\n\\nCheck if field is valid (Validation successful)\\n","description":"<p>Check if field is valid (Validation successful)</p>\\n"}},"invalidMessage":{"name":"invalidMessage","getSignature":{"name":"invalidMessage","type":"","returnType":"Observable<string>","line":78,"rawdescription":"\\n\\nReturn the invalid message string from TranslateService\\n","description":"<p>Return the invalid message string from TranslateService</p>\\n"}}}},{"name":"AccordionComponent","id":"component-AccordionComponent-c129cf496fad93c1249e6a4854f0ef1bd1ca6c7ef12d8cea1a0c124a8fede34ce3b1b7d9172b83aadd612c26d4672a1f4503189fa6be41b60df1fc94838038be","file":"projects/design-angular-kit/src/lib/components/core/accordion/accordion.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itAccordion","inputs":[],"outputs":[],"providers":[],"selector":"it-accordion[title]","styleUrls":[],"styles":[],"templateUrl":["./accordion.component.html"],"viewProviders":[],"inputsClass":[{"name":"title","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAccordion Title\\n","description":"<p>Accordion Title</p>\\n","line":15,"type":"string","decorators":[]},{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":27,"type":"string","decorators":[],"inheritance":{"file":"CollapseComponent"}},{"name":"multi","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEnable multiple collapse\\n","description":"<p>Enable multiple collapse</p>\\n","line":17,"type":"BooleanInput","decorators":[],"inheritance":{"file":"CollapseComponent"}},{"name":"opened","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggles the collapsible element on invocation\\n","description":"<p>Toggles the collapsible element on invocation</p>\\n","line":22,"type":"BooleanInput","decorators":[],"inheritance":{"file":"CollapseComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"onHidden","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).</p>\\n","line":47,"type":"EventEmitter<Event>","inheritance":{"file":"CollapseComponent"}},{"name":"onHide","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the hide method is called.\\n","description":"<p>This event fires immediately when the hide method is called.</p>\\n","line":42,"type":"EventEmitter<Event>","inheritance":{"file":"CollapseComponent"}},{"name":"onShow","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the show method is called.\\n","description":"<p>This event fires immediately when the show method is called.</p>\\n","line":32,"type":"EventEmitter<Event>","inheritance":{"file":"CollapseComponent"}},{"name":"onShown","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).</p>\\n","line":37,"type":"EventEmitter<Event>","inheritance":{"file":"CollapseComponent"}},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"isCollapsed","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"collapse","deprecated":false,"deprecationMessage":"","type":"Collapse","optional":true,"description":"","line":50,"modifierKind":[121],"inheritance":{"file":"CollapseComponent"}},{"name":"collapseDiv","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLDivElement>","optional":true,"description":"","line":52,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'collapse\'"}],"modifierKind":[121],"inheritance":{"file":"CollapseComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEliminates the possibility of an item being resealable\\n","description":"<p>Eliminates the possibility of an item being resealable</p>\\n","modifierKind":[123],"inheritance":{"file":"CollapseComponent"}},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHides a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been hidden (onHidden Event)\\n","description":"<p>Hides a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been hidden (onHidden Event)</p>\\n","modifierKind":[123],"inheritance":{"file":"CollapseComponent"}},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been shown (onShown event).\\n","description":"<p>Shows a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been shown (onShown event).</p>\\n","modifierKind":[123],"inheritance":{"file":"CollapseComponent"}},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggle a collapsible item to show or hide it.\\nNOTE: Returns to the caller before the collapsable element has actually been shown or hidden (onShown and onHidden events)\\n","description":"<p>Toggle a collapsible item to show or hide it.\\nNOTE: Returns to the caller before the collapsable element has actually been shown or hidden (onShown and onHidden events)</p>\\n","modifierKind":[123],"inheritance":{"file":"CollapseComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { CollapseComponent } from \'../collapse/collapse.component\';\\n\\n@Component({\\n  selector: \'it-accordion[title]\',\\n  templateUrl: \'./accordion.component.html\',\\n  exportAs: \'itAccordion\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class AccordionComponent extends CollapseComponent {\\n\\n  /**\\n   * Accordion Title\\n   */\\n  @Input() title!: string;\\n\\n  isCollapsed: boolean = true;\\n\\n  override ngAfterViewInit(): void {\\n    super.ngAfterViewInit();\\n    this._renderer.removeAttribute(this._elementRef.nativeElement, \'title\');\\n\\n    this.isCollapsed = !this.isOpenedOnStart;\\n    this.onHide.subscribe(() => {\\n      this.isCollapsed = true;\\n      this._changeDetectorRef.detectChanges();\\n    });\\n    this.onShow.subscribe(() => {\\n      this.isCollapsed = false;\\n      this._changeDetectorRef.detectChanges();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"CollapseComponent","templateData":"<div class=\\"accordion\\">\\n  <div class=\\"accordion-item\\">\\n\\n    <h2 class=\\"accordion-header\\" id=\\"collapse-{{id}}-heading\\">\\n      <button\\n        class=\\"accordion-button\\"\\n        type=\\"button\\"\\n        data-bs-toggle=\\"collapse\\"\\n        [class.collapsed]=\\"isCollapsed\\"\\n        [attr.data-bs-target]=\\"\'#collapse-\' + id\\"\\n        [attr.aria-controls]=\\"\'collapse-\' + id\\"\\n        [attr.aria-expanded]=\\"isOpenedOnStart ? \'true\' : \'false\'\\">\\n        {{title}}\\n      </button>\\n    </h2>\\n\\n    <div #collapse id=\\"collapse-{{id}}\\" role=\\"region\\"\\n         class=\\"accordion-collapse collapse {{class}}\\"\\n         [attr.aria-labelledby]=\\"\'collapse-\' + id + \'-heading\'\\">\\n\\n      <div class=\\"accordion-body\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n"},{"name":"AlertComponent","id":"component-AlertComponent-3d7c0e564f1adcc910dcf0686a493e2e91b60b543273d3a1f80fa4b5beaa722995125304f9fddd51dfc5f28004bf37f2524b1dc2c638ae96a4f178b96ba0f368","file":"projects/design-angular-kit/src/lib/components/core/alert/alert.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itAlert","inputs":[],"outputs":[],"providers":[],"selector":"it-alert","styleUrls":["./alert.component.scss"],"styles":[],"templateUrl":["./alert.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","defaultValue":"\'info\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":658,"end":675,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":659,"end":666,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>info</p>\\n"}],"rawdescription":"\\n\\nThe alert color\\n","description":"<p>The alert color</p>\\n","line":20,"type":"AlertColor","decorators":[]},{"name":"dismissible","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nInserts the close button\\n","description":"<p>Inserts the close button</p>\\n","line":25,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"onClose","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the instance\'s close method is called.\\n","description":"<p>This event fires immediately when the instance&#39;s close method is called.</p>\\n","line":30,"type":"EventEmitter<Event>"},{"name":"onClosed","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires when the alert has been closed (it will wait for CSS transitions to complete).\\n","description":"<p>This event fires when the alert has been closed (it will wait for CSS transitions to complete).</p>\\n","line":35,"type":"EventEmitter<Event>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"alert","deprecated":false,"deprecationMessage":"","type":"Alert","optional":true,"description":"","line":37,"modifierKind":[121]},{"name":"alertElement","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLDivElement>","optional":true,"description":"","line":39,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'alertElement\'"}],"modifierKind":[121]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nClose an alert by removing it from the DOM.\\nIf the `.fade` and `.show` classes are present in the element, the alert will be closed with a disappearing effect.\\n","description":"<p>Close an alert by removing it from the DOM.\\nIf the <code>.fade</code> and <code>.show</code> classes are present in the element, the alert will be closed with a disappearing effect.</p>\\n","modifierKind":[123]},{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe alert is removed\\n","description":"<p>The alert is removed</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from \'@angular/core\';\\nimport { AlertColor } from \'../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { Alert } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-alert\',\\n  templateUrl: \'./alert.component.html\',\\n  styleUrls: [\'./alert.component.scss\'],\\n  exportAs: \'itAlert\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class AlertComponent extends AbstractComponent {\\n\\n  /**\\n   * The alert color\\n   * @default info\\n   */\\n  @Input() color: AlertColor = \'info\';\\n\\n  /**\\n   * Inserts the close button\\n   */\\n  @Input() dismissible?: BooleanInput;\\n\\n  /**\\n   * This event fires immediately when the instance\'s close method is called.\\n   */\\n  @Output() onClose: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires when the alert has been closed (it will wait for CSS transitions to complete).\\n   */\\n  @Output() onClosed: EventEmitter<Event> = new EventEmitter();\\n\\n  private alert?: Alert;\\n\\n  @ViewChild(\'alertElement\') private alertElement?: ElementRef<HTMLDivElement>;\\n\\n\\n  get isDismissible(): boolean {\\n    return isTrueBooleanInput(this.dismissible);\\n  }\\n\\n  override ngAfterViewInit() {\\n    super.ngAfterViewInit();\\n\\n    if (this.alertElement) {\\n      const element = this.alertElement.nativeElement;\\n      this.alert = Alert.getOrCreateInstance(element);\\n\\n      element.addEventListener(\'close.bs.alert\', event => this.onClose.emit(event));\\n      element.addEventListener(\'closed.bs.alert\', event => this.onClosed.emit(event));\\n    }\\n  }\\n\\n  /**\\n   * Close an alert by removing it from the DOM.\\n   * If the `.fade` and `.show` classes are present in the element, the alert will be closed with a disappearing effect.\\n   */\\n  public close(): void {\\n    this.alert?.close();\\n  }\\n\\n  /**\\n   * The alert is removed\\n   */\\n  public dispose(): void {\\n    this.alert?.dispose();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".alert-heading:empty {\\n  display: none;\\n}\\n","styleUrl":"./alert.component.scss"}],"stylesData":"","extends":"AbstractComponent","accessors":{"isDismissible":{"name":"isDismissible","getSignature":{"name":"isDismissible","type":"boolean","returnType":"boolean","line":42}}},"templateData":"<div class=\\"alert alert-{{color}}\\" #alertElement\\n     [class.alert-dismissible]=\\"isDismissible\\"\\n     [class.fade]=\\"isDismissible\\"\\n     [class.show]=\\"isDismissible\\"\\n     role=\\"alert\\">\\n  <h4 class=\\"alert-heading\\">\\n    <ng-content select=\\"[heading]\\"></ng-content>\\n  </h4>\\n\\n  <ng-content></ng-content>\\n\\n  <button *ngIf=\\"isDismissible\\"\\n          type=\\"button\\"\\n          class=\\"btn-close\\"\\n          data-bs-dismiss=\\"alert\\"\\n          [attr.aria-label]=\\"\'it.core.close-alert\'|translate\\">\\n    <it-icon name=\\"close\\"></it-icon>\\n  </button>\\n</div>\\n"},{"name":"BackButtonComponent","id":"component-BackButtonComponent-8e2dc927869c54ac256c561602f42060580a668456904c6f77e14c48a8b0905ea24cd068538380aad296a32b6e82991c81a19ade1727037c48b01ce7586f9db9","file":"projects/design-angular-kit/src/lib/components/navigation/back-button/back-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itBackButton","inputs":[],"outputs":[],"providers":[],"selector":"it-back-button","styleUrls":[],"styles":[],"templateUrl":["./back-button.component.html"],"viewProviders":[],"inputsClass":[{"name":"backFn","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1076,"end":1200,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1077,"end":1084,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>backCbFn = this.errorCallback.bind(this);\\n(errorCallback is your function, pass backCbFn to the component)</p>\\n"}],"rawdescription":"\\n\\nCustom back logic <br/>\\n\\nNOTE: to use \'this\' need bind function  <br/>\\n```html\\n(errorCallback is your function, pass backCbFn to the component)\\n```","description":"<p>Custom back logic <br/></p>\\n<p>NOTE: to use &#39;this&#39; need bind function  <br/></p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">(errorCallback is your function, pass backCbFn to the component)</code></pre></div>","line":48,"type":"function","decorators":[]},{"name":"buttonStyle","defaultValue":"\'button\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":546,"end":565,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":547,"end":554,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>button</p>\\n"}],"rawdescription":"\\n\\nBack button style\\n- <b>link</b>: use a link with icon and text\\n- <b>button</b>: use a button with icon and text\\n","description":"<p>Back button style</p>\\n<ul>\\n<li><b>link</b>: use a link with icon and text</li>\\n<li><b>button</b>: use a button with icon and text</li>\\n</ul>\\n","line":19,"type":"\\"link\\" | \\"button\\"","decorators":[]},{"name":"direction","defaultValue":"\'left\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":725,"end":742,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":726,"end":733,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>left</p>\\n"}],"rawdescription":"\\n\\nButton direction\\n- <b>left</b>: Back direction\\n- <b>up</b>: Upper direction\\n","description":"<p>Button direction</p>\\n<ul>\\n<li><b>left</b>: Back direction</li>\\n<li><b>up</b>: Upper direction</li>\\n</ul>\\n","line":27,"type":"\\"left\\" | \\"up\\"","decorators":[]},{"name":"showIcon","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":823,"end":840,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":824,"end":831,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nShow/Hide icon\\n","description":"<p>Show/Hide icon</p>\\n","line":33,"type":"BooleanInput","decorators":[]},{"name":"showText","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":917,"end":934,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":918,"end":925,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nShow/Hide text\\n","description":"<p>Show/Hide text</p>\\n","line":39,"type":"BooleanInput","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_location","deprecated":false,"deprecationMessage":"","type":"Location","optional":false,"description":"","line":59,"modifierKind":[123,144]}],"methodsClass":[{"name":"goBack","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGo back function\\n","description":"<p>Go back function</p>\\n","modifierKind":[123],"jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { Location } from \'@angular/common\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-back-button\',\\n  templateUrl: \'./back-button.component.html\',\\n  exportAs: \'itBackButton\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class BackButtonComponent {\\n\\n  /**\\n   * Back button style\\n   * - <b>link</b>: use a link with icon and text\\n   * - <b>button</b>: use a button with icon and text\\n   * @default button\\n   */\\n  @Input() buttonStyle: \'link\' | \'button\' = \'button\';\\n\\n  /**\\n   * Button direction\\n   * - <b>left</b>: Back direction\\n   * - <b>up</b>: Upper direction\\n   * @default left\\n   */\\n  @Input() direction: \'left\' | \'up\' = \'left\';\\n\\n  /**\\n   * Show/Hide icon\\n   * @default true\\n   */\\n  @Input() showIcon: BooleanInput = true;\\n\\n  /**\\n   * Show/Hide text\\n   * @default true\\n   */\\n  @Input() showText: BooleanInput = true;\\n\\n  /**\\n   * Custom back logic <br/>\\n   *\\n   * NOTE: to use \'this\' need bind function  <br/>\\n   * @example backCbFn = this.errorCallback.bind(this);\\n   * (errorCallback is your function, pass backCbFn to the component)\\n   */\\n  @Input() backFn?: (location: Location) => void;\\n\\n  get isShowIcon(): boolean {\\n    return isTrueBooleanInput(this.showIcon);\\n  }\\n\\n  get isShowText(): boolean {\\n    return isTrueBooleanInput(this.showText);\\n  }\\n\\n  constructor(\\n    public readonly _location: Location\\n  ) {\\n  }\\n\\n  /**\\n   * Go back function\\n   */\\n  public goBack(event: Event): void {\\n    event.preventDefault();\\n    if (this.backFn) {\\n      return this.backFn(this._location);\\n    }\\n\\n    this._location.back();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":""}],"line":56,"jsdoctags":[{"name":"_location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"isShowIcon":{"name":"isShowIcon","getSignature":{"name":"isShowIcon","type":"boolean","returnType":"boolean","line":50}},"isShowText":{"name":"isShowText","getSignature":{"name":"isShowText","type":"boolean","returnType":"boolean","line":54}}},"templateData":"<a *ngIf=\\"buttonStyle === \'link\'\\" href=\\"#\\" class=\\"go-back\\" (click)=\\"goBack($event)\\">\\n  <ng-container *ngTemplateOutlet=\\"content\\"></ng-container>\\n</a>\\n\\n<button *ngIf=\\"buttonStyle === \'button\'\\" itButton=\\"primary\\" class=\\"go-back\\" (click)=\\"goBack($event)\\">\\n  <ng-container *ngTemplateOutlet=\\"content\\"></ng-container>\\n</button>\\n\\n<ng-template #content>\\n  <it-icon *ngIf=\\"isShowIcon\\"\\n           size=\\"sm\\"\\n           [name]=\\"direction === \'left\' ? \'arrow-left\' : \'arrow-up\'\\"\\n           [color]=\\"buttonStyle === \'link\' ? \'primary\' : \'white\'\\"\\n           [class.me-2]=\\"isShowText\\"></it-icon>\\n\\n  <span [class.visually-hidden]=\\"!isShowText\\">\\n    {{(direction === \'left\' ? \'it.navigation.go-back\' : \'it.navigation.upper-level\') | translate}}\\n  </span>\\n</ng-template>\\n"},{"name":"BackToTopComponent","id":"component-BackToTopComponent-bd4d61dc9c3432ba3fa5948c413f5dd93c42bc68d186fd7a9e7cbc56c9051f310c022c8b15b8e8e91215cbf5f9276ee28a2ba93dd3a4dedf8efbe10473393dab","file":"projects/design-angular-kit/src/lib/components/navigation/back-to-top/back-to-top.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itBackToTop","inputs":[],"outputs":[],"providers":[],"selector":"it-back-to-top","styleUrls":[],"styles":[],"templateUrl":["./back-to-top.component.html"],"viewProviders":[],"inputsClass":[{"name":"dark","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nButton usable button on a dark background\\n","description":"<p>Button usable button on a dark background</p>\\n","line":27,"type":"BooleanInput","decorators":[]},{"name":"shadow","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow shadow\\n","description":"<p>Show shadow</p>\\n","line":22,"type":"BooleanInput","decorators":[]},{"name":"small","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow small button\\n","description":"<p>Show small button</p>\\n","line":17,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"backToTop","deprecated":false,"deprecationMessage":"","type":"BackToTop","optional":true,"description":"","line":29,"modifierKind":[121]},{"name":"backToTopElement","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLAnchorElement>","optional":true,"description":"","line":31,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'backToTop\'"}],"modifierKind":[121]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEliminate component features\\n","description":"<p>Eliminate component features</p>\\n","modifierKind":[123]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHide the button\\n","description":"<p>Hide the button</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"scrollToTop","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nActivates the scroll animation towards the Y coordinate indicated by the positionTop option\\n","description":"<p>Activates the scroll animation towards the Y coordinate indicated by the positionTop option</p>\\n","modifierKind":[123]},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow button\\n","description":"<p>Show button</p>\\n","modifierKind":[123]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { BackToTop } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-back-to-top\',\\n  templateUrl: \'./back-to-top.component.html\',\\n  exportAs: \'itBackToTop\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class BackToTopComponent extends AbstractComponent {\\n\\n  /**\\n   * Show small button\\n   */\\n  @Input() small?: BooleanInput;\\n\\n  /**\\n   * Show shadow\\n   */\\n  @Input() shadow?: BooleanInput;\\n\\n  /**\\n   * Button usable button on a dark background\\n   */\\n  @Input() dark?: BooleanInput;\\n\\n  private backToTop?: BackToTop;\\n\\n  @ViewChild(\'backToTop\') private backToTopElement?: ElementRef<HTMLAnchorElement>;\\n\\n  get isSmall(): boolean {\\n    return isTrueBooleanInput(this.small);\\n  }\\n\\n  get isShadow(): boolean {\\n    return isTrueBooleanInput(this.shadow);\\n  }\\n\\n  get isDark(): boolean {\\n    return isTrueBooleanInput(this.dark);\\n  }\\n\\n  override ngAfterViewInit() {\\n    super.ngAfterViewInit();\\n\\n    if (this.backToTopElement) {\\n      const element = this.backToTopElement.nativeElement;\\n      this.backToTop = BackToTop.getOrCreateInstance(element);\\n    }\\n  }\\n\\n  /**\\n   * Show button\\n   */\\n  public show(): void {\\n    this.backToTop?.show();\\n  }\\n\\n  /**\\n   * Hide the button\\n   */\\n  public hide(): void {\\n    this.backToTop?.hide();\\n  }\\n\\n  /**\\n   * Activates the scroll animation towards the Y coordinate indicated by the positionTop option\\n   */\\n  public scrollToTop(): void {\\n    this.backToTop?.scrollToTop();\\n  }\\n\\n  /**\\n   * Eliminate component features\\n   */\\n  public dispose(): void {\\n    this.backToTop?.dispose();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","accessors":{"isSmall":{"name":"isSmall","getSignature":{"name":"isSmall","type":"boolean","returnType":"boolean","line":33}},"isShadow":{"name":"isShadow","getSignature":{"name":"isShadow","type":"boolean","returnType":"boolean","line":37}},"isDark":{"name":"isDark","getSignature":{"name":"isDark","type":"boolean","returnType":"boolean","line":41}}},"templateData":"<a #backToTop [id]=\\"id\\"\\n   href=\\"#\\"\\n   aria-hidden=\\"true\\"\\n   class=\\"back-to-top\\"\\n   [class.back-to-top-small]=\\"isSmall\\"\\n   [class.shadow]=\\"isShadow\\"\\n   [class.dark]=\\"isDark\\">\\n\\n  <it-icon name=\\"arrow-up\\" [color]=\\"isDark ? \'secondary\' : \'light\'\\"></it-icon>\\n</a>\\n"},{"name":"BreadcrumbComponent","id":"component-BreadcrumbComponent-4e23d4802471bb27dba66f5e8b2a17fa997e1e2bc4c05b10160440d1549dcdbc2fce4617f7323407aa1d9ca2f7422145195beb29ae710b725bbdce99ea87d6d3","file":"projects/design-angular-kit/src/lib/components/navigation/breadcrumbs/breadcrumb/breadcrumb.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-breadcrumb","styleUrls":[],"styles":[],"templateUrl":["./breadcrumb.component.html"],"viewProviders":[],"inputsClass":[{"name":"dark","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDark style\\n","description":"<p>Dark style</p>\\n","line":31,"type":"BooleanInput","decorators":[]},{"name":"separator","defaultValue":"\'/\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":648,"end":662,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":649,"end":656,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>/</p>\\n"}],"rawdescription":"\\n\\nThe character to use as separator\\n","description":"<p>The character to use as separator</p>\\n","line":26,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"items","deprecated":false,"deprecationMessage":"","type":"QueryList<BreadcrumbItemComponent>","optional":true,"description":"<p>The tab items</p>\\n","line":36,"rawdescription":"\\n\\nThe tab items\\n","decorators":[{"name":"ContentChildren","stringifiedArguments":"BreadcrumbItemComponent"}]},{"name":"itemSubscriptions","deprecated":false,"deprecationMessage":"","type":"Array<Subscription>","optional":true,"description":"","line":42,"modifierKind":[121]}],"methodsClass":[{"name":"isLastItem","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if index is last item\\n","description":"<p>Check if index is last item</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":1790,"end":1795,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"index"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":1784,"end":1789,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  ContentChildren,\\n  Input,\\n  OnDestroy,\\n  QueryList\\n} from \'@angular/core\';\\nimport { BreadcrumbItemComponent } from \'../breadcrumb-item/breadcrumb-item.component\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { startWith, Subscription } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-breadcrumb\',\\n  templateUrl: \'./breadcrumb.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class BreadcrumbComponent implements AfterViewInit, OnDestroy {\\n\\n  /**\\n   * The character to use as separator\\n   * @default /\\n   */\\n  @Input() separator: string = \'/\';\\n\\n  /**\\n   * Dark style\\n   */\\n  @Input() dark?: BooleanInput;\\n\\n  /**\\n   * The tab items\\n   */\\n  @ContentChildren(BreadcrumbItemComponent) items?: QueryList<BreadcrumbItemComponent>;\\n\\n  get isDark(): boolean {\\n    return isTrueBooleanInput(this.dark);\\n  }\\n\\n  private itemSubscriptions?: Array<Subscription>;\\n\\n  constructor(\\n    private readonly _changeDetectorRef: ChangeDetectorRef\\n  ) {\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.items?.changes.pipe( // When breadcrumb items changes (dynamic add/remove)\\n      startWith(undefined)\\n    ).subscribe(() => {\\n      this.itemSubscriptions?.forEach(sub => sub.unsubscribe()); // Remove old subscriptions\\n      this.itemSubscriptions = this.items?.map(item => item.valueChanges.subscribe(() => {\\n        this._changeDetectorRef.detectChanges(); // DetectChanges when breadcrumb item attributes changes\\n      }));\\n      this._changeDetectorRef.detectChanges(); // Force update html render\\n    });\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.itemSubscriptions?.forEach(item => item.unsubscribe());\\n  }\\n\\n  /**\\n   * Check if index is last item\\n   * @param index\\n   */\\n  protected isLastItem(index: number): boolean {\\n    return !!this.items && index >= (this.items.length - 1);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":42,"jsdoctags":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit","OnDestroy"],"accessors":{"isDark":{"name":"isDark","getSignature":{"name":"isDark","type":"boolean","returnType":"boolean","line":38}}},"templateData":"<nav class=\\"breadcrumb-container\\" [attr.aria-label]=\\"\'it.navigation.navigation-path\'|translate\\">\\n  <ol class=\\"breadcrumb\\" [class.dark]=\\"isDark\\" [class.px-3]=\\"isDark\\">\\n    <li *ngFor=\\"let item of items; let i = index\\"\\n        class=\\"breadcrumb-item\\"\\n        [class.active]=\\"item.isActive\\"\\n        [attr.aria-current]=\\"item.isActive ? \'page\' : null\\">\\n\\n      <it-icon *ngIf=\\"item.iconName\\"\\n                [name]=\\"item.iconName\\"\\n                [color]=\\"isDark ? \'white\' : \'secondary\'\\"\\n                size=\\"sm\\"\\n                svgClass=\\"align-top me-1\\"></it-icon>\\n\\n      <it-link *ngIf=\\"!item.isActive && !isLastItem(i); else activeContent\\"\\n                [href]=\\"item.href\\" [class]=\\"item.class\\" [externalLink]=\\"item.externalLink\\" [disabled]=\\"item.disabled\\">\\n        <ng-container *ngTemplateOutlet=\\"item.htmlContent\\"></ng-container>\\n      </it-link>\\n\\n      <ng-template #activeContent>\\n        <ng-container *ngTemplateOutlet=\\"item.htmlContent\\"></ng-container>\\n      </ng-template>\\n\\n      <span *ngIf=\\"!isLastItem(i)\\" class=\\"separator\\">{{separator}}</span>\\n    </li>\\n  </ol>\\n</nav>\\n"},{"name":"BreadcrumbItemComponent","id":"component-BreadcrumbItemComponent-3f3e13970c7ed516783dcaae67010fd4fb0626892fbc0bfae77503931d447859d6a5aba8b72573769c51b0fc4825296c3abc6461d6f9309f970f4baf82433501","file":"projects/design-angular-kit/src/lib/components/navigation/breadcrumbs/breadcrumb-item/breadcrumb-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-breadcrumb-item","styleUrls":[],"styles":[],"templateUrl":["./breadcrumb-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"active","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs active breadcrumb item\\n","description":"<p>Is active breadcrumb item</p>\\n","line":16,"type":"BooleanInput","decorators":[]},{"name":"iconName","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe name of icon to show\\n","description":"<p>The name of icon to show</p>\\n","line":21,"type":"IconName","decorators":[]},{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":35,"type":"string","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs disabled link\\n","description":"<p>Is disabled link</p>\\n","line":30,"type":"BooleanInput","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"externalLink","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs an external link (false to not use Angular router link)\\n","description":"<p>Is an external link (false to not use Angular router link)</p>\\n","line":25,"type":"BooleanInput","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"href","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe router link action\\n\\nCommands to pass to Router#createUrlTree.\\n- array: commands to pass to Router#createUrlTree.\\n- string: shorthand for array of commands with just the string, i.e. [\'/route\']\\n- null|undefined: Disables the link by removing the href\\n","description":"<p>The router link action</p>\\n<p>Commands to pass to Router#createUrlTree.</p>\\n<ul>\\n<li>array: commands to pass to Router#createUrlTree.</li>\\n<li>string: shorthand for array of commands with just the string, i.e. [&#39;/route&#39;]</li>\\n<li>null|undefined: Disables the link by removing the href</li>\\n</ul>\\n","line":20,"type":"any[] | string | null","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"htmlContent","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"<p>The content of item</p>\\n","line":26,"rawdescription":"\\n\\nThe content of item\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"TemplateRef"}],"modifierKind":[123]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { IconName } from \'../../../../interfaces/icon\';\\nimport { LinkComponent } from \'../../../core/link/link.component\';\\n\\n@Component({\\n  selector: \'it-breadcrumb-item\',\\n  templateUrl: \'./breadcrumb-item.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class BreadcrumbItemComponent extends LinkComponent {\\n\\n  /**\\n   * Is active breadcrumb item\\n   */\\n  @Input() active?: BooleanInput;\\n\\n  /**\\n   * The name of icon to show\\n   */\\n  @Input() iconName?: IconName;\\n\\n  /**\\n   * The content of item\\n   */\\n  @ViewChild(TemplateRef) public htmlContent!: TemplateRef<any>;\\n\\n  public get isActive(): boolean {\\n    return isTrueBooleanInput(this.active);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"LinkComponent","accessors":{"isActive":{"name":"isActive","getSignature":{"name":"isActive","type":"boolean","returnType":"boolean","line":28}}},"templateData":"<ng-template>\\n  <ng-content></ng-content>\\n</ng-template>\\n"},{"name":"CalloutComponent","id":"component-CalloutComponent-816c969bbddcf9b9d80ae3dc9e6c2b58ff3bf9cf2a4cca54ed32b79907efb942f09fd84830d04f11d35cb45edfcc3d9e35b30fd3874e82d2417ba49c936c9620","file":"projects/design-angular-kit/src/lib/components/core/callout/callout.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-callout","styleUrls":[],"styles":["\\n    .callout-big-text:empty {\\n      display: none;\\n    }\\n  "],"templateUrl":["./callout.component.html"],"viewProviders":[],"inputsClass":[{"name":"appearance","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1507,"end":1527,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1508,"end":1515,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>default</p>\\n"}],"rawdescription":"\\n\\nCallout appearance\\n- <b>default</b>\\n- <b>highlight</b>: Callout version with border only on the left side\\n- <b>more</b>: It looks radically different from the other styles available and is suitable for more extensive texts\\n","description":"<p>Callout appearance</p>\\n<ul>\\n<li><b>default</b></li>\\n<li><b>highlight</b>: Callout version with border only on the left side</li>\\n<li><b>more</b>: It looks radically different from the other styles available and is suitable for more extensive texts</li>\\n</ul>\\n","line":50,"type":"CalloutAppearance","decorators":[]},{"name":"color","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCallout color\\n- <b>success</b>\\n- <b>danger</b>\\n- <b>warning</b>\\n- <b>important</b>\\n- <b>note</b>\\n","description":"<p>Callout color</p>\\n<ul>\\n<li><b>success</b></li>\\n<li><b>danger</b></li>\\n<li><b>warning</b></li>\\n<li><b>important</b></li>\\n<li><b>note</b></li>\\n</ul>\\n","line":39,"type":"CalloutColor | undefined","decorators":[]},{"name":"hiddenLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCallout hiddenLabel\\n","description":"<p>Callout hiddenLabel</p>\\n","line":27,"type":"string | undefined","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom icon\\n","description":"<p>Custom icon</p>\\n","line":57,"type":"IconName | undefined","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCallout label\\n","description":"<p>Callout label</p>\\n","line":20,"type":"string | undefined","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_appearance","defaultValue":"\'default\'","deprecated":false,"deprecationMessage":"","type":"CalloutAppearance","optional":false,"description":"","line":52,"modifierKind":[121]},{"name":"_color","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"CalloutColor | undefined","optional":false,"description":"","line":41,"modifierKind":[121]},{"name":"_hiddenLabel","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":29,"modifierKind":[121]},{"name":"_icon","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"IconName | undefined","optional":false,"description":"","line":59,"modifierKind":[121]},{"name":"_label","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":22,"modifierKind":[121]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport {CalloutAppearance, CalloutColor} from \\"../../../interfaces/core\\";\\nimport { IconName } from \'../../../interfaces/icon\';\\n\\n@Component({\\n  selector: \'it-callout\',\\n  templateUrl: \'./callout.component.html\',\\n  styles: [`\\n    .callout-big-text:empty {\\n      display: none;\\n    }\\n  `],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CalloutComponent {\\n\\n  /**\\n   * Callout label\\n   */\\n  @Input() set label (value: string | undefined) { this._label = value; }\\n  get label (): string | undefined { return this._label; }\\n  private _label: string | undefined = undefined;\\n\\n  /**\\n   * Callout hiddenLabel\\n   */\\n  @Input() set hiddenLabel (value: string | undefined) { this._hiddenLabel = value; }\\n  get hiddenLabel (): string | undefined { return this._hiddenLabel; }\\n  private _hiddenLabel: string | undefined = undefined;\\n\\n  /**\\n   * Callout color\\n   * - <b>success</b>\\n   * - <b>danger</b>\\n   * - <b>warning</b>\\n   * - <b>important</b>\\n   * - <b>note</b>\\n   */\\n  @Input() set color (value: CalloutColor | undefined) { this._color = value; }\\n  get color (): CalloutColor | undefined { return this._color; }\\n  private _color: CalloutColor | undefined = undefined;\\n\\n  /**\\n   * Callout appearance\\n   * - <b>default</b>\\n   * - <b>highlight</b>: Callout version with border only on the left side\\n   * - <b>more</b>: It looks radically different from the other styles available and is suitable for more extensive texts\\n   * @default default\\n   */\\n  @Input() set appearance (value: CalloutAppearance) { this._appearance = value; }\\n  get appearance (): CalloutAppearance { return this._appearance; }\\n  private _appearance: CalloutAppearance = \'default\';\\n\\n  /**\\n   * Custom icon\\n   */\\n  @Input() set icon (value: IconName | undefined) { this._icon = value; }\\n  get icon(): IconName | undefined { return this._icon;}\\n  private _icon: IconName | undefined = undefined;\\n\\n  get iconName (): IconName {\\n    if (this._icon) {\\n      return this._icon;\\n    }\\n\\n    if (this.appearance === \'more\') {\\n      return \'zoom-in\';\\n    }\\n\\n    switch (this.color) {\\n      case \'success\':\\n        return \'check-circle\';\\n      case \'warning\':\\n        return \'help-circle\';\\n      case \'danger\':\\n        return \'close-circle\';\\n      case \'important\':\\n      case \'note\':\\n      default:\\n        return \'info-circle\';\\n    }\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"\\n    .callout-big-text:empty {\\n      display: none;\\n    }\\n  \\n","accessors":{"label":{"name":"label","setSignature":{"name":"label","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":20,"rawdescription":"\\n\\nCallout label\\n","description":"<p>Callout label</p>\\n","jsdoctags":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"label","type":"","returnType":"string | undefined","line":21}},"hiddenLabel":{"name":"hiddenLabel","setSignature":{"name":"hiddenLabel","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":27,"rawdescription":"\\n\\nCallout hiddenLabel\\n","description":"<p>Callout hiddenLabel</p>\\n","jsdoctags":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"hiddenLabel","type":"","returnType":"string | undefined","line":28}},"color":{"name":"color","setSignature":{"name":"color","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"CalloutColor | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":39,"rawdescription":"\\n\\nCallout color\\n- <b>success</b>\\n- <b>danger</b>\\n- <b>warning</b>\\n- <b>important</b>\\n- <b>note</b>\\n","description":"<p>Callout color</p>\\n<ul>\\n<li><b>success</b></li>\\n<li><b>danger</b></li>\\n<li><b>warning</b></li>\\n<li><b>important</b></li>\\n<li><b>note</b></li>\\n</ul>\\n","jsdoctags":[{"name":"value","type":"CalloutColor | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"color","type":"","returnType":"CalloutColor | undefined","line":40}},"appearance":{"name":"appearance","setSignature":{"name":"appearance","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"CalloutAppearance","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":50,"rawdescription":"\\n\\nCallout appearance\\n- <b>default</b>\\n- <b>highlight</b>: Callout version with border only on the left side\\n- <b>more</b>: It looks radically different from the other styles available and is suitable for more extensive texts\\n","description":"<p>Callout appearance</p>\\n<ul>\\n<li><b>default</b></li>\\n<li><b>highlight</b>: Callout version with border only on the left side</li>\\n<li><b>more</b>: It looks radically different from the other styles available and is suitable for more extensive texts</li>\\n</ul>\\n","jsdoctags":[{"name":"value","type":"CalloutAppearance","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"appearance","type":"","returnType":"CalloutAppearance","line":51}},"icon":{"name":"icon","setSignature":{"name":"icon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IconName | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":57,"rawdescription":"\\n\\nCustom icon\\n","description":"<p>Custom icon</p>\\n","jsdoctags":[{"name":"value","type":"IconName | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"icon","type":"","returnType":"IconName | undefined","line":58}},"iconName":{"name":"iconName","getSignature":{"name":"iconName","type":"","returnType":"IconName","line":61}}},"templateData":"<div class=\\"callout {{color}}\\" [class.callout-highlight]=\\"appearance === \'highlight\'\\"\\n  [class.callout-more]=\\"appearance === \'more\'\\">\\n  <div class=\\"callout-title\\" *ngIf=\\"label\\">\\n    <it-icon [name]=\\"iconName\\"></it-icon>\\n    <span *ngIf=\\"hiddenLabel\\" class=\\"visually-hidden\\">{{ hiddenLabel }}</span>\\n    <span>{{ label }}</span>\\n  </div>\\n  <p class=\\"callout-big-text\\">\\n    <ng-content select=\\"[bigText]\\"></ng-content>\\n  </p>\\n  <ng-content></ng-content>\\n</div>"},{"name":"CardComponent","id":"component-CardComponent-083de723d95bc588601310b8118eee23a470d6427ad7b07dd908df1ca742f1f29aab68bfbc8cadcf40e2c4860becb07f04170954ed92ed54a1cd0ea81be584f8","file":"projects/design-angular-kit/src/lib/components/core/card/card.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-card","styleUrls":["./card.component.scss"],"styles":[],"templateUrl":["./card.component.html"],"viewProviders":[],"inputsClass":[{"name":"bodyClass","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom card body class\\n","description":"<p>Custom card body class</p>\\n","line":47,"type":"string","decorators":[]},{"name":"cardClass","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom card class\\n","description":"<p>Custom card class</p>\\n","line":42,"type":"string","decorators":[]},{"name":"hasImage","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCard with image\\n","description":"<p>Card with image</p>\\n","line":27,"type":"BooleanInput","decorators":[]},{"name":"rounded","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo add rounding effects\\n","description":"<p>To add rounding effects</p>\\n","line":32,"type":"BooleanInput","decorators":[]},{"name":"shadow","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo add shadow effects\\n","description":"<p>To add shadow effects</p>\\n","line":37,"type":"BooleanInput","decorators":[]},{"name":"space","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":527,"end":544,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":528,"end":535,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nIt serves to space the cards in their mobile version.\\n","description":"<p>It serves to space the cards in their mobile version.</p>\\n","line":17,"type":"BooleanInput","decorators":[]},{"name":"teaser","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo create cards with short or \\"preview\\" content\\n","description":"<p>To create cards with short or &quot;preview&quot; content</p>\\n","line":22,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-card\',\\n  templateUrl: \'./card.component.html\',\\n  styleUrls: [\'./card.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CardComponent extends AbstractComponent {\\n\\n  /**\\n   * It serves to space the cards in their mobile version.\\n   * @default true\\n   */\\n  @Input() space: BooleanInput = true;\\n\\n  /**\\n   * To create cards with short or \\"preview\\" content\\n   */\\n  @Input() teaser?: BooleanInput;\\n\\n  /**\\n   * Card with image\\n   */\\n  @Input() hasImage?: BooleanInput;\\n\\n  /**\\n   * To add rounding effects\\n   */\\n  @Input() rounded?: BooleanInput;\\n\\n  /**\\n   * To add shadow effects\\n   */\\n  @Input() shadow?: BooleanInput;\\n\\n  /**\\n   * Custom card class\\n   */\\n  @Input() cardClass: string = \'\';\\n\\n  /**\\n   * Custom card body class\\n   */\\n  @Input() bodyClass: string = \'\';\\n\\n  get isSpace(): boolean {\\n    return isTrueBooleanInput(this.space);\\n  }\\n\\n  get isTeaser(): boolean {\\n    return isTrueBooleanInput(this.teaser);\\n  }\\n\\n  get isHasImage(): boolean {\\n    return isTrueBooleanInput(this.hasImage);\\n  }\\n\\n  get isRounded(): boolean {\\n    return isTrueBooleanInput(this.rounded);\\n  }\\n\\n  get isShadow(): boolean {\\n    return isTrueBooleanInput(this.shadow);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".card-body:empty {\\n  display: none;\\n}\\n","styleUrl":"./card.component.scss"}],"stylesData":"","extends":"AbstractComponent","accessors":{"isSpace":{"name":"isSpace","getSignature":{"name":"isSpace","type":"boolean","returnType":"boolean","line":49}},"isTeaser":{"name":"isTeaser","getSignature":{"name":"isTeaser","type":"boolean","returnType":"boolean","line":53}},"isHasImage":{"name":"isHasImage","getSignature":{"name":"isHasImage","type":"boolean","returnType":"boolean","line":57}},"isRounded":{"name":"isRounded","getSignature":{"name":"isRounded","type":"boolean","returnType":"boolean","line":61}},"isShadow":{"name":"isShadow","getSignature":{"name":"isShadow","type":"boolean","returnType":"boolean","line":65}}},"templateData":"<div class=\\"card-wrapper\\" [class.card-space]=\\"isSpace\\">\\n  <div class=\\"card {{cardClass}}\\"\\n       [class.card-teaser]=\\"isTeaser\\"\\n       [class.card-img.no-after]=\\"isHasImage\\"\\n       [class.shadow]=\\"isShadow\\"\\n       [class.rounded]=\\"isRounded\\">\\n\\n    <ng-content select=\\"[beforeBody]\\"></ng-content>\\n\\n    <div class=\\"card-body {{bodyClass}}\\">\\n      <ng-content></ng-content>\\n    </div>\\n\\n  </div>\\n</div>\\n"},{"name":"CarouselComponent","id":"component-CarouselComponent-ab9d5a6e1f3891e72b1c91d1b2f1f461d45826d4943f01c5a231e58216d7d763e1de2179b5951ff627a33bd5f3407dbafef60549c0081365aeaecc3fdba3d36a","file":"projects/design-angular-kit/src/lib/components/core/carousel/carousel/carousel.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itCarousel","inputs":[],"outputs":[],"providers":[],"selector":"it-carousel","styleUrls":["./carousel.component.scss"],"styles":[],"templateUrl":["./carousel.component.html"],"viewProviders":[],"inputsClass":[{"name":"bigImg","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo indicate that the contained image is of a large type\\n","description":"<p>To indicate that the contained image is of a large type</p>\\n","line":52,"type":"BooleanInput","decorators":[]},{"name":"fullCarousel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTrue for full screen (landscape) viewing\\n","description":"<p>True for full screen (landscape) viewing</p>\\n","line":47,"type":"BooleanInput","decorators":[]},{"name":"lined","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCard line style\\n","description":"<p>Card line style</p>\\n","line":57,"type":"BooleanInput","decorators":[]},{"name":"title","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe callout title\\n","description":"<p>The callout title</p>\\n","line":31,"type":"string","decorators":[]},{"name":"trackClass","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class in splide__track element\\n","description":"<p>Custom class in splide__track element</p>\\n","line":42,"type":"string","decorators":[]},{"name":"type","defaultValue":"\'default\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":887,"end":907,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":888,"end":895,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>default</p>\\n"}],"rawdescription":"\\n\\nThe carousel type\\n","description":"<p>The carousel type</p>\\n","line":37,"type":"CarouselType","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"carousel","deprecated":false,"deprecationMessage":"","type":"CarouselBI","optional":true,"description":"","line":62,"modifierKind":[121]},{"name":"carouselDiv","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLDivElement>","optional":false,"description":"","line":64,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'carousel\'"}],"modifierKind":[121]},{"name":"items","deprecated":false,"deprecationMessage":"","type":"QueryList<CarouselItemComponent>","optional":true,"description":"","line":59,"decorators":[{"name":"ContentChildren","stringifiedArguments":"CarouselItemComponent"}]},{"name":"itemSubscriptions","deprecated":false,"deprecationMessage":"","type":"Array<Subscription>","optional":true,"description":"","line":66,"modifierKind":[121]}],"methodsClass":[{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRemoves CarouselBI features\\n","description":"<p>Removes CarouselBI features</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  ContentChildren,\\n  ElementRef,\\n  Input,\\n  OnDestroy,\\n  QueryList,\\n  ViewChild\\n} from \'@angular/core\';\\nimport { CarouselType } from \'../../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { CarouselItemComponent } from \'../carousel-item/carousel-item.component\';\\nimport { CarouselBI } from \'bootstrap-italia\';\\nimport { startWith, Subscription } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-carousel\',\\n  templateUrl: \'./carousel.component.html\',\\n  styleUrls: [\'./carousel.component.scss\'],\\n  exportAs: \'itCarousel\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CarouselComponent implements AfterViewInit, OnDestroy {\\n\\n  /**\\n   * The callout title\\n   */\\n  @Input() title?: string;\\n\\n  /**\\n   * The carousel type\\n   * @default default\\n   */\\n  @Input() type: CarouselType = \'default\';\\n\\n  /**\\n   * Custom class in splide__track element\\n   */\\n  @Input() trackClass: string = \'\';\\n\\n  /**\\n   * True for full screen (landscape) viewing\\n   */\\n  @Input() fullCarousel?: BooleanInput;\\n\\n  /**\\n   * To indicate that the contained image is of a large type\\n   */\\n  @Input() bigImg?: BooleanInput;\\n\\n  /**\\n   * Card line style\\n   */\\n  @Input() lined?: BooleanInput;\\n\\n  @ContentChildren(CarouselItemComponent) items?: QueryList<CarouselItemComponent>;\\n\\n\\n  private carousel?: CarouselBI;\\n\\n  @ViewChild(\'carousel\') private carouselDiv!: ElementRef<HTMLDivElement>;\\n\\n  private itemSubscriptions?: Array<Subscription>;\\n\\n  get typeClass(): string {\\n    const typeClass = \'it-carousel-landscape-abstract\';\\n    return this.type === \'default\' ? typeClass : typeClass + `-${this.type}`;\\n  }\\n\\n  get isFullCarousel(): boolean {\\n    return isTrueBooleanInput(this.fullCarousel);\\n  }\\n\\n  get isBigImg(): boolean {\\n    return isTrueBooleanInput(this.bigImg);\\n  }\\n\\n  get isLined(): boolean {\\n    return isTrueBooleanInput(this.lined);\\n  }\\n\\n  constructor(\\n    private readonly _changeDetectorRef: ChangeDetectorRef\\n  ) {\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.carousel = CarouselBI.getOrCreateInstance(this.carouselDiv.nativeElement);\\n    this.items?.changes.pipe( // When carousel items changes (dynamic add/remove)\\n      startWith(undefined)\\n    ).subscribe(() => {\\n      this.itemSubscriptions?.forEach(sub => sub.unsubscribe()); // Remove old subscriptions\\n      this.itemSubscriptions = this.items?.map(item => item.valueChanges.subscribe(() => {\\n        this._changeDetectorRef.detectChanges(); // DetectChanges when carousel item attributes changes\\n      }));\\n      this._changeDetectorRef.detectChanges(); // Force update html render\\n    });\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.itemSubscriptions?.forEach(item => item.unsubscribe());\\n  }\\n\\n  /**\\n   * Removes CarouselBI features\\n   */\\n  public dispose(): void {\\n    this.carousel?.dispose();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \\"@splidejs/splide/dist/css/splide.min\\"; // Splide\\n","styleUrl":"./carousel.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":83,"jsdoctags":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit","OnDestroy"],"accessors":{"typeClass":{"name":"typeClass","getSignature":{"name":"typeClass","type":"string","returnType":"string","line":68}},"isFullCarousel":{"name":"isFullCarousel","getSignature":{"name":"isFullCarousel","type":"boolean","returnType":"boolean","line":73}},"isBigImg":{"name":"isBigImg","getSignature":{"name":"isBigImg","type":"boolean","returnType":"boolean","line":77}},"isLined":{"name":"isLined","getSignature":{"name":"isLined","type":"boolean","returnType":"boolean","line":81}}},"templateData":"<div #carousel class=\\"it-carousel-wrapper splide {{typeClass}}\\"\\n     [class.it-full-carousel]=\\"isFullCarousel\\"\\n     [class.it-big-img]=\\"isBigImg\\"\\n     data-bs-carousel-splide>\\n\\n  <div class=\\"it-header-block\\" *ngIf=\\"title\\">\\n    <div class=\\"it-header-block-title\\">\\n      <h2>{{title}}</h2>\\n    </div>\\n  </div>\\n\\n  <div class=\\"splide__track {{trackClass}}\\">\\n    <ul class=\\"splide__list\\">\\n      <li *ngFor=\\"let item of items\\" class=\\"splide__slide\\" [class.lined_slide]=\\"isLined\\">\\n        <div class=\\"it-single-slide-wrapper\\">\\n          <ng-container *ngTemplateOutlet=\\"item.htmlContent\\"></ng-container>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n</div>\\n"},{"name":"CarouselItemComponent","id":"component-CarouselItemComponent-89e9ab2d420f6c236a682e664944350e5e8c731e30a89fb7dd44d6b07c1bfdbd5c171d1b43aca123b118f4766278fa703f55f45b494dac77d56c80f4183eacfb","file":"projects/design-angular-kit/src/lib/components/core/carousel/carousel-item/carousel-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-carousel-item","styleUrls":[],"styles":[],"templateUrl":["./carousel-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"htmlContent","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"<p>The content of item</p>\\n","line":14,"rawdescription":"\\n\\nThe content of item\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"TemplateRef"}],"modifierKind":[123]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../../abstracts/abstract.component\';\\n\\n@Component({\\n  selector: \'it-carousel-item\',\\n  templateUrl: \'./carousel-item.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CarouselItemComponent extends AbstractComponent {\\n\\n  /**\\n   * The content of item\\n   */\\n  @ViewChild(TemplateRef) public htmlContent!: TemplateRef<any>;\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","templateData":"<ng-template>\\n  <ng-content></ng-content>\\n</ng-template>\\n"},{"name":"CheckboxComponent","id":"component-CheckboxComponent-57850b21441e386278c31c5f4b6860523694827483ed71a1b5f160d8359b0d33cfdd1bc87e35102c8d10e4cf8c076c52f52a587535a07a8e3046c6db501827d5","file":"projects/design-angular-kit/src/lib/components/form/checkbox/checkbox.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-checkbox","styleUrls":[],"styles":[],"templateUrl":["./checkbox.component.html"],"viewProviders":[],"inputsClass":[{"name":"checked","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf checkbox is checked\\n","description":"<p>If checkbox is checked</p>\\n","line":30,"type":"BooleanInput","decorators":[]},{"name":"group","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf is checkbox group\\n","description":"<p>If is checkbox group</p>\\n","line":25,"type":"BooleanInput","decorators":[]},{"name":"indeterminate","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf checkbox is indeterminate\\n","description":"<p>If checkbox is indeterminate</p>\\n","line":35,"type":"BooleanInput","decorators":[]},{"name":"inline","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf show checkbox inline\\n","description":"<p>If show checkbox inline</p>\\n","line":20,"type":"BooleanInput","decorators":[]},{"name":"toggle","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf show checkbox as toggle\\n","description":"<p>If show checkbox as toggle</p>\\n","line":15,"type":"BooleanInput","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractFormComponent"}},{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-checkbox\',\\n  templateUrl: \'./checkbox.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CheckboxComponent extends AbstractFormComponent<boolean> {\\n\\n  /**\\n   * If show checkbox as toggle\\n   */\\n  @Input() toggle?: BooleanInput;\\n\\n  /**\\n   * If show checkbox inline\\n   */\\n  @Input() inline?: BooleanInput;\\n\\n  /**\\n   * If is checkbox group\\n   */\\n  @Input() group?: BooleanInput;\\n\\n  /**\\n   * If checkbox is checked\\n   */\\n  @Input() checked?: BooleanInput;\\n\\n  /**\\n   * If checkbox is indeterminate\\n   */\\n  @Input() indeterminate?: BooleanInput;\\n\\n  get isIndeterminate(): boolean {\\n    return isTrueBooleanInput(this.indeterminate);\\n  }\\n\\n  get isGroup(): boolean {\\n    return isTrueBooleanInput(this.group);\\n  }\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    if (this.control.value || this.checked === undefined) {\\n      return;\\n    }\\n\\n    const value = isTrueBooleanInput(this.checked);\\n    this.writeValue(value);\\n    return this.onChange(value);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractFormComponent","accessors":{"isIndeterminate":{"name":"isIndeterminate","getSignature":{"name":"isIndeterminate","type":"boolean","returnType":"boolean","line":37}},"isGroup":{"name":"isGroup","getSignature":{"name":"isGroup","type":"boolean","returnType":"boolean","line":41}}},"templateData":"<ng-container>\\n  <div class=\\"form-check\\"\\n       [class.form-check-group]=\\"isGroup\\"\\n       [class.form-check-inline]=\\"inline\\">\\n\\n    <div *ngIf=\\"toggle; else defaultStyle\\" class=\\"toggles\\">\\n      <label [for]=\\"id\\">\\n        <ng-container *ngTemplateOutlet=\\"htmlLabel\\"></ng-container>\\n        <input [id]=\\"id\\"\\n               type=\\"checkbox\\"\\n               [formControl]=\\"control\\"\\n               [attr.aria-describedby]=\\"id + \'-help\'\\">\\n        <span class=\\"lever\\"></span>\\n      </label>\\n    </div>\\n\\n    <ng-template #defaultStyle>\\n      <input [id]=\\"id\\"\\n             type=\\"checkbox\\"\\n             class=\\"form-check-input\\"\\n             [class.is-invalid]=\\"isInvalid\\"\\n             [class.is-valid]=\\"isValid\\"\\n             [class.semi-checked]=\\"isIndeterminate\\"\\n             [formControl]=\\"control\\"\\n             [attr.aria-describedby]=\\"id + \'-help\'\\">\\n      <label class=\\"form-check-label\\" [for]=\\"id\\">\\n        <ng-container *ngTemplateOutlet=\\"htmlLabel\\"></ng-container>\\n      </label>\\n    </ng-template>\\n\\n    <small *ngIf=\\"isGroup\\" [id]=\\"id + \'-help\'\\" class=\\"form-text\\">\\n      <ng-content></ng-content>\\n    </small>\\n\\n    <div *ngIf=\\"isInvalid && isGroup\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n      <ng-container *ngTemplateOutlet=\\"error\\"></ng-container>\\n    </div>\\n  </div>\\n\\n  <div *ngIf=\\"isInvalid && !isGroup\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n    <ng-container *ngTemplateOutlet=\\"error\\"></ng-container>\\n  </div>\\n</ng-container>\\n\\n<ng-template #error>\\n  <div #customError>\\n    <ng-content select=\\"[error]\\"></ng-content>\\n  </div>\\n  <ng-container *ngIf=\\"!customError.hasChildNodes()\\">{{invalidMessage | async}}</ng-container>\\n</ng-template>\\n\\n<ng-template #htmlLabel>\\n  <div #customLabel>\\n    <ng-content select=\\"[label]\\"></ng-content>\\n  </div>\\n  <ng-container *ngIf=\\"!customLabel.hasChildNodes()\\">{{label}}</ng-container>\\n</ng-template>\\n"},{"name":"ChipComponent","id":"component-ChipComponent-67c38fc408570d2a3b16dd0c601ecefa3e3ef1d5a1020067607f5aab21584d8dd5aa2221922cc63e8ab608ee95d72d8e8d00b378fce4819d420cce4deb6634b2","file":"projects/design-angular-kit/src/lib/components/core/chip/chip.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-chip","styleUrls":[],"styles":[],"templateUrl":["./chip.component.html"],"viewProviders":[],"inputsClass":[{"name":"altAvatar","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica il valore da aggiungere al parametro alt, di default \'\'\\n","description":"<p>Indica il valore da aggiungere al parametro alt, di default &#39;&#39;</p>\\n","line":65,"type":"string","decorators":[]},{"name":"avatar","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica l\'url dell\'avatar, se valorizzata viene mostrata\\n","description":"<p>Indica l&#39;url dell&#39;avatar, se valorizzata viene mostrata</p>\\n","line":58,"type":"string | undefined","decorators":[]},{"name":"color","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica il colore della chip\\n","description":"<p>Indica il colore della chip</p>\\n","line":37,"type":"ChipColor | undefined","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica se la chip \xe8 disabilitata\\n","description":"<p>Indica se la chip \xe8 disabilitata</p>\\n","line":44,"type":"boolean","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica il nome dell\'icona, se valorizzata viene mostrata\\n","description":"<p>Indica il nome dell&#39;icona, se valorizzata viene mostrata</p>\\n","line":51,"type":"IconName | undefined","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica la label\\n","description":"<p>Indica la label</p>\\n","line":16,"type":"string","decorators":[]},{"name":"showCloseButton","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica se mostrate il pulante di chisura\\n","description":"<p>Indica se mostrate il pulante di chisura</p>\\n","line":23,"type":"boolean","decorators":[]},{"name":"size","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndica il size\\n","description":"<p>Indica il size</p>\\n","line":30,"type":"string | \\"lg\\"","decorators":[]}],"outputsClass":[{"name":"close","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEvento emesso al click sul bottone di chiusura\\n","description":"<p>Evento emesso al click sul bottone di chiusura</p>\\n","line":72,"type":"EventEmitter"}],"propertiesClass":[{"name":"_altAvatar","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":67,"modifierKind":[121]},{"name":"_avatar","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":60,"modifierKind":[121]},{"name":"_color","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"ChipColor | undefined","optional":false,"description":"","line":39,"modifierKind":[121]},{"name":"_disabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":46,"modifierKind":[121]},{"name":"_icon","defaultValue":"undefined","deprecated":false,"deprecationMessage":"","type":"IconName | undefined","optional":false,"description":"","line":53,"modifierKind":[121]},{"name":"_label","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18,"modifierKind":[121]},{"name":"_showCloseButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[121]},{"name":"_size","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string | \\"lg\\"","optional":false,"description":"","line":32,"modifierKind":[121]},{"name":"iconClose","defaultValue":"\'close\'","deprecated":false,"deprecationMessage":"","type":"IconName","optional":false,"description":"","line":74}],"methodsClass":[{"name":"clickToClose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \'@angular/core\';\\nimport { IconName } from \'../../../interfaces/icon\';\\n\\nexport type ChipColor = \'primary\' | \'secondary\' | \'success\' | \'danger\' | \'warning\';\\n\\n@Component({\\n  selector: \'it-chip\',\\n  templateUrl: \'./chip.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ChipComponent {\\n\\n  /**\\n   * Indica la label\\n  */\\n  @Input() set label (value: string) { this._label = value; }\\n  get label (): string { return this._label; }\\n  private _label = \'\';\\n\\n  /**\\n   * Indica se mostrate il pulante di chisura\\n  */\\n  @Input() set showCloseButton (value: boolean) { this._showCloseButton = value; }\\n  get showCloseButton (): boolean { return this._showCloseButton; }\\n  private _showCloseButton = false;\\n\\n  /**\\n   * Indica il size\\n  */\\n  @Input() set size (value: \'\' | \'lg\') { this._size = value; }\\n  get size (): \'\' | \'lg\' { return this._size; }\\n  private _size: \'\' | \'lg\'  = \'\';\\n\\n  /**\\n   * Indica il colore della chip\\n  */\\n  @Input() set color (value: ChipColor | undefined) { this._color = value; }\\n  get color (): ChipColor | undefined { return this._color; }\\n  private _color: ChipColor | undefined  = undefined;\\n\\n  /**\\n   * Indica se la chip \xe8 disabilitata\\n  */\\n  @Input() set disabled (value: boolean) { this._disabled = value; }\\n  get disabled (): boolean { return this._disabled; }\\n  private _disabled: boolean  = false;\\n\\n  /**\\n   * Indica il nome dell\'icona, se valorizzata viene mostrata\\n  */\\n  @Input() set icon (value: IconName | undefined) { this._icon = value; }\\n  get icon (): IconName | undefined { return this._icon; }\\n  private _icon: IconName | undefined  = undefined;\\n\\n  /**\\n   * Indica l\'url dell\'avatar, se valorizzata viene mostrata\\n  */\\n  @Input() set avatar (value: string | undefined) { this._avatar = value; }\\n  get avatar (): string | undefined { return this._avatar; }\\n  private _avatar: string | undefined  = undefined;\\n\\n  /**\\n   * Indica il valore da aggiungere al parametro alt, di default \'\'\\n  */\\n  @Input() set altAvatar (value: string) { this._altAvatar = value; }\\n  get altAvatar (): string { return this._altAvatar; }\\n  private _altAvatar: string  = \'\';\\n\\n  /**\\n   * Evento emesso al click sul bottone di chiusura\\n  */\\n  @Output() close = new EventEmitter();\\n\\n  iconClose: IconName = \'close\';\\n\\n  clickToClose(): void {\\n    this.close.emit();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"label":{"name":"label","setSignature":{"name":"label","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":16,"rawdescription":"\\n\\nIndica la label\\n","description":"<p>Indica la label</p>\\n","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"label","type":"string","returnType":"string","line":17}},"showCloseButton":{"name":"showCloseButton","setSignature":{"name":"showCloseButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":23,"rawdescription":"\\n\\nIndica se mostrate il pulante di chisura\\n","description":"<p>Indica se mostrate il pulante di chisura</p>\\n","jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"showCloseButton","type":"boolean","returnType":"boolean","line":24}},"size":{"name":"size","setSignature":{"name":"size","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | \\"lg\\"","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":30,"rawdescription":"\\n\\nIndica il size\\n","description":"<p>Indica il size</p>\\n","jsdoctags":[{"name":"value","type":"string | \\"lg\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"size","type":"","returnType":"string | \\"lg\\"","line":31}},"color":{"name":"color","setSignature":{"name":"color","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"ChipColor | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":37,"rawdescription":"\\n\\nIndica il colore della chip\\n","description":"<p>Indica il colore della chip</p>\\n","jsdoctags":[{"name":"value","type":"ChipColor | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"color","type":"","returnType":"ChipColor | undefined","line":38}},"disabled":{"name":"disabled","setSignature":{"name":"disabled","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":44,"rawdescription":"\\n\\nIndica se la chip \xe8 disabilitata\\n","description":"<p>Indica se la chip \xe8 disabilitata</p>\\n","jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"disabled","type":"boolean","returnType":"boolean","line":45}},"icon":{"name":"icon","setSignature":{"name":"icon","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"IconName | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":51,"rawdescription":"\\n\\nIndica il nome dell\'icona, se valorizzata viene mostrata\\n","description":"<p>Indica il nome dell&#39;icona, se valorizzata viene mostrata</p>\\n","jsdoctags":[{"name":"value","type":"IconName | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"icon","type":"","returnType":"IconName | undefined","line":52}},"avatar":{"name":"avatar","setSignature":{"name":"avatar","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":58,"rawdescription":"\\n\\nIndica l\'url dell\'avatar, se valorizzata viene mostrata\\n","description":"<p>Indica l&#39;url dell&#39;avatar, se valorizzata viene mostrata</p>\\n","jsdoctags":[{"name":"value","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"avatar","type":"","returnType":"string | undefined","line":59}},"altAvatar":{"name":"altAvatar","setSignature":{"name":"altAvatar","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":65,"rawdescription":"\\n\\nIndica il valore da aggiungere al parametro alt, di default \'\'\\n","description":"<p>Indica il valore da aggiungere al parametro alt, di default &#39;&#39;</p>\\n","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"altAvatar","type":"string","returnType":"string","line":66}}},"templateData":"<div class=\\"chip\\" [ngClass]=\\"[!showCloseButton ? \'chip-simple\': \'alert\', size === \'lg\' ? \'chip-lg\': \'\', color ? \'chip-\' + color : \'\', disabled ? \'chip-disabled\' : \'\']\\">\\n    <svg *ngIf=\\"icon\\" class=\\"icon icon-xs\\"><use [attr.href]=\\"\'/bootstrap-italia/dist/svg/sprites.svg#it-\' + icon\\" [attr.xlink:href]=\\"\'/bootstrap-italia/dist/svg/sprites.svg#it-\' + icon\\"></use></svg>\\n    <div *ngIf=\\"avatar\\" class=\\"avatar size-xs\\">\\n        <img [src]=\\"avatar\\" [alt]=\\"altAvatar\\">\\n    </div>\\n    <span class=\\"chip-label\\">{{ label }}</span>\\n    <button *ngIf=\\"showCloseButton\\" (click)=\\"clickToClose()\\" [disabled]=\\"disabled\\">\\n        <svg class=\\"icon\\"><use href=\\"/bootstrap-italia/dist/svg/sprites.svg#it-close\\" xlink:href=\\"/bootstrap-italia/dist/svg/sprites.svg#it-close\\"></use></svg>\\n        <span class=\\"visually-hidden\\">{{ \'it.core.remove\' | translate }} {{ label }}</span>\\n    </button>\\n</div>"},{"name":"CollapseComponent","id":"component-CollapseComponent-dee343515309792f3f1861331b9f75ec7b9848e6a2c1d1110a729dc7598bddba9b5f2f5071ae28e9615da83bc59bea2c8b130915e91b2fa3a35f27b971e395df","file":"projects/design-angular-kit/src/lib/components/core/collapse/collapse.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itCollapse","inputs":[],"outputs":[],"providers":[],"selector":"it-collapse","styleUrls":[],"styles":[],"templateUrl":["./collapse.component.html"],"viewProviders":[],"inputsClass":[{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":27,"type":"string","decorators":[]},{"name":"multi","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEnable multiple collapse\\n","description":"<p>Enable multiple collapse</p>\\n","line":17,"type":"BooleanInput","decorators":[]},{"name":"opened","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggles the collapsible element on invocation\\n","description":"<p>Toggles the collapsible element on invocation</p>\\n","line":22,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"onHidden","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).</p>\\n","line":47,"type":"EventEmitter<Event>"},{"name":"onHide","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the hide method is called.\\n","description":"<p>This event fires immediately when the hide method is called.</p>\\n","line":42,"type":"EventEmitter<Event>"},{"name":"onShow","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the show method is called.\\n","description":"<p>This event fires immediately when the show method is called.</p>\\n","line":32,"type":"EventEmitter<Event>"},{"name":"onShown","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n","description":"<p>This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).</p>\\n","line":37,"type":"EventEmitter<Event>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"collapse","deprecated":false,"deprecationMessage":"","type":"Collapse","optional":true,"description":"","line":50,"modifierKind":[121]},{"name":"collapseDiv","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLDivElement>","optional":true,"description":"","line":52,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'collapse\'"}],"modifierKind":[121]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEliminates the possibility of an item being resealable\\n","description":"<p>Eliminates the possibility of an item being resealable</p>\\n","modifierKind":[123]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHides a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been hidden (onHidden Event)\\n","description":"<p>Hides a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been hidden (onHidden Event)</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been shown (onShown event).\\n","description":"<p>Shows a resealable item\\nNOTE: Returns to the caller before the collapsable element has actually been shown (onShown event).</p>\\n","modifierKind":[123]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggle a collapsible item to show or hide it.\\nNOTE: Returns to the caller before the collapsable element has actually been shown or hidden (onShown and onHidden events)\\n","description":"<p>Toggle a collapsible item to show or hide it.\\nNOTE: Returns to the caller before the collapsable element has actually been shown or hidden (onShown and onHidden events)</p>\\n","modifierKind":[123]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { Collapse } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-collapse\',\\n  templateUrl: \'./collapse.component.html\',\\n  exportAs: \'itCollapse\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class CollapseComponent extends AbstractComponent {\\n\\n  /**\\n   * Enable multiple collapse\\n   */\\n  @Input() multi?: BooleanInput;\\n\\n  /**\\n   * Toggles the collapsible element on invocation\\n   */\\n  @Input() opened?: BooleanInput;\\n\\n  /**\\n   * Custom class\\n   */\\n  @Input() class: string = \'\';\\n\\n  /**\\n   * This event fires immediately when the show method is called.\\n   */\\n  @Output() onShow: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is triggered when the tooltip has been made visible to the user (it will wait for the CSS transitions to complete).\\n   */\\n  @Output() onShown: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires immediately when the hide method is called.\\n   */\\n  @Output() onHide: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is raised when the tooltip has finished being hidden from the user (it will wait for the CSS transitions to complete).\\n   */\\n  @Output() onHidden: EventEmitter<Event> = new EventEmitter();\\n\\n\\n  private collapse?: Collapse;\\n\\n  @ViewChild(\'collapse\') private collapseDiv?: ElementRef<HTMLDivElement>;\\n\\n  get isMulti(): boolean {\\n    return isTrueBooleanInput(this.multi);\\n  }\\n\\n  get isOpenedOnStart(): boolean {\\n    return isTrueBooleanInput(this.opened);\\n  }\\n\\n  override ngAfterViewInit(): void {\\n    super.ngAfterViewInit();\\n    this._renderer.removeAttribute(this._elementRef.nativeElement, \'class\');\\n\\n    if (this.collapseDiv) {\\n      const element = this.collapseDiv.nativeElement;\\n      this.collapse = Collapse.getOrCreateInstance(element, {\\n        toggle: this.isOpenedOnStart\\n      });\\n\\n      element.addEventListener(\'show.bs.collapse\', event => this.onShow.emit(event));\\n      element.addEventListener(\'shown.bs.collapse\', event => this.onShown.emit(event));\\n      element.addEventListener(\'hide.bs.collapse\', event => this.onHide.emit(event));\\n      element.addEventListener(\'hidden.bs.collapse\', event => this.onHidden.emit(event));\\n    }\\n  }\\n\\n  /**\\n   * Shows a resealable item\\n   * NOTE: Returns to the caller before the collapsable element has actually been shown (onShown event).\\n   */\\n  public show(): void {\\n    this.collapse?.show();\\n  }\\n\\n  /**\\n   * Hides a resealable item\\n   * NOTE: Returns to the caller before the collapsable element has actually been hidden (onHidden Event)\\n   */\\n  public hide(): void {\\n    this.collapse?.hide();\\n  }\\n\\n  /**\\n   * Toggle a collapsible item to show or hide it.\\n   * NOTE: Returns to the caller before the collapsable element has actually been shown or hidden (onShown and onHidden events)\\n   */\\n  public toggle(): void {\\n    this.collapse?.toggle();\\n  }\\n\\n  /**\\n   * Eliminates the possibility of an item being resealable\\n   */\\n  public dispose(): void {\\n    this.collapse?.dispose();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","accessors":{"isMulti":{"name":"isMulti","getSignature":{"name":"isMulti","type":"boolean","returnType":"boolean","line":54}},"isOpenedOnStart":{"name":"isOpenedOnStart","getSignature":{"name":"isOpenedOnStart","type":"boolean","returnType":"boolean","line":58}}},"templateData":"<div [id]=\\"id\\" class=\\"collapse {{class}}\\" [class.multi-collapse]=\\"isMulti\\" #collapse>\\n  <ng-content></ng-content>\\n</div>\\n"},{"name":"DimmerButtonsComponent","id":"component-DimmerButtonsComponent-bc6db15b98d6a1f63e6bfeb6ceb220ca18c4bd7168a289342c63af861aee142c3dcf89da5d662ef01ea66f4e6730f824fea8c1dbad64ebe23af8812d0f1ef308","file":"projects/design-angular-kit/src/lib/components/core/dimmer/dimmer-buttons/dimmer-buttons.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-dimmer-buttons","styleUrls":[],"styles":[],"templateUrl":["./dimmer-buttons.component.html"],"viewProviders":[],"inputsClass":[{"name":"hasOneButton","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":313,"end":330,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":314,"end":321,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"rawdescription":"\\n\\nIndica se abbiamo 1 solo bottone\\n","description":"<p>Indica se abbiamo 1 solo bottone</p>\\n","line":14,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_hasOneButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[121]}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'it-dimmer-buttons\',\\n  templateUrl: \'./dimmer-buttons.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class DimmerButtonsComponent {\\n\\n  /**\\n   * Indica se abbiamo 1 solo bottone\\n   * @default false\\n  */\\n  @Input() set hasOneButton (value: boolean) {this._hasOneButton = value};\\n  get hasOneButton() {return this._hasOneButton; }\\n  private _hasOneButton = false;\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"hasOneButton":{"name":"hasOneButton","setSignature":{"name":"hasOneButton","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":14,"rawdescription":"\\n\\nIndica se abbiamo 1 solo bottone\\n","description":"<p>Indica se abbiamo 1 solo bottone</p>\\n","jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"hasOneButton","type":"","returnType":"","line":15}}},"templateData":"<div class=\\"dimmer-buttons bg-dark\\" [ngClass]=\\"{\'single-button\': hasOneButton}\\">\\n    <ng-content></ng-content>\\n</div>"},{"name":"DimmerComponent","id":"component-DimmerComponent-f641aff163a1f1dff721b6bf100c9d845473566612510e1ed863eae3b6623466c4b90c77cae37569e51894c220e5b4ab884de720c1ebfb51c68f69db8b244ae0","file":"projects/design-angular-kit/src/lib/components/core/dimmer/dimmer.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-dimmer","styleUrls":[],"styles":[],"templateUrl":["./dimmer.component.html"],"viewProviders":[],"inputsClass":[{"name":"active","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":712,"end":729,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":713,"end":720,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"rawdescription":"\\n\\nDimmer status\\n","description":"<p>Dimmer status</p>\\n","line":28,"type":"boolean","decorators":[]},{"name":"color","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":896,"end":910,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":897,"end":904,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>&#39;&#39;</p>\\n"}],"rawdescription":"\\n\\nColore del dimmer\\n","description":"<p>Colore del dimmer</p>\\n","line":36,"type":"DimmerColor","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"_active","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30,"modifierKind":[121]},{"name":"_color","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"DimmerColor","optional":false,"description":"","line":38,"modifierKind":[121]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { animate, style, transition, trigger } from \'@angular/animations\';\\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit } from \'@angular/core\';\\n\\nexport type DimmerColor = \'\' | \'dimmer-primary\';\\n\\n@Component({\\n  selector: \'it-dimmer\',\\n  templateUrl: \'./dimmer.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n  animations: [\\n    trigger(\'fade\', [\\n        transition(\':enter\', [\\n            style({ opacity: 0 }),\\n            animate(\'150ms\', style({ opacity: 0.92 })),\\n        ]),\\n        transition(\':leave\', [\\n            animate(\'150ms\', style({ opacity: 0 })),\\n        ]),\\n    ])\\n]\\n})\\nexport class DimmerComponent implements OnInit {\\n\\n  /**\\n   * Dimmer status\\n   * @default false\\n  */\\n  @Input() set active (value: boolean) {this._active = value};\\n  get active() {return this._active; }\\n  private _active = false;\\n\\n  /**\\n   * Colore del dimmer\\n   * @default \'\'\\n  */\\n  @Input() set color (value: DimmerColor) {this._color = value};\\n  get color() {return this._color; }\\n  private _color: DimmerColor = \'\';\\n\\n  constructor(\\n    private elementRef: ElementRef\\n  ) {}\\n\\n  ngOnInit(): void {\\n    this.elementRef?.nativeElement?.parentElement?.classList?.add(\'dimmable\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":""}],"line":38,"jsdoctags":[{"name":"elementRef","type":"ElementRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"active":{"name":"active","setSignature":{"name":"active","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":28,"rawdescription":"\\n\\nDimmer status\\n","description":"<p>Dimmer status</p>\\n","jsdoctags":[{"name":"value","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"active","type":"","returnType":"","line":29}},"color":{"name":"color","setSignature":{"name":"color","type":"void","deprecated":false,"deprecationMessage":"","args":[{"name":"value","type":"DimmerColor","deprecated":false,"deprecationMessage":""}],"returnType":"void","line":36,"rawdescription":"\\n\\nColore del dimmer\\n","description":"<p>Colore del dimmer</p>\\n","jsdoctags":[{"name":"value","type":"DimmerColor","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"getSignature":{"name":"color","type":"","returnType":"","line":37}}},"templateData":"<div class=\\"dimmer\\" *ngIf=\\"active\\" @fade [ngClass]=\\"[color]\\">\\n  <div class=\\"dimmer-inner\\">\\n    <ng-content></ng-content>\\n  </div>\\n</div>"},{"name":"DimmerIconComponent","id":"component-DimmerIconComponent-3f154bfa125f64083893ede4ddadd50dc964ee3492eebad08d3e86867f7a9b34d14e3c6b7b0faa189327b4ebf6071f384563022967c9bd8235f098590182d84b","file":"projects/design-angular-kit/src/lib/components/core/dimmer/dimmer-icon/dimmer-icon.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-dimmer-icon","styleUrls":[],"styles":[],"templateUrl":["./dimmer-icon.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'it-dimmer-icon\',\\n  templateUrl: \'./dimmer-icon.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class DimmerIconComponent {\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","templateData":"<div class=\\"dimmer-icon\\">\\n    <ng-content></ng-content>\\n</div>"},{"name":"DropdownComponent","id":"component-DropdownComponent-4c78f71e35d56617b79c3ba9c0e8eba3e0088d95416f73e94f2c780dbe0853a4fca98e06e669ff4f848971fe95d970578809c876f57c96e9fc58db061b56754a","file":"projects/design-angular-kit/src/lib/components/core/dropdown/dropdown/dropdown.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itDropdown","inputs":[],"outputs":[],"providers":[],"selector":"it-dropdown","styleUrls":["./dropdown.component.scss"],"styles":[],"templateUrl":["./dropdown.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nButton color\\n","description":"<p>Button color</p>\\n","line":31,"type":"ButtonColor","decorators":[]},{"name":"dark","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDark menu style\\n","description":"<p>Dark menu style</p>\\n","line":49,"type":"BooleanInput","decorators":[]},{"name":"direction","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo open menu items to:\\n- <strong>dropup</strong>: up\\n- <strong>dropend</strong>: right\\n- <strong>dropstart</strong>: left\\n","description":"<p>To open menu items to:</p>\\n<ul>\\n<li><strong>dropup</strong>: up</li>\\n<li><strong>dropend</strong>: right</li>\\n<li><strong>dropstart</strong>: left</li>\\n</ul>\\n","line":39,"type":"DropdownDirection","decorators":[]},{"name":"fullWidth","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo get a dropdown menu as wide as the element containing the dropdown button\\n","description":"<p>To get a dropdown menu as wide as the element containing the dropdown button</p>\\n","line":44,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"onHidden","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when the dropdown has finished being hidden from the user and CSS transitions have completed.\\n","description":"<p>Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.</p>\\n","line":74,"type":"EventEmitter<Event>"},{"name":"onHide","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFires immediately when the hide instance method has been called.\\n","description":"<p>Fires immediately when the hide instance method has been called.</p>\\n","line":69,"type":"EventEmitter<Event>"},{"name":"onShow","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFires immediately when the show instance method is called.\\n","description":"<p>Fires immediately when the show instance method is called.</p>\\n","line":59,"type":"EventEmitter<Event>"},{"name":"onShown","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when the dropdown has been made visible to the user and CSS transitions have completed.\\n","description":"<p>Fired when the dropdown has been made visible to the user and CSS transitions have completed.</p>\\n","line":64,"type":"EventEmitter<Event>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"dropdown","deprecated":false,"deprecationMessage":"","type":"Dropdown","optional":true,"description":"","line":77,"modifierKind":[121]},{"name":"dropdownButton","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLButtonElement>","optional":true,"description":"","line":79,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'dropdownButton\'"}],"modifierKind":[121]},{"name":"items","deprecated":false,"deprecationMessage":"","type":"QueryList<DropdownItemComponent>","optional":true,"description":"<p>The dropdown items</p>\\n","line":54,"rawdescription":"\\n\\nThe dropdown items\\n","decorators":[{"name":"ContentChildren","stringifiedArguments":"DropdownItemComponent"}]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDestroys an element\'s dropdown. (Removes stored data on the DOM element)\\n","description":"<p>Destroys an element&#39;s dropdown. (Removes stored data on the DOM element)</p>\\n","modifierKind":[123]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHides the dropdown menu of a given navbar or tabbed navigation.\\n","description":"<p>Hides the dropdown menu of a given navbar or tabbed navigation.</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}},{"name":"setDarkItems","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet child items dark mode\\n","description":"<p>Set child items dark mode</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":3354,"end":3361,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShows the dropdown menu of a given navbar or tabbed navigation.\\n","description":"<p>Shows the dropdown menu of a given navbar or tabbed navigation.</p>\\n","modifierKind":[123]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nToggles the dropdown menu of a given navbar or tabbed navigation.\\n","description":"<p>Toggles the dropdown menu of a given navbar or tabbed navigation.</p>\\n","modifierKind":[123]},{"name":"update","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpdates the position of an element\'s dropdown.\\n","description":"<p>Updates the position of an element&#39;s dropdown.</p>\\n","modifierKind":[123]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ContentChildren,\\n  ElementRef,\\n  EventEmitter,\\n  Input,\\n  Output,\\n  QueryList,\\n  SimpleChanges,\\n  ViewChild\\n} from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../../abstracts/abstract.component\';\\nimport { ButtonColor, DropdownDirection } from \'../../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { DropdownItemComponent } from \'../dropdown-item/dropdown-item.component\';\\nimport { Dropdown } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-dropdown\',\\n  templateUrl: \'./dropdown.component.html\',\\n  styleUrls: [\'./dropdown.component.scss\'],\\n  exportAs: \'itDropdown\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class DropdownComponent extends AbstractComponent {\\n\\n  /**\\n   * Button color\\n   */\\n  @Input() color?: ButtonColor;\\n\\n  /**\\n   * To open menu items to:\\n   * - <strong>dropup</strong>: up\\n   * - <strong>dropend</strong>: right\\n   * - <strong>dropstart</strong>: left\\n   */\\n  @Input() direction?: DropdownDirection;\\n\\n  /**\\n   * To get a dropdown menu as wide as the element containing the dropdown button\\n   */\\n  @Input() fullWidth?: BooleanInput;\\n\\n  /**\\n   * Dark menu style\\n   */\\n  @Input() dark?: BooleanInput;\\n\\n  /**\\n   * The dropdown items\\n   */\\n  @ContentChildren(DropdownItemComponent) items?: QueryList<DropdownItemComponent>;\\n\\n  /**\\n   * Fires immediately when the show instance method is called.\\n   */\\n  @Output() onShow: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * Fired when the dropdown has been made visible to the user and CSS transitions have completed.\\n   */\\n  @Output() onShown: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * Fires immediately when the hide instance method has been called.\\n   */\\n  @Output() onHide: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * Fired when the dropdown has finished being hidden from the user and CSS transitions have completed.\\n   */\\n  @Output() onHidden: EventEmitter<Event> = new EventEmitter();\\n\\n\\n  private dropdown?: Dropdown;\\n\\n  @ViewChild(\'dropdownButton\') private dropdownButton?: ElementRef<HTMLButtonElement>;\\n\\n  get buttonClass(): string {\\n    let btnClass = \'btn dropdown-toggle\';\\n    if (this.color) {\\n      btnClass += ` btn-${this.color}`;\\n    } else {\\n      btnClass += ` btn-dropdown`;\\n    }\\n\\n    return btnClass;\\n  }\\n\\n  get isFullWidth(): boolean {\\n    return isTrueBooleanInput(this.fullWidth);\\n  }\\n\\n  get isDark(): boolean {\\n    return isTrueBooleanInput(this.dark);\\n  }\\n\\n  override ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\'dark\'] && !changes[\'dark\'].firstChange) {\\n      this.setDarkItems();\\n    }\\n    super.ngOnChanges(changes);\\n  }\\n\\n  override ngAfterViewInit() {\\n    super.ngAfterViewInit();\\n    this.setDarkItems();\\n\\n    if (this.dropdownButton) {\\n      const element = this.dropdownButton.nativeElement;\\n      this.dropdown = Dropdown.getOrCreateInstance(element);\\n\\n      element.addEventListener(\'show.bs.dropdown\', event => this.onShow.emit(event));\\n      element.addEventListener(\'shown.bs.dropdown\', event => this.onShown.emit(event));\\n      element.addEventListener(\'hide.bs.dropdown\', event => this.onHide.emit(event));\\n      element.addEventListener(\'hidden.bs.dropdown\', event => this.onHidden.emit(event));\\n    }\\n  }\\n\\n  /**\\n   * Set child items dark mode\\n   * @private\\n   */\\n  private setDarkItems(): void {\\n    this.items?.forEach(item => {\\n      item.setDark(this.isDark);\\n    });\\n  }\\n\\n  /**\\n   * Toggles the dropdown menu of a given navbar or tabbed navigation.\\n   */\\n  public toggle(): void {\\n    this.dropdown?.toggle();\\n  }\\n\\n  /**\\n   * Shows the dropdown menu of a given navbar or tabbed navigation.\\n   */\\n  public show(): void {\\n    this.dropdown?.show();\\n  }\\n\\n  /**\\n   * Hides the dropdown menu of a given navbar or tabbed navigation.\\n   */\\n  public hide(): void {\\n    this.dropdown?.hide();\\n  }\\n\\n  /**\\n   * Updates the position of an element\'s dropdown.\\n   */\\n  public update(): void {\\n    this.dropdown?.update();\\n  }\\n\\n  /**\\n   * Destroys an element\'s dropdown. (Removes stored data on the DOM element)\\n   */\\n  public dispose(): void {\\n    this.dropdown?.dispose();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".link-list-heading:empty {\\n  display: none;\\n}\\n","styleUrl":"./dropdown.component.scss"}],"stylesData":"","extends":"AbstractComponent","accessors":{"buttonClass":{"name":"buttonClass","getSignature":{"name":"buttonClass","type":"string","returnType":"string","line":81}},"isFullWidth":{"name":"isFullWidth","getSignature":{"name":"isFullWidth","type":"boolean","returnType":"boolean","line":92}},"isDark":{"name":"isDark","getSignature":{"name":"isDark","type":"boolean","returnType":"boolean","line":96}}},"templateData":"<div class=\\"dropdown {{direction}}\\">\\n  <button #dropdownButton [id]=\\"id\\"\\n          [class]=\\"buttonClass\\"\\n          type=\\"button\\"\\n          data-bs-toggle=\\"dropdown\\"\\n          aria-haspopup=\\"true\\"\\n          aria-expanded=\\"false\\">\\n    <ng-content select=\\"[button]\\"></ng-content>\\n    <it-icon svgClass=\\"icon-expand\\" name=\\"expand\\" size=\\"sm\\" [color]=\\"this.color ? \'light\' : \'primary\'\\"></it-icon>\\n  </button>\\n\\n  <div class=\\"dropdown-menu\\" [class.full-width]=\\"isFullWidth\\" [class.dark]=\\"isDark\\" [attr.aria-labelledby]=\\"id\\">\\n    <div class=\\"link-list-wrapper\\">\\n      <div class=\\"link-list-heading\\">\\n        <ng-content select=\\"[listHeading]\\"></ng-content>\\n      </div>\\n      <ul class=\\"link-list\\">\\n        <ng-content select=\\"[list]\\"></ng-content>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"DropdownItemComponent","id":"component-DropdownItemComponent-025aac3cc000ee84f9f41c9436463f8571b83d53e97058aa4a121666599d04d356d35276dd2ac8e8b7cdff63450087443a7e24fdd7c981be3efdd2434656f380","file":"projects/design-angular-kit/src/lib/components/core/dropdown/dropdown-item/dropdown-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-dropdown-item","styleUrls":["./dropdown-item.component.scss"],"styles":[],"templateUrl":["./dropdown-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"active","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nActive item\\n","description":"<p>Active item</p>\\n","line":22,"type":"BooleanInput","decorators":[]},{"name":"divider","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow divider\\n","description":"<p>Show divider</p>\\n","line":17,"type":"BooleanInput","decorators":[]},{"name":"iconName","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe name of icon to show\\n","description":"<p>The name of icon to show</p>\\n","line":32,"type":"IconName","decorators":[]},{"name":"iconPosition","defaultValue":"\'right\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":851,"end":869,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":852,"end":859,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>right</p>\\n"}],"rawdescription":"\\n\\nThe icon position\\n","description":"<p>The icon position</p>\\n","line":38,"type":"\\"left\\" | \\"right\\"","decorators":[]},{"name":"large","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo increase the size of links\\n","description":"<p>To increase the size of links</p>\\n","line":27,"type":"BooleanInput","decorators":[]},{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":35,"type":"string","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs disabled link\\n","description":"<p>Is disabled link</p>\\n","line":30,"type":"BooleanInput","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"externalLink","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs an external link (false to not use Angular router link)\\n","description":"<p>Is an external link (false to not use Angular router link)</p>\\n","line":25,"type":"BooleanInput","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"href","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe router link action\\n\\nCommands to pass to Router#createUrlTree.\\n- array: commands to pass to Router#createUrlTree.\\n- string: shorthand for array of commands with just the string, i.e. [\'/route\']\\n- null|undefined: Disables the link by removing the href\\n","description":"<p>The router link action</p>\\n<p>Commands to pass to Router#createUrlTree.</p>\\n<ul>\\n<li>array: commands to pass to Router#createUrlTree.</li>\\n<li>string: shorthand for array of commands with just the string, i.e. [&#39;/route&#39;]</li>\\n<li>null|undefined: Disables the link by removing the href</li>\\n</ul>\\n","line":20,"type":"any[] | string | null","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"isDark","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"<p>Change icon color if menu is dark</p>\\n","line":44,"rawdescription":"\\n\\nChange icon color if menu is dark\\n","jsdoctags":[{"pos":976,"end":994,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":977,"end":984,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"setDark","args":[{"name":"dark","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dark","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { IconName } from \'../../../../interfaces/icon\';\\nimport { LinkComponent } from \'../../link/link.component\';\\n\\n@Component({\\n  selector: \'it-dropdown-item\',\\n  templateUrl: \'./dropdown-item.component.html\',\\n  styleUrls: [\'./dropdown-item.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class DropdownItemComponent extends LinkComponent {\\n\\n  /**\\n   * Show divider\\n   */\\n  @Input() divider?: BooleanInput;\\n\\n  /**\\n   * Active item\\n   */\\n  @Input() active?: BooleanInput;\\n\\n  /**\\n   * To increase the size of links\\n   */\\n  @Input() large?: BooleanInput;\\n\\n  /**\\n   * The name of icon to show\\n   */\\n  @Input() iconName?: IconName;\\n\\n  /**\\n   * The icon position\\n   * @default right\\n   */\\n  @Input() iconPosition: \'left\' | \'right\' = \'right\';\\n\\n  /**\\n   * Change icon color if menu is dark\\n   * @default false\\n   */\\n  isDark: boolean = false;\\n\\n  get isDivider(): boolean {\\n    return isTrueBooleanInput(this.divider);\\n  }\\n\\n  get isActive(): boolean {\\n    return isTrueBooleanInput(this.active);\\n  }\\n\\n  get isLarge(): boolean {\\n    return isTrueBooleanInput(this.large);\\n  }\\n\\n  get linkClass(): string {\\n    let linkClass = `list-item ${this.isActive ? \'active\' : \'dropdown-item\'}`;\\n    if (this.isDisabled) {\\n      linkClass += \' disabled\';\\n    }\\n    if (this.isLarge) {\\n      linkClass += \' large\';\\n    }\\n    if (this.iconName) {\\n      linkClass += ` ${this.iconPosition === \'right\' ? \'right-icon\' : \'left-icon\'}`;\\n    }\\n\\n    return linkClass;\\n  }\\n\\n  setDark(dark: boolean): void {\\n    if (this.isDark !== dark) {\\n      this.isDark = dark;\\n      this._changeDetectorRef.detectChanges();\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".list-item.disabled {\\n  pointer-events: none;\\n  cursor: default;\\n}\\n","styleUrl":"./dropdown-item.component.scss"}],"stylesData":"","extends":"LinkComponent","accessors":{"isDivider":{"name":"isDivider","getSignature":{"name":"isDivider","type":"boolean","returnType":"boolean","line":46}},"isActive":{"name":"isActive","getSignature":{"name":"isActive","type":"boolean","returnType":"boolean","line":50}},"isLarge":{"name":"isLarge","getSignature":{"name":"isLarge","type":"boolean","returnType":"boolean","line":54}},"linkClass":{"name":"linkClass","getSignature":{"name":"linkClass","type":"string","returnType":"string","line":58}}},"templateData":"<li>\\n  <span *ngIf=\\"isDivider; else item\\" class=\\"divider\\"></span>\\n\\n  <ng-template #item>\\n    <it-link [class]=\\"linkClass\\" [id]=\\"id\\" [href]=\\"href\\" [externalLink]=\\"externalLink\\" [disabled]=\\"disabled\\">\\n      <it-icon *ngIf=\\"iconName && iconPosition === \'left\'\\"\\n                size=\\"sm\\"\\n                [name]=\\"iconName\\"\\n                [color]=\\"isDark ? \'light\' : \'primary\'\\"\\n                [svgClass]=\\"iconPosition\\"></it-icon>\\n\\n      <span><ng-content></ng-content></span>\\n\\n      <it-icon *ngIf=\\"iconName && iconPosition === \'right\'\\"\\n                size=\\"sm\\"\\n                [name]=\\"iconName\\"\\n                [color]=\\"isDark ? \'light\' : \'primary\'\\"\\n                [svgClass]=\\"iconPosition\\"></it-icon>\\n\\n      <span *ngIf=\\"isActive\\" class=\\"visually-hidden\\">{{\'it.core.active\'|translate}}</span>\\n    </it-link>\\n  </ng-template>\\n</li>\\n"},{"name":"ErrorPageComponent","id":"component-ErrorPageComponent-ae4ad290c051971b67b1baa1b5c6ea84758ed69dfe3d66a8ab21e00c9792e0763818d5ed9bdc262e29e23aa9df3bfc419e4a73d13df6bfdd1cd2b53600fc4d5f","file":"projects/design-angular-kit/src/lib/components/utils/error-page/error-page.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-error-page","styleUrls":[],"styles":[],"templateUrl":["./error-page.component.html"],"viewProviders":[],"inputsClass":[{"name":"errorCode","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe error code to show\\n","description":"<p>The error code to show</p>\\n","line":15,"type":"number | \\"404\\" | \\"403\\" | \\"500\\"","decorators":[]},{"name":"errorDescription","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom error description\\n- If set it will be displayed instead of the default description.\\n- It is possible to use i18n keys\\n","description":"<p>Custom error description</p>\\n<ul>\\n<li>If set it will be displayed instead of the default description.</li>\\n<li>It is possible to use i18n keys</li>\\n</ul>\\n","line":35,"type":"string","decorators":[]},{"name":"errorTitle","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom error title\\n- If set it will be displayed instead of the default title.\\n- It is possible to use i18n keys\\n","description":"<p>Custom error title</p>\\n<ul>\\n<li>If set it will be displayed instead of the default title.</li>\\n<li>It is possible to use i18n keys</li>\\n</ul>\\n","line":28,"type":"string","decorators":[]},{"name":"showBackButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":988,"end":1012,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":989,"end":996,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true - show</p>\\n"}],"rawdescription":"\\n\\nShow/Hide back button\\n","description":"<p>Show/Hide back button</p>\\n","line":41,"type":"BooleanInput","decorators":[]},{"name":"showErrorCode","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":510,"end":534,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":511,"end":518,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true - show</p>\\n"}],"rawdescription":"\\n\\nShow/Hide error code\\n","description":"<p>Show/Hide error code</p>\\n","line":21,"type":"BooleanInput","decorators":[]},{"name":"showHomeButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1103,"end":1127,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1104,"end":1111,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true - show</p>\\n"}],"rawdescription":"\\n\\nShow/Hide home button\\n","description":"<p>Show/Hide home button</p>\\n","line":47,"type":"BooleanInput","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-error-page\',\\n  templateUrl: \'./error-page.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ErrorPageComponent {\\n\\n  /**\\n   * The error code to show\\n   */\\n  @Input() errorCode?: number | 404 | 403 | 500;\\n\\n  /**\\n   * Show/Hide error code\\n   * @default true - show\\n   */\\n  @Input() showErrorCode?: BooleanInput = true;\\n\\n  /**\\n   * Custom error title\\n   * - If set it will be displayed instead of the default title.\\n   * - It is possible to use i18n keys\\n   */\\n  @Input() errorTitle?: string;\\n\\n  /**\\n   * Custom error description\\n   * - If set it will be displayed instead of the default description.\\n   * - It is possible to use i18n keys\\n   */\\n  @Input() errorDescription?: string;\\n\\n  /**\\n   * Show/Hide back button\\n   * @default true - show\\n   */\\n  @Input() showBackButton?: BooleanInput = true;\\n\\n  /**\\n   * Show/Hide home button\\n   * @default true - show\\n   */\\n  @Input() showHomeButton?: BooleanInput = true;\\n\\n  constructor(\\n    private readonly route: ActivatedRoute\\n  ) {\\n    this.route.data.subscribe(data => {\\n      if (!this.errorCode && data[\'errorCode\']) {\\n        this.errorCode = data[\'errorCode\']; // Get errorCode from route data\\n      }\\n      if (data[\'showErrorCode\'] !== undefined) {\\n        this.showBackButton = data[\'showErrorCode\'];  // Get showErrorCode from route data\\n      }\\n      if (!this.errorTitle && data[\'errorTitle\']) {\\n        this.errorTitle = data[\'errorTitle\'];  // Get errorTitle from route data\\n      }\\n      if (!this.errorDescription && data[\'errorDescription\']) {\\n        this.errorDescription = data[\'errorDescription\'];  // Get errorDescription from route data\\n      }\\n      if (data[\'showBackButton\'] !== undefined) {\\n        this.showBackButton = data[\'showBackButton\'];  // Get showBackButton from route data\\n      }\\n      if (data[\'showHomeButton\'] !== undefined) {\\n        this.showHomeButton = data[\'showHomeButton\'];  // Get showHomeButton from route data\\n      }\\n    });\\n  }\\n\\n  get isDefaultErrorCode(): boolean {\\n    return this.errorCode === 404 || this.errorCode === 403 || this.errorCode === 500;\\n  }\\n\\n  get isShowErrorCode(): boolean {\\n    return isTrueBooleanInput(this.showErrorCode);\\n  }\\n\\n  get isShowBackButton(): boolean {\\n    return isTrueBooleanInput(this.showBackButton);\\n  }\\n\\n  get isShowHomeButton(): boolean {\\n    return isTrueBooleanInput(this.showHomeButton);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":47,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"isDefaultErrorCode":{"name":"isDefaultErrorCode","getSignature":{"name":"isDefaultErrorCode","type":"boolean","returnType":"boolean","line":74}},"isShowErrorCode":{"name":"isShowErrorCode","getSignature":{"name":"isShowErrorCode","type":"boolean","returnType":"boolean","line":78}},"isShowBackButton":{"name":"isShowBackButton","getSignature":{"name":"isShowBackButton","type":"boolean","returnType":"boolean","line":82}},"isShowHomeButton":{"name":"isShowHomeButton","getSignature":{"name":"isShowHomeButton","type":"boolean","returnType":"boolean","line":86}}},"templateData":"<div class=\\"container text-center mt-5\\">\\n  <h1 *ngIf=\\"errorCode && isShowErrorCode\\">{{errorCode}}</h1>\\n  <h2>\\n    <ng-container *ngIf=\\"!errorTitle && isDefaultErrorCode; else customTitle\\">\\n      {{\'it.utils.error-page.\' + errorCode + \'.title\' | translate}}\\n    </ng-container>\\n    <ng-template #customTitle>{{(errorTitle || \'it.errors.generic\') | translate}}</ng-template>\\n  </h2>\\n\\n  <p class=\\"mt-3 w-75 mx-auto\\">\\n    <ng-container\\n      *ngIf=\\"!errorDescription && isDefaultErrorCode; else customDescription\\">\\n      {{\'it.utils.error-page.\' + errorCode + \'.description\' | translate}}\\n    </ng-container>\\n    <ng-template #customDescription>\\n      {{(errorDescription || \'it.errors.generic-support-message\') | translate}}\\n    </ng-template>\\n  </p>\\n\\n  <div class=\\"mt-5\\" *ngIf=\\"isShowBackButton || isShowHomeButton\\">\\n    <it-back-button *ngIf=\\"isShowBackButton\\"></it-back-button>\\n    <a *ngIf=\\"isShowHomeButton\\" itButton=\\"outline-primary\\" class=\\"ms-3\\" routerLink=\\"/\\"\\n       title=\\"{{\'it.utils.error-page.go-to-homepage\' | translate}}\\">\\n      {{\'it.utils.error-page.go-to-homepage\' | translate}}\\n    </a>\\n  </div>\\n</div>\\n"},{"name":"HeaderComponent","id":"component-HeaderComponent-91e5bb9382d20a8cf7d237755a93e9c20dd99358d7fc4425c7e028cf112651cc8055270c6dac740923568a795b9e29c9e94d2e0453508b33f92b33234db18643","file":"projects/design-angular-kit/src/lib/components/navigation/header/header.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-header","styleUrls":["./header.component.scss"],"styles":[],"templateUrl":["./header.component.html"],"viewProviders":[],"inputsClass":[{"name":"light","deprecated":false,"deprecationMessage":"","line":13,"type":"BooleanInput","decorators":[]},{"name":"loginStyle","defaultValue":"\'full\'","deprecated":false,"deprecationMessage":"","line":19,"type":"\\"none\\" | \\"default\\" | \\"full\\"","decorators":[]},{"name":"showSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":23,"type":"BooleanInput","decorators":[]},{"name":"showSlim","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":15,"type":"BooleanInput","decorators":[]},{"name":"slimTitle","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"smallHeader","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":21,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"loginClick","deprecated":false,"deprecationMessage":"","line":25,"type":"EventEmitter<Event>"},{"name":"searchClick","deprecated":false,"deprecationMessage":"","line":27,"type":"EventEmitter<Event>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\n\\n@Component({\\n  selector: \'it-header\',\\n  templateUrl: \'./header.component.html\',\\n  styleUrls: [\'./header.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class HeaderComponent extends AbstractComponent {\\n\\n  @Input() light?: BooleanInput;\\n\\n  @Input() showSlim?: BooleanInput = true;\\n\\n  @Input() slimTitle?: string;\\n\\n  @Input() loginStyle: \'none\' | \'default\' | \'full\' = \'full\';\\n\\n  @Input() smallHeader?: BooleanInput = true;\\n\\n  @Input() showSearch?: BooleanInput = true;\\n\\n  @Output() loginClick: EventEmitter<Event>;\\n\\n  @Output() searchClick: EventEmitter<Event>;\\n\\n  /**\\n   * TODO: complete header\\n   */\\n  constructor() {\\n    super();\\n\\n    this.loginClick = new EventEmitter<Event>();\\n    this.searchClick = new EventEmitter<Event>();\\n  }\\n\\n  get isLight(): boolean {\\n    return isTrueBooleanInput(this.light);\\n  }\\n\\n  get isShowSlim(): boolean {\\n    return isTrueBooleanInput(this.showSlim);\\n  }\\n\\n  get isSmallHeader(): boolean {\\n    return isTrueBooleanInput(this.smallHeader);\\n  }\\n\\n  get isShowSearch(): boolean {\\n    return isTrueBooleanInput(this.showSearch);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".nav-mobile:has(.link-list-wrapper:empty) {\\n  display: none;\\n}\\n","styleUrl":"./header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"<p>TODO: complete header</p>\\n","deprecated":false,"deprecationMessage":"","args":[],"line":27,"rawdescription":"\\n\\nTODO: complete header\\n"},"extends":"AbstractComponent","accessors":{"isLight":{"name":"isLight","getSignature":{"name":"isLight","type":"boolean","returnType":"boolean","line":39}},"isShowSlim":{"name":"isShowSlim","getSignature":{"name":"isShowSlim","type":"boolean","returnType":"boolean","line":43}},"isSmallHeader":{"name":"isSmallHeader","getSignature":{"name":"isSmallHeader","type":"boolean","returnType":"boolean","line":47}},"isShowSearch":{"name":"isShowSearch","getSignature":{"name":"isShowSearch","type":"boolean","returnType":"boolean","line":51}}},"templateData":"<header class=\\"it-header-wrapper\\">\\n  <div *ngIf=\\"isShowSlim\\" class=\\"it-header-slim-wrapper\\" [class.theme-light]=\\"isLight\\">\\n    <div class=\\"container\\">\\n      <div class=\\"row\\">\\n        <div class=\\"col-12\\">\\n          <div class=\\"it-header-slim-wrapper-content\\">\\n            <a class=\\"d-none d-lg-block navbar-brand\\" href=\\"#\\">{{slimTitle}}</a>\\n            <div class=\\"nav-mobile\\">\\n              <nav [attr.aria-label]=\\"\'it.navigation.secondary-navigation\'|translate\\">\\n                <a class=\\"it-opener d-lg-none\\" data-bs-toggle=\\"collapse\\" href=\\"#menuC1\\" role=\\"button\\"\\n                   aria-expanded=\\"false\\" aria-controls=\\"menuC1\\">\\n                  <span>{{slimTitle}}</span>\\n                  <it-icon name=\\"expand\\"></it-icon>\\n                </a>\\n                <div class=\\"link-list-wrapper collapse\\" id=\\"menuC1\\">\\n                  <ng-content select=\\"[slimLinkList]\\"></ng-content>\\n                </div>\\n              </nav>\\n            </div>\\n            <div class=\\"it-header-slim-right-zone\\">\\n              \x3c!-- TODO: add language dropdown --\x3e\\n              <ng-content select=\\"[slimRightZone]\\"></ng-content>\\n              <div *ngIf=\\"loginStyle === \'default\'\\" class=\\"it-access-top-wrapper\\">\\n                <a class=\\"btn btn-primary btn-sm\\" (click)=\\"loginClick.emit($event)\\">\\n                  {{\'it.navigation.login\'|translate}}\\n                </a>\\n              </div>\\n            </div>\\n            <button *ngIf=\\"loginStyle === \'full\'\\" itButton=\\"primary\\" class=\\"btn-full\\" (click)=\\"loginClick.emit($event)\\">\\n              <span class=\\"rounded-icon\\">\\n                <it-icon name=\\"user\\" color=\\"primary\\"></it-icon>\\n                <span class=\\"d-none d-lg-block\\">{{\'it.navigation.full-login\'|translate}}</span>\\n              </span>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\"it-nav-wrapper\\">\\n    <div class=\\"it-header-center-wrapper\\" [class.it-small-header]=\\"isSmallHeader\\">\\n      <div class=\\"container-fluid\\">\\n        <div class=\\"row\\">\\n          <div class=\\"col-12\\">\\n            <div class=\\"it-header-center-content-wrapper\\">\\n              <div class=\\"it-brand-wrapper\\">\\n                <ng-content select=\\"[brand]\\"></ng-content>\\n              </div>\\n              <div class=\\"it-right-zone\\">\\n                <ng-content select=\\"[rightZone]\\"></ng-content>\\n\\n                <div class=\\"it-search-wrapper\\" *ngIf=\\"isShowSearch\\">\\n                  <span class=\\"d-none d-md-block\\">{{\'it.navigation.search\'|translate}}</span>\\n                  <a class=\\"search-link rounded-icon\\" [attr.aria-label]=\\"\'it.navigation.website-search\'|translate\\" (click)=\\"searchClick.emit($event)\\">\\n                    <it-icon name=\\"search\\"></it-icon>\\n                  </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    \x3c!-- TODO: complete header --\x3e\\n  </div>\\n</header>\\n"},{"name":"IconComponent","id":"component-IconComponent-8725e2db3ad695bf0b3bd797bb1544e6afc751eb6fa49d9071d01879007d541d4e30ba5f10a00dd9e56f8f67780dc4835a3cb65a00b7f5f89eb50cbc8c0aa5c3","file":"projects/design-angular-kit/src/lib/components/utils/icon/icon.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-icon[name]","styleUrls":[],"styles":[],"templateUrl":["./icon.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe icon color\\n","description":"<p>The icon color</p>\\n","line":25,"type":"IconColor","decorators":[]},{"name":"name","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe icon name\\n","description":"<p>The icon name</p>\\n","line":15,"type":"IconName","decorators":[]},{"name":"padded","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate a padding proportional to the size of the surrounding icon.\\n","description":"<p>Create a padding proportional to the size of the surrounding icon.</p>\\n","line":30,"type":"BooleanInput","decorators":[]},{"name":"size","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe icon size\\n","description":"<p>The icon size</p>\\n","line":20,"type":"IconSize","decorators":[]},{"name":"svgClass","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class of svg\\n","description":"<p>Custom class of svg</p>\\n","line":35,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { IconColor, IconName, IconSize } from \'../../../interfaces/icon\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-icon[name]\',\\n  templateUrl: \'./icon.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class IconComponent {\\n\\n  /**\\n   * The icon name\\n   */\\n  @Input() name!: IconName;\\n\\n  /**\\n   * The icon size\\n   */\\n  @Input() size?: IconSize;\\n\\n  /**\\n   * The icon color\\n   */\\n  @Input() color?: IconColor;\\n\\n  /**\\n   * Create a padding proportional to the size of the surrounding icon.\\n   */\\n  @Input() padded?: BooleanInput;\\n\\n  /**\\n   * Custom class of svg\\n   */\\n  @Input() svgClass?: string;\\n\\n  /**\\n   * Return the icon href\\n   */\\n  get iconHref(): string {\\n    return `/bootstrap-italia/dist/svg/sprites.svg#it-${this.name}`;\\n  }\\n\\n  /**\\n   * Return the icon class\\n   */\\n  get iconClass(): string {\\n    let iconClass = \'icon\';\\n    if (this.size) {\\n      iconClass += ` icon-${this.size}`;\\n    }\\n    if (this.color) {\\n      iconClass += ` icon-${this.color}`;\\n    }\\n    if (isTrueBooleanInput(this.padded)) {\\n      iconClass += ` icon-padded`;\\n    }\\n    if (this.svgClass) {\\n      iconClass += ` ${this.svgClass}`;\\n    }\\n    return iconClass;\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"iconHref":{"name":"iconHref","getSignature":{"name":"iconHref","type":"string","returnType":"string","line":40,"rawdescription":"\\n\\nReturn the icon href\\n","description":"<p>Return the icon href</p>\\n"}},"iconClass":{"name":"iconClass","getSignature":{"name":"iconClass","type":"string","returnType":"string","line":47,"rawdescription":"\\n\\nReturn the icon class\\n","description":"<p>Return the icon class</p>\\n"}}},"templateData":"<svg [class]=\\"iconClass\\">\\n  <use [attr.href]=\\"iconHref\\" [attr.xlink:href]=\\"iconHref\\"></use>\\n</svg>\\n"},{"name":"InputComponent","id":"component-InputComponent-06f189253c6bcc94aae1f22d695884f38218b392af89c672b30e083bf16b0d1ba4f43017478c6bbdcea3970d904039a4911959fb04012a5bdbca7574c9c5e657","file":"projects/design-angular-kit/src/lib/components/form/input/input.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-input","styleUrls":["./input.component.scss"],"styles":[],"templateUrl":["./input.component.html"],"viewProviders":[],"inputsClass":[{"name":"adaptive","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo make the numeric field automatically resize according to the value contained in it. [Used only in type = \'number\']\\n","description":"<p>To make the numeric field automatically resize according to the value contained in it. [Used only in type = &#39;number&#39;]</p>\\n","line":67,"type":"BooleanInput","decorators":[]},{"name":"autocompleteData","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2153,"end":2175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2154,"end":2161,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined</p>\\n"}],"rawdescription":"\\n\\nIndicates the list of searchable elements on which to base the input autocomplete system [Optional. Used only in type = \'search\']\\nIf you need to retrieve items via API, can pass a function of Observable\\n","description":"<p>Indicates the list of searchable elements on which to base the input autocomplete system [Optional. Used only in type = &#39;search&#39;]\\nIf you need to retrieve items via API, can pass a function of Observable</p>\\n","line":74,"type":"Array<AutocompleteItem> | ","decorators":[]},{"name":"autocompleteDebounceTime","defaultValue":"300","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":2448,"end":2469,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2449,"end":2456,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>300 [ms]</p>\\n"}],"rawdescription":"\\n\\nTime span [ms] has passed without another source emission, to delay data filtering.\\nUseful when the user is typing multiple letters\\n","description":"<p>Time span [ms] has passed without another source emission, to delay data filtering.\\nUseful when the user is typing multiple letters</p>\\n","line":81,"type":"number","decorators":[]},{"name":"currency","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf is a currency number [Used only in type = \'number\']\\n","description":"<p>If is a currency number [Used only in type = &#39;number&#39;]</p>\\n","line":57,"type":"BooleanInput","decorators":[]},{"name":"description","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe input description\\n","description":"<p>The input description</p>\\n","line":31,"type":"string","decorators":[]},{"name":"max","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe max value [Used only in type = \'number\']\\n","description":"<p>The max value [Used only in type = &#39;number&#39;]</p>\\n","line":42,"type":"number","decorators":[]},{"name":"min","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe min value [Used only in type = \'number\']\\n","description":"<p>The min value [Used only in type = &#39;number&#39;]</p>\\n","line":47,"type":"number","decorators":[]},{"name":"percentage","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf is a percentage number [Used only in type = \'number\']\\n","description":"<p>If is a percentage number [Used only in type = &#39;number&#39;]</p>\\n","line":62,"type":"BooleanInput","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe input placeholder\\n","description":"<p>The input placeholder</p>\\n","line":26,"type":"string","decorators":[]},{"name":"readonly","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo prevent modification of the contained value.\\n- <b>plaintext</b>: Readonly field in the form stylized as plain text\\n","description":"<p>To prevent modification of the contained value.</p>\\n<ul>\\n<li><b>plaintext</b>: Readonly field in the form stylized as plain text</li>\\n</ul>\\n","line":37,"type":"BooleanInput | \\"plaintext\\"","decorators":[]},{"name":"step","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe step value [Used only in type = \'number\']\\n","description":"<p>The step value [Used only in type = &#39;number&#39;]</p>\\n","line":52,"type":"number | \\"any\\"","decorators":[]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":855,"end":872,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":856,"end":863,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>text</p>\\n"}],"rawdescription":"\\n\\nThe input type\\n","description":"<p>The input type</p>\\n","line":21,"type":"InputControlType","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"onAutocompleteSelected","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when the Autocomplete Item has been selected\\n","description":"<p>Fired when the Autocomplete Item has been selected</p>\\n","line":86,"type":"EventEmitter<AutocompleteItem>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"autocompleteResults$","defaultValue":"new Observable()","deprecated":false,"deprecationMessage":"","type":"Observable<literal type>","optional":false,"description":"<p>Observable da cui vengono emessi i risultati dell&#39;auto completamento</p>\\n","line":163,"rawdescription":"\\nObservable da cui vengono emessi i risultati dell\'auto completamento"},{"name":"showAutocompletion","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":88},{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"autocompleteItemTrackByValueFn","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"item","type":"AutocompleteItem","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":263,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"item","type":"AutocompleteItem","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAutocompleteResults$","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":222,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate the autocomplete list\\n","description":"<p>Create the autocomplete list</p>\\n","modifierKind":[121]},{"name":"incrementNumber","args":[{"name":"decrease","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":200,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIncrement or decrease the input number value of step\\n","description":"<p>Increment or decrease the input number value of step</p>\\n","jsdoctags":[{"name":{"pos":6315,"end":6323,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"decrease"},"type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"pos":6309,"end":6314,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>true to decrease value</p>\\n"}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractFormComponent"}},{"name":"onEntryClick","args":[{"name":"entry","type":"AutocompleteItem","deprecated":false,"deprecationMessage":""},{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":251,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"entry","type":"AutocompleteItem","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onKeyDown","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":267,"deprecated":false,"deprecationMessage":""},{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\nimport { AutocompleteItem, InputControlType } from \'../../../interfaces/form\';\\nimport { AbstractControl, ValidatorFn, Validators } from \'@angular/forms\';\\nimport { ItValidators } from \'../../../validators/it-validators\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { debounceTime, distinctUntilChanged, map, Observable, of, switchMap } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-input\',\\n  templateUrl: \'./input.component.html\',\\n  styleUrls: [\'./input.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class InputComponent extends AbstractFormComponent<string | number> {\\n\\n  /**\\n   * The input type\\n   * @default text\\n   */\\n  @Input() type: InputControlType = \'text\';\\n\\n  /**\\n   * The input placeholder\\n   */\\n  @Input() placeholder: string = \'\';\\n\\n  /**\\n   * The input description\\n   */\\n  @Input() description?: string;\\n\\n  /**\\n   * To prevent modification of the contained value.\\n   * - <b>plaintext</b>: Readonly field in the form stylized as plain text\\n   */\\n  @Input() readonly?: BooleanInput | \'plaintext\';\\n\\n  /**\\n   * The max value [Used only in type = \'number\']\\n   */\\n  @Input() max?: number;\\n\\n  /**\\n   * The min value [Used only in type = \'number\']\\n   */\\n  @Input() min?: number;\\n\\n  /**\\n   * The step value [Used only in type = \'number\']\\n   */\\n  @Input() step?: number | \'any\';\\n\\n  /**\\n   * If is a currency number [Used only in type = \'number\']\\n   */\\n  @Input() currency?: BooleanInput;\\n\\n  /**\\n   * If is a percentage number [Used only in type = \'number\']\\n   */\\n  @Input() percentage?: BooleanInput;\\n\\n  /**\\n   * To make the numeric field automatically resize according to the value contained in it. [Used only in type = \'number\']\\n   */\\n  @Input() adaptive?: BooleanInput;\\n\\n  /**\\n   * Indicates the list of searchable elements on which to base the input autocomplete system [Optional. Used only in type = \'search\']\\n   * If you need to retrieve items via API, can pass a function of Observable\\n   * @default undefined\\n   */\\n  @Input() autocompleteData?: Array<AutocompleteItem> | ((search?: string) => Observable<Array<AutocompleteItem>>);\\n\\n  /**\\n   * Time span [ms] has passed without another source emission, to delay data filtering.\\n   * Useful when the user is typing multiple letters\\n   * @default 300 [ms]\\n   */\\n  @Input() autocompleteDebounceTime: number = 300;\\n\\n  /**\\n   * Fired when the Autocomplete Item has been selected\\n   */\\n  @Output() onAutocompleteSelected: EventEmitter<AutocompleteItem> = new EventEmitter();\\n\\n  showAutocompletion = false;\\n\\n\\n  get isActiveLabel(): boolean {\\n    const value = this.control.value;\\n    if ((!!value && value !== 0) || value === 0 || !!this.placeholder) {\\n      return true;\\n    }\\n\\n    if (this.type === \'number\' && (isTrueBooleanInput(this.currency) || isTrueBooleanInput(this.percentage))) {\\n      return true;\\n    }\\n\\n    return this.type === \'date\' || this.type === \'time\' || this.type === \'color\';\\n  }\\n\\n  /**\\n   * Check is readonly field\\n   */\\n  get isReadonly(): boolean {\\n    return this.readonly === \'plaintext\' || isTrueBooleanInput(this.readonly);\\n  }\\n\\n  /**\\n   * Return the invalid message string from TranslateService\\n   */\\n  override get invalidMessage(): Observable<string> {\\n    if (this.hasError(\'min\') && this.min) {\\n      return this._translateService.get(\'it.errors.min-invalid\', {\\n        min: this.min\\n      });\\n    }\\n    if (this.hasError(\'max\') && this.max) {\\n      return this._translateService.get(\'it.errors.max-invalid\', {\\n        max: this.max\\n      });\\n    }\\n    if (this.hasError(\'minlength\')) {\\n      const error = this.getError(\'minlength\');\\n      return this._translateService.get(\'it.errors.min-length-invalid\', { min: error.requiredLength });\\n    }\\n    if (this.hasError(\'maxlength\')) {\\n      const error = this.getError(\'maxlength\');\\n      return this._translateService.get(\'it.errors.max-length-invalid\', { max: error.requiredLength });\\n    }\\n    if (this.hasError(\'email\') || this.hasError(\'invalidEmail\')) {\\n      return this._translateService.get(\'it.errors.email-invalid\');\\n    }\\n    if (this.hasError(\'invalidTel\')) {\\n      return this._translateService.get(\'it.errors.tel-invalid\');\\n    }\\n    if (this.hasError(\'invalidUrl\')) {\\n      return this._translateService.get(\'it.errors.url-invalid\');\\n    }\\n    if (this.hasError(\'invalidTaxCode\')) {\\n      return this._translateService.get(\'it.errors.tax-code-invalid\');\\n    }\\n    if (this.hasError(\'invalidVatNumber\')) {\\n      return this._translateService.get(\'it.errors.vat-number-invalid\');\\n    }\\n    if (this.hasError(\'invalidCap\')) {\\n      return this._translateService.get(\'it.errors.cap-invalid\');\\n    }\\n    if (this.hasError(\'invalidRegex\')) {\\n      return this._translateService.get(\'it.errors.regex-invalid\');\\n    }\\n    if (this.hasError(\'pattern\')) {\\n      const error = this.getError(\'pattern\');\\n      return this._translateService.get(\'it.errors.pattern-invalid\', { pattern: error.requiredPattern });\\n    }\\n\\n    return super.invalidMessage;\\n  }\\n\\n  /** Observable da cui vengono emessi i risultati dell\'auto completamento */\\n  autocompleteResults$: Observable<{ searchedValue: string, relatedEntries: Array<AutocompleteItem> }> = new Observable();\\n\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    const validators: Array<ValidatorFn> = [];\\n    switch (this.type) {\\n      case \'number\':\\n        if (isTrueBooleanInput(this.percentage)) {\\n          this.min = this.min || 0;\\n          this.max = this.max || 100;\\n        }\\n\\n        // Dynamic min/max validators\\n        validators.push((control: AbstractControl) => this.min ? Validators.min(this.min)(control) : null);\\n        validators.push((control: AbstractControl) => this.max ? Validators.max(this.max)(control) : null);\\n        break;\\n      case \'email\':\\n        validators.push(ItValidators.email);\\n        break;\\n      case \'tel\':\\n        validators.push(ItValidators.tel);\\n        break;\\n      case \'url\':\\n        validators.push(ItValidators.url);\\n        break;\\n    }\\n\\n    this.addValidators(validators);\\n    this.autocompleteResults$ = this.getAutocompleteResults$();\\n  }\\n\\n  /**\\n   * Increment or decrease the input number value of step\\n   * @param decrease true to decrease value\\n   */\\n  incrementNumber(decrease: boolean = false): void {\\n    if (this.type !== \'number\') {\\n      return;\\n    }\\n    const step = (this.step === \'any\' ? 1 : (this.step ?? 1));\\n    let value = Number(this.control.value);\\n    value = (isNaN(value) ? 0 : value) + (decrease ? -step : step);\\n    value = Math.round(value * 1e12) / 1e12; // prevent js decimal error\\n\\n    if (this.min !== undefined && value < this.min) {\\n      value = this.min;\\n    } else if (this.max !== undefined && value > this.max) {\\n      value = this.max;\\n    }\\n\\n    this.control.setValue(value);\\n  }\\n\\n\\n  /**\\n   * Create the autocomplete list\\n   */\\n  private getAutocompleteResults$(): Observable<{ searchedValue: string, relatedEntries: Array<AutocompleteItem> }> {\\n    if (this.type !== \'search\') {\\n      return of({ searchedValue: \'\', relatedEntries: [] });\\n    }\\n    return this.control.valueChanges.pipe(\\n      debounceTime(this.autocompleteDebounceTime), // Delay filter data after time span has passed without another source emission, useful when the user is typing multiple letters\\n      distinctUntilChanged(), // Only if searchValue is distinct in comparison to the last value\\n      switchMap(searchedValue => {\\n        if (!this.autocompleteData) {\\n          return of({ searchedValue, relatedEntries: [] });\\n        }\\n\\n        const autoCompleteData$ = Array.isArray(this.autocompleteData) ? of(this.autocompleteData) : this.autocompleteData(searchedValue);\\n        return autoCompleteData$.pipe(\\n          map(autocompleteData => {\\n            if (!searchedValue) {\\n              return { searchedValue, relatedEntries: [] };\\n            }\\n\\n            const lowercaseValue = searchedValue.toLowerCase();\\n            const relatedEntries = autocompleteData.filter(item => item.value?.toLowerCase().includes(lowercaseValue));\\n\\n            return { searchedValue, relatedEntries };\\n          })\\n        );\\n      })\\n    );\\n  }\\n\\n  onEntryClick(entry: AutocompleteItem, event: Event) {\\n    // Se non \xe8 stato definito un link associato all\'elemento dell\'autocomplete, probabilmente il desiderata\\n    // non \xe8 effettuare la navigazione al default \'#\', pertanto in tal caso meglio annullare la navigazione.\\n    if (!entry.link) {\\n      event.preventDefault();\\n    }\\n\\n    this.onAutocompleteSelected.next(entry);\\n    this.control.setValue(entry.value);\\n    this.showAutocompletion = false;\\n  }\\n\\n  autocompleteItemTrackByValueFn(index: number, item: AutocompleteItem) {\\n    return item.value;\\n  }\\n\\n  onKeyDown() {\\n    this.showAutocompletion = this.type === \'search\';\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-group {\\n  label {\\n    z-index: 1000;\\n  }\\n\\n  input:focus:not(.focus--mouse) {\\n    box-shadow: inherit !important;\\n    border-color: inherit !important;\\n  }\\n\\n  .input-number {\\n    button.input-number-add {\\n      top: 0;\\n    }\\n\\n    button.input-number-sub {\\n      bottom: 0;\\n    }\\n  }\\n\\n  .input-group-text:empty {\\n    display: none;\\n  }\\n\\n  label.empty-prepend-label {\\n    left: auto !important;\\n    max-width: 100% !important;\\n  }\\n}\\n\\n","styleUrl":"./input.component.scss"}],"stylesData":"","extends":"AbstractFormComponent","accessors":{"isActiveLabel":{"name":"isActiveLabel","getSignature":{"name":"isActiveLabel","type":"boolean","returnType":"boolean","line":91}},"isReadonly":{"name":"isReadonly","getSignature":{"name":"isReadonly","type":"boolean","returnType":"boolean","line":107,"rawdescription":"\\n\\nCheck is readonly field\\n","description":"<p>Check is readonly field</p>\\n"}},"invalidMessage":{"name":"invalidMessage","getSignature":{"name":"invalidMessage","type":"","returnType":"Observable<string>","line":114,"rawdescription":"\\n\\nReturn the invalid message string from TranslateService\\n","description":"<p>Return the invalid message string from TranslateService</p>\\n"}}},"templateData":"<div class=\\"form-group\\">\\n  <div class=\\"input-group\\">\\n    <div class=\\"input-group-prepend\\" [class.d-none]=\\"!prependText.hasChildNodes() && !prepend.hasChildNodes()\\">\\n      <div #prepend>\\n        <ng-content select=\\"[prepend]\\"></ng-content>\\n      </div>\\n      <div class=\\"input-group-text\\" #prependText>\\n        <ng-content select=\\"[prependText]\\"></ng-content>\\n      </div>\\n    </div>\\n\\n    <label *ngIf=\\"label\\" [for]=\\"id\\" [class.active]=\\"isActiveLabel\\"\\n           [class.empty-prepend-label]=\\"!prependText.hasChildNodes() && !prepend.hasChildNodes()\\">\\n      {{label}}\\n    </label>\\n\\n    <span *ngIf=\\"type === \'number\'\\"\\n          class=\\"input-number\\"\\n          [class.input-number-currency]=\\"currency\\"\\n          [class.input-number-percentage]=\\"percentage\\"\\n          [class.input-number-adaptive]=\\"adaptive\\">\\n\\n      <input type=\\"number\\"\\n             [id]=\\"id\\"\\n             [step]=\\"step ?? null\\"\\n             [class.is-invalid]=\\"isInvalid\\"\\n             [class.is-valid]=\\"isValid\\"\\n             [formControl]=\\"control\\"\\n             [placeholder]=\\"placeholder\\"\\n             [readonly]=\\"isReadonly\\"\\n             [attr.aria-describedby]=\\"id + \'-description\'\\"\\n             (blur)=\\"markAsTouched()\\" />\\n\\n      <button type=\\"button\\" class=\\"input-number-add\\" (click)=\\"incrementNumber()\\">\\n        <span class=\\"visually-hidden\\">{{\'it.form.increase-value\'}}</span>\\n      </button>\\n      <button type=\\"button\\" class=\\"input-number-sub\\" (click)=\\"incrementNumber(true)\\">\\n        <span class=\\"visually-hidden\\">{{\'it.form.decrease-value\'}}</span>\\n      </button>\\n    </span>\\n\\n    <input *ngIf=\\"type !== \'number\'\\"\\n           [id]=\\"id\\"\\n           [type]=\\"type\\"\\n           [class.form-control]=\\"readonly !== \'plaintext\'\\"\\n           [class.form-control-plaintext]=\\"readonly === \'plaintext\'\\"\\n           [class.is-invalid]=\\"isInvalid\\"\\n           [class.is-valid]=\\"isValid\\"\\n           [formControl]=\\"control\\"\\n           [placeholder]=\\"placeholder\\"\\n           [readonly]=\\"isReadonly\\"\\n           (keydown)=\\"onKeyDown()\\"\\n           [attr.aria-describedby]=\\"id + \'-description\'\\"\\n           (blur)=\\"markAsTouched()\\">\\n\\n    <div class=\\"input-group-append\\">\\n      <ng-content select=\\"[append]\\"></ng-content>\\n\\n      <div class=\\"input-group-text\\">\\n        <ng-content select=\\"[appendText]\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <small *ngIf=\\"description\\" [id]=\\"id + \'-description\'\\" class=\\"form-text\\">{{description}}</small>\\n\\n  \x3c!-- INIZIO gestione AUTOCOMPLETAMENTO --\x3e\\n  <ng-container *ngIf=\\"type === \'search\'\\">\\n    \x3c!-- Icona lente per autocompletamento --\x3e\\n    <span class=\\"autocomplete-icon\\" aria-hidden=\\"true\\">\\n      <it-icon name=\\"search\\" size=\\"sm\\"></it-icon>\\n    </span>\\n\\n    <ng-container *ngIf=\\"autocompleteResults$ | async as autocomplete\\">\\n      \x3c!-- Lista di autocompletamento --\x3e\\n      <ul class=\\"autocomplete-list\\" [class.autocomplete-list-show]=\\"autocomplete.relatedEntries?.length && showAutocompletion\\">\\n        <li *ngFor=\\"let entry of autocomplete.relatedEntries; trackBy: autocompleteItemTrackByValueFn\\"\\n            (click)=\\"onEntryClick(entry, $event)\\">\\n          <a [href]=\\"entry.link\\">\\n            <ng-container *ngTemplateOutlet=\\"autocompleteItemTemplate\\"></ng-container>\\n          </a>\\n          <ng-template #autocompleteItemTemplate>\\n            <div class=\\"avatar size-sm\\" *ngIf=\\"entry.avatarSrcPath\\">\\n              <img [src]=\\"entry.avatarSrcPath\\" [alt]=\\"entry.avatarAltText\\">\\n            </div>\\n            <it-icon *ngIf=\\"entry.icon\\" [name]=\\"entry.icon\\" size=\\"sm\\"></it-icon>\\n            <span class=\\"autocomplete-list-text\\">\\n            <span [innerHTML]=\\"entry.value | markMatchingText: autocomplete.searchedValue\\"></span>\\n            <em *ngIf=\\"entry.label\\">{{entry.label}}</em>\\n          </span>\\n          </ng-template>\\n        </li>\\n      </ul>\\n    </ng-container>\\n  </ng-container>\\n  \x3c!-- FINE gestione AUTOCOMPLETAMENTO --\x3e\\n\\n  <div *ngIf=\\"isInvalid\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n    <div #customError>\\n      <ng-content select=\\"[error]\\"></ng-content>\\n    </div>\\n    <ng-container *ngIf=\\"!customError.hasChildNodes()\\">{{invalidMessage | async}}</ng-container>\\n  </div>\\n</div>\\n"},{"name":"LanguageSwitcherComponent","id":"component-LanguageSwitcherComponent-ff22bb71b0f002c4e383e4dd87eb418fcba4545e5603a147859c39e444835fb29df8388e35b24a8f03b37d74b29d2b82d19491fbc5632ef844bf9cb28392b9b0","file":"projects/design-angular-kit/src/lib/components/utils/language-switcher/language-switcher.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-language-switcher","styleUrls":[],"styles":[],"templateUrl":["./language-switcher.component.html"],"viewProviders":[],"inputsClass":[{"name":"availableLanguages","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":422,"end":499,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":423,"end":430,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>The languages available through TranslateService (ngx-translate)</p>\\n"}],"rawdescription":"\\n\\nThe available languages\\n","description":"<p>The available languages</p>\\n","line":16,"type":"Array<AvailableLanguage>","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"currentLang$","deprecated":false,"deprecationMessage":"","type":"Observable<AvailableLanguage | undefined>","optional":false,"description":"","line":18}],"methodsClass":[{"name":"changeLanguage","args":[{"name":"lang","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nChange the current language\\n","description":"<p>Change the current language</p>\\n","jsdoctags":[{"name":{"pos":1190,"end":1194,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"lang"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":1184,"end":1189,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the language code</p>\\n"}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { map, Observable } from \'rxjs\';\\nimport { TranslateService } from \'@ngx-translate/core\';\\nimport { AvailableLanguage } from \'../../../interfaces/utils\';\\n\\n@Component({\\n  selector: \'it-language-switcher\',\\n  templateUrl: \'./language-switcher.component.html\'\\n})\\nexport class LanguageSwitcherComponent implements OnInit {\\n\\n  /**\\n   * The available languages\\n   * @default The languages available through TranslateService (ngx-translate)\\n   */\\n  @Input() availableLanguages?: Array<AvailableLanguage>;\\n\\n  currentLang$: Observable<AvailableLanguage | undefined>;\\n\\n  constructor(\\n    private readonly translateService: TranslateService\\n  ) {\\n    this.currentLang$ = translateService.onLangChange.pipe(\\n      map(event => this.availableLanguages?.find(l => l.code === event.lang))\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    if (!this.availableLanguages) {\\n      this.availableLanguages = this.translateService.getLangs().map(lang => ({\\n        code: lang,\\n        label: lang,\\n        ...(lang === \'it\' && {label: \'ITA\'}),\\n        ...(lang === \'en\' && {label: \'ENG\'})\\n      }));\\n    }\\n  }\\n\\n  /**\\n   * Change the current language\\n   * @param lang the language code\\n   */\\n  changeLanguage(lang: string): void {\\n    this.translateService.use(lang);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"translateService","type":"TranslateService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnInit"],"templateData":"<it-dropdown>\\n  <ng-container button>\\n    <span class=\\"visually-hidden\\">{{\'it.utils.selected\' | translate: { lang: (currentLang$ | async)?.label } }}</span>\\n    <span>{{(currentLang$ | async)?.label || (\'it.utils.select-language\' | translate)}}</span>\\n  </ng-container>\\n\\n  <ng-container list>\\n    <it-dropdown-item *ngFor=\\"let lang of availableLanguages\\" (click)=\\"changeLanguage(lang.code)\\"\\n                      [active]=\\"lang.code === (currentLang$ | async)?.code\\">\\n      {{lang.label}}\\n      <span class=\\"visually-hidden\\" *ngIf=\\"lang.code === (currentLang$ | async)?.code\\">\\n        {{\'it.utils.selected\' | translate}}\\n      </span>\\n    </it-dropdown-item>\\n  </ng-container>\\n</it-dropdown>\\n"},{"name":"LinkComponent","id":"component-LinkComponent-46df33997e0f4716da3f9d471f8e18dee98bd14942c5a8c84aceff31ed1d37e8b24147ebefc5cb20f7015f53188069aad20efd52b02fe3446fd9a93d23bbca96","file":"projects/design-angular-kit/src/lib/components/core/link/link.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-link","styleUrls":[],"styles":[],"templateUrl":["./link.component.html"],"viewProviders":[],"inputsClass":[{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":35,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs disabled link\\n","description":"<p>Is disabled link</p>\\n","line":30,"type":"BooleanInput","decorators":[]},{"name":"externalLink","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs an external link (false to not use Angular router link)\\n","description":"<p>Is an external link (false to not use Angular router link)</p>\\n","line":25,"type":"BooleanInput","decorators":[]},{"name":"href","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe router link action\\n\\nCommands to pass to Router#createUrlTree.\\n- array: commands to pass to Router#createUrlTree.\\n- string: shorthand for array of commands with just the string, i.e. [\'/route\']\\n- null|undefined: Disables the link by removing the href\\n","description":"<p>The router link action</p>\\n<p>Commands to pass to Router#createUrlTree.</p>\\n<ul>\\n<li>array: commands to pass to Router#createUrlTree.</li>\\n<li>string: shorthand for array of commands with just the string, i.e. [&#39;/route&#39;]</li>\\n<li>null|undefined: Disables the link by removing the href</li>\\n</ul>\\n","line":20,"type":"any[] | string | null","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\n\\n@Component({\\n  selector: \'it-link\',\\n  templateUrl: \'./link.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class LinkComponent extends AbstractComponent {\\n\\n  /**\\n   * The router link action\\n   *\\n   * Commands to pass to Router#createUrlTree.\\n   * - array: commands to pass to Router#createUrlTree.\\n   * - string: shorthand for array of commands with just the string, i.e. [\'/route\']\\n   * - null|undefined: Disables the link by removing the href\\n   */\\n  @Input() href?: any[] | string | null;\\n\\n  /**\\n   * Is an external link (false to not use Angular router link)\\n   */\\n  @Input() externalLink?: BooleanInput;\\n\\n  /**\\n   * Is disabled link\\n   */\\n  @Input() disabled?: BooleanInput;\\n\\n  /**\\n   * Custom class\\n   */\\n  @Input() class: string = \'\';\\n\\n  get isExternalLink(): boolean {\\n    return isTrueBooleanInput(this.externalLink);\\n  }\\n\\n  get isDisabled(): boolean {\\n    return isTrueBooleanInput(this.disabled);\\n  }\\n\\n  override ngAfterViewInit(): void {\\n    super.ngAfterViewInit();\\n    this._renderer.removeAttribute(this._elementRef.nativeElement, \'class\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","accessors":{"isExternalLink":{"name":"isExternalLink","getSignature":{"name":"isExternalLink","type":"boolean","returnType":"boolean","line":37}},"isDisabled":{"name":"isDisabled","getSignature":{"name":"isDisabled","type":"boolean","returnType":"boolean","line":41}}},"templateData":"<a *ngIf=\\"!isExternalLink; else externalLink\\" [id]=\\"id\\" [class]=\\"class\\" [routerLink]=\\"isDisabled ? null : href\\">\\n  <ng-container *ngTemplateOutlet=\\"linkContent\\"></ng-container>\\n</a>\\n<ng-template #externalLink>\\n  <a [id]=\\"id\\" [class]=\\"class\\" [attr.href]=\\"isDisabled ? null : href\\">\\n    <ng-container *ngTemplateOutlet=\\"linkContent\\"></ng-container>\\n  </a>\\n</ng-template>\\n\\n<ng-template #linkContent>\\n  <ng-content></ng-content>\\n</ng-template>\\n"},{"name":"ListComponent","id":"component-ListComponent-586f0780f07b914e2cf6b10969d17ffbb12f229132e11537460400ab9fe13cbac848974b4674cf26c91004da6c5e7969f1e73cd8f55648b88c94bbbfe19cfd88","file":"projects/design-angular-kit/src/lib/components/core/list/list/list.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-list","styleUrls":[],"styles":[],"templateUrl":["./list.component.html"],"viewProviders":[],"inputsClass":[{"name":"linkList","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd \'link-list\' class for navigation men\xf9\\n","description":"<p>Add &#39;link-list&#39; class for navigation men\xf9</p>\\n","line":14,"type":"BooleanInput","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { BooleanInput } from \'../../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-list\',\\n  templateUrl: \'./list.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ListComponent {\\n\\n  /**\\n   * Add \'link-list\' class for navigation men\xf9\\n   */\\n  @Input() linkList?: BooleanInput;\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","templateData":"<div class=\\"it-list-wrapper\\">\\n  <ul class=\\"it-list\\">\\n    <ng-content></ng-content>\\n  </ul>\\n</div>\\n"},{"name":"ListItemComponent","id":"component-ListItemComponent-2338630f9818831469c2ec5024be6d313528727c37485296a7f8148c91a0b1ab0746d51afe52e1397c73ca8f9a23414ec64e7c021031ab3fc721c2ab1c84cc77","file":"projects/design-angular-kit/src/lib/components/core/list/list-item/list-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-list-item","styleUrls":["./list-item.component.scss"],"styles":[],"templateUrl":["./list-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"active","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd active class\\n","description":"<p>Add active class</p>\\n","line":16,"type":"BooleanInput","decorators":[]},{"name":"avatar","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe avatar url\\n","description":"<p>The avatar url</p>\\n","line":26,"type":"URL","decorators":[]},{"name":"image","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe thumb image url\\n","description":"<p>The thumb image url</p>\\n","line":31,"type":"URL","decorators":[]},{"name":"large","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd large class\\n","description":"<p>Add large class</p>\\n","line":21,"type":"BooleanInput","decorators":[]},{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":35,"type":"string","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs disabled link\\n","description":"<p>Is disabled link</p>\\n","line":30,"type":"BooleanInput","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"externalLink","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs an external link (false to not use Angular router link)\\n","description":"<p>Is an external link (false to not use Angular router link)</p>\\n","line":25,"type":"BooleanInput","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"href","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe router link action\\n\\nCommands to pass to Router#createUrlTree.\\n- array: commands to pass to Router#createUrlTree.\\n- string: shorthand for array of commands with just the string, i.e. [\'/route\']\\n- null|undefined: Disables the link by removing the href\\n","description":"<p>The router link action</p>\\n<p>Commands to pass to Router#createUrlTree.</p>\\n<ul>\\n<li>array: commands to pass to Router#createUrlTree.</li>\\n<li>string: shorthand for array of commands with just the string, i.e. [&#39;/route&#39;]</li>\\n<li>null|undefined: Disables the link by removing the href</li>\\n</ul>\\n","line":20,"type":"any[] | string | null","decorators":[],"inheritance":{"file":"LinkComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { LinkComponent } from \'../../link/link.component\';\\n\\n@Component({\\n  selector: \'it-list-item\',\\n  templateUrl: \'./list-item.component.html\',\\n  styleUrls: [\'./list-item.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ListItemComponent extends LinkComponent {\\n\\n  /**\\n   * Add active class\\n   */\\n  @Input() active?: BooleanInput;\\n\\n  /**\\n   * Add large class\\n   */\\n  @Input() large?: BooleanInput;\\n\\n  /**\\n   * The avatar url\\n   */\\n  @Input() avatar?: URL;\\n\\n  /**\\n   * The thumb image url\\n   */\\n  @Input() image?: URL;\\n\\n\\n  get itemClass(): string {\\n    let itemClass = \'list-item\';\\n    if (isTrueBooleanInput(this.active)) {\\n      itemClass += ` active`;\\n    }\\n    if (isTrueBooleanInput(this.large)) {\\n      itemClass += ` large`;\\n    }\\n    if (this.class) {\\n      itemClass += ` ${this.class}`;\\n    }\\n    return itemClass;\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".metadata:empty, .it-rounded-icon:empty {\\n  display: none;\\n}\\n","styleUrl":"./list-item.component.scss"}],"stylesData":"","extends":"LinkComponent","accessors":{"itemClass":{"name":"itemClass","getSignature":{"name":"itemClass","type":"string","returnType":"string","line":34}}},"templateData":"<li>\\n  <ng-template #content>\\n    <div class=\\"it-rounded-icon\\">\\n      <ng-content select=\\"[icon]\\"></ng-content>\\n    </div>\\n\\n    <div *ngIf=\\"avatar\\" class=\\"avatar size-lg\\">\\n      <img [attr.src]=\\"avatar\\" alt=\\"avatar\\">\\n    </div>\\n\\n    <div *ngIf=\\"image\\" class=\\"it-thumb\\">\\n      <img [attr.src]=\\"image\\" alt=\\"thumb\\">\\n    </div>\\n\\n    <div class=\\"it-right-zone\\">\\n      <span class=\\"text\\">\\n        <ng-content></ng-content>\\n      </span>\\n      <ng-content select=\\"[action]\\"></ng-content>\\n\\n      <span class=\\"it-multiple\\">\\n        <span class=\\"metadata\\">\\n          <ng-content select=\\"[metadata]\\"></ng-content>\\n        </span>\\n\\n        <ng-content select=\\"[multiple]\\"></ng-content>\\n      </span>\\n    </div>\\n  </ng-template>\\n\\n\\n  <div *ngIf=\\"!href; else link\\" [class]=\\"itemClass\\">\\n    <ng-container *ngTemplateOutlet=\\"content\\"></ng-container>\\n  </div>\\n\\n  <ng-template #link>\\n    <it-link [class]=\\"itemClass\\" [href]=\\"href\\" [externalLink]=\\"externalLink\\" [disabled]=\\"disabled\\">\\n      <ng-container *ngTemplateOutlet=\\"content\\"></ng-container>\\n    </it-link>\\n  </ng-template>\\n</li>\\n"},{"name":"ModalComponent","id":"component-ModalComponent-49534c58eeba7a01d032aeac99922a408950f0474a9d18e82c1955773fc68e914b06b047854dcb7fbfeec8da535ba78857b4bd52084107e0c58a3add7460c8d6","file":"projects/design-angular-kit/src/lib/components/core/modal/modal.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itModal","inputs":[],"outputs":[],"providers":[],"selector":"it-modal[title]","styleUrls":["./modal.component.scss"],"styles":[],"templateUrl":["./modal.component.html"],"viewProviders":[],"inputsClass":[{"name":"size","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe modal size\\n","description":"<p>The modal size</p>\\n","line":22,"type":"\\"modal-sm\\" | \\"modal-lg\\" | \\"modal-xl\\"","decorators":[]},{"name":"title","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe modal Title\\n","description":"<p>The modal Title</p>\\n","line":17,"type":"string","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"onHidden","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires when the modal has finished hiding from the user (it will wait for CSS transitions to complete).\\n","description":"<p>This event fires when the modal has finished hiding from the user (it will wait for CSS transitions to complete).</p>\\n","line":42,"type":"EventEmitter<Event>"},{"name":"onHide","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is raised immediately when the instance method hide has been called.\\n","description":"<p>This event is raised immediately when the instance method hide has been called.</p>\\n","line":37,"type":"EventEmitter<Event>"},{"name":"onHidePrevented","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event is fired when the modal is displayed, its background is static and a click outside the modal or a press\\nof the esc key occurs and data-bs-keyboard is set to false.\\n","description":"<p>This event is fired when the modal is displayed, its background is static and a click outside the modal or a press\\nof the esc key occurs and data-bs-keyboard is set to false.</p>\\n","line":48,"type":"EventEmitter<Event>"},{"name":"onShow","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires immediately when the instance method show is called.\\n","description":"<p>This event fires immediately when the instance method show is called.</p>\\n","line":27,"type":"EventEmitter<Event>"},{"name":"onShown","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis event fires when the modal has been made visible to the user (it will wait for CSS transitions to complete).\\n","description":"<p>This event fires when the modal has been made visible to the user (it will wait for CSS transitions to complete).</p>\\n","line":32,"type":"EventEmitter<Event>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"modal","deprecated":false,"deprecationMessage":"","type":"Modal","optional":true,"description":"","line":51,"modifierKind":[121]},{"name":"modalElement","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLDivElement>","optional":true,"description":"","line":53,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'modalElement\', {static: false}"}],"modifierKind":[121]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"dispose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDestroys the modal of an element.\\n","description":"<p>Destroys the modal of an element.</p>\\n","modifierKind":[123]},{"name":"handleUpdate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nManually reposition the modal if the height of the modal changes when it is opened (in case a scroll bar appears).\\n","description":"<p>Manually reposition the modal if the height of the modal changes when it is opened (in case a scroll bar appears).</p>\\n","modifierKind":[123]},{"name":"hide","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nManually hide a modal. Returns to the caller before the modal has actually been hidden\\n","description":"<p>Manually hide a modal. Returns to the caller before the modal has actually been hidden</p>\\n","modifierKind":[123]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"show","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nManually open a modal. Returns to the caller before the modal has actually been displayed\\n","description":"<p>Manually open a modal. Returns to the caller before the modal has actually been displayed</p>\\n","modifierKind":[123]},{"name":"toggle","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nManually activate/deactivate a modal. Returns to the caller before the modal has actually been shown or hidden\\n","description":"<p>Manually activate/deactivate a modal. Returns to the caller before the modal has actually been shown or hidden</p>\\n","modifierKind":[123]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { Modal } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-modal[title]\',\\n  templateUrl: \'./modal.component.html\',\\n  styleUrls: [\'./modal.component.scss\'],\\n  exportAs: \'itModal\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ModalComponent extends AbstractComponent {\\n\\n  /**\\n   * The modal Title\\n   */\\n  @Input() title!: string;\\n\\n  /**\\n   * The modal size\\n   */\\n  @Input() size?: \'modal-sm\' | \'modal-lg\' | \'modal-xl\';\\n\\n  /**\\n   * This event fires immediately when the instance method show is called.\\n   */\\n  @Output() onShow: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires when the modal has been made visible to the user (it will wait for CSS transitions to complete).\\n   */\\n  @Output() onShown: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is raised immediately when the instance method hide has been called.\\n   */\\n  @Output() onHide: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event fires when the modal has finished hiding from the user (it will wait for CSS transitions to complete).\\n   */\\n  @Output() onHidden: EventEmitter<Event> = new EventEmitter();\\n\\n  /**\\n   * This event is fired when the modal is displayed, its background is static and a click outside the modal or a press\\n   * of the esc key occurs and data-bs-keyboard is set to false.\\n   */\\n  @Output() onHidePrevented: EventEmitter<Event> = new EventEmitter();\\n\\n\\n  private modal?: Modal;\\n\\n  @ViewChild(\'modalElement\', { static: false }) private modalElement?: ElementRef<HTMLDivElement>;\\n\\n  override ngAfterViewInit(): void {\\n    super.ngAfterViewInit();\\n    this._renderer.removeAttribute(this._elementRef.nativeElement, \'title\');\\n\\n    if (this.modalElement) {\\n      const element = this.modalElement.nativeElement;\\n      this.modal = Modal.getOrCreateInstance(element);\\n\\n      element.addEventListener(\'show.bs.modal\', event => this.onShow.emit(event));\\n      element.addEventListener(\'shown.bs.modal\', event => this.onShown.emit(event));\\n      element.addEventListener(\'hide.bs.modal\', event => this.onHide.emit(event));\\n      element.addEventListener(\'hidden.bs.modal\', event => this.onHidden.emit(event));\\n      element.addEventListener(\'hidePrevented.bs.modal\', event => this.onHidePrevented.emit(event));\\n    }\\n  }\\n\\n  /**\\n   * Manually activate/deactivate a modal. Returns to the caller before the modal has actually been shown or hidden\\n   */\\n  public toggle(): void {\\n    this.modal?.toggle();\\n  }\\n\\n  /**\\n   * Manually open a modal. Returns to the caller before the modal has actually been displayed\\n   */\\n  public show(): void {\\n    this.modal?.show();\\n  }\\n\\n  /**\\n   * Manually hide a modal. Returns to the caller before the modal has actually been hidden\\n   */\\n  public hide(): void {\\n    this.modal?.hide();\\n  }\\n\\n  /**\\n   * Manually reposition the modal if the height of the modal changes when it is opened (in case a scroll bar appears).\\n   */\\n  public handleUpdate(): void {\\n    this.modal?.handleUpdate();\\n  }\\n\\n  /**\\n   * Destroys the modal of an element.\\n   */\\n  public dispose(): void {\\n    this.modal?.dispose();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".modal-footer:empty {\\n  display: none;\\n}\\n","styleUrl":"./modal.component.scss"}],"stylesData":"","extends":"AbstractComponent","templateData":"<div #modalElement [id]=\\"id\\" class=\\"modal fade\\"\\n     tabindex=\\"-1\\"\\n     role=\\"dialog\\"\\n     aria-hidden=\\"true\\"\\n     [attr.aria-labelledby]=\\"id+\'-label\'\\">\\n  <div class=\\"modal-dialog {{size}}\\">\\n    <div class=\\"modal-content\\">\\n      <div class=\\"modal-header\\">\\n        <h2 class=\\"modal-title h5 no_toc\\" id=\\"{{id}}-label\\">{{title}}</h2>\\n        <button type=\\"button\\" class=\\"btn-close\\" data-bs-dismiss=\\"modal\\"\\n                [attr.aria-label]=\\"\'it.core.close-modal\'|translate\\"></button>\\n      </div>\\n      <div class=\\"modal-body mb-3\\">\\n        <ng-content></ng-content>\\n      </div>\\n      <div class=\\"modal-footer modal-footer-shadow\\">\\n        <ng-content select=\\"[footer]\\"></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"NotificationsComponent","id":"component-NotificationsComponent-33cfc2805294a922a1965c66cedc02eb1d4753d0a4d5fdbb07519d5873604ebc6818ac371d62b03f16507d6517b9fd1ab5e1fc385bd3c9c962dc15ca60f9a665","file":"projects/design-angular-kit/src/lib/components/core/notifications/notifications.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-notifications","styleUrls":["./notifications.component.scss"],"styles":[],"templateUrl":["./notifications.component.html"],"viewProviders":[],"inputsClass":[{"name":"dismissible","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1056,"end":1073,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1057,"end":1064,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nDefault notifications is dismissible\\n","description":"<p>Default notifications is dismissible</p>\\n","line":32,"type":"BooleanInput","decorators":[]},{"name":"duration","defaultValue":"8000","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":853,"end":870,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":854,"end":861,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>8000</p>\\n"}],"rawdescription":"\\n\\nDefault notifications duration (milliseconds)\\n","description":"<p>Default notifications duration (milliseconds)</p>\\n","line":21,"type":"number","decorators":[]},{"name":"position","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDefault notifications position\\n","description":"<p>Default notifications position</p>\\n","line":26,"type":"NotificationPosition","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"notificationCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":35,"modifierKind":[121]},{"name":"notifications","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<>","optional":false,"description":"","line":36,"modifierKind":[122]},{"name":"subscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":34,"modifierKind":[121]}],"methodsClass":[{"name":"getNotificationIcon","args":[{"name":"notification","type":"Notification","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"IconName | undefined","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nRetrieve the icon name by notification type\\n","description":"<p>Retrieve the icon name by notification type</p>\\n","modifierKind":[121],"jsdoctags":[{"name":{"pos":3365,"end":3377,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"notification"},"type":"Notification","deprecated":false,"deprecationMessage":"","tagName":{"pos":3359,"end":3364,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the notification</p>\\n"}]},{"name":"hideNotification","args":[{"name":"id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHide the notification\\n","description":"<p>Hide the notification</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":3165,"end":3167,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"id"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":3159,"end":3164,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy } from \'@angular/core\';\\nimport { Subscription } from \'rxjs\';\\nimport { NotificationsService } from \'../../../services/notifications/notifications.service\';\\nimport { Notification, NotificationPosition, NotificationType } from \'../../../interfaces/core\';\\nimport { Notification as BSNotification } from \'bootstrap-italia\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { IconName } from \'../../../interfaces/icon\';\\n\\n@Component({\\n  selector: \'it-notifications\',\\n  templateUrl: \'./notifications.component.html\',\\n  styleUrls: [\'./notifications.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class NotificationsComponent implements OnDestroy {\\n\\n  /**\\n   * Default notifications duration (milliseconds)\\n   * @default 8000\\n   */\\n  @Input() duration: number = 8000;\\n\\n  /**\\n   * Default notifications position\\n   */\\n  @Input() position?: NotificationPosition;\\n\\n  /**\\n   * Default notifications is dismissible\\n   * @default true\\n   */\\n  @Input() dismissible?: BooleanInput = true;\\n\\n  private subscription: Subscription;\\n  private notificationCount: number = 0;\\n  protected notifications: Array<Notification & { id: string }> = [];\\n\\n  constructor(\\n    private readonly _changeDetectorRef: ChangeDetectorRef,\\n    private readonly _notificationService: NotificationsService\\n  ) {\\n    this.subscription = this._notificationService.onNotification().subscribe(notification => {\\n      if (!notification.duration) {\\n        notification.duration = this.duration; // Add duration if not is set\\n      }\\n      if (!notification.position && this.position) {\\n        notification.position = this.position; // Add position if not is set\\n      }\\n      if (notification.dismissible === undefined && isTrueBooleanInput(this.dismissible)) {\\n        notification.dismissible = true; // Add dismissible if not is set\\n      }\\n      if (!notification.icon) {\\n        notification.icon = this.getNotificationIcon(notification);\\n      }\\n\\n      const newNotification = {\\n        ...notification,\\n        id: `${notification.type}-${this.notificationCount++}-notification`\\n      };\\n      this.notifications.push(newNotification);\\n      this._changeDetectorRef.detectChanges();\\n\\n      setTimeout(() => {\\n        // Show the notification\\n        new BSNotification(document.getElementById(newNotification.id)!, {\\n          timeout: notification.duration\\n        }).show();\\n\\n        // Clear notification after the duration\\n        setTimeout(() => {\\n          const index = this.notifications.findIndex(n => n.id === newNotification.id);\\n          if (index > -1) {\\n            this.notifications.splice(index, 1);\\n            if (!this.notifications.length) {\\n              this.notificationCount = 0;\\n            }\\n            this._changeDetectorRef.detectChanges();\\n          }\\n        }, notification.duration);\\n      }, 200);\\n    });\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.subscription.unsubscribe();\\n  }\\n\\n  protected get NotificationType(): typeof NotificationType {\\n    return NotificationType;\\n  }\\n\\n  /**\\n   * Hide the notification\\n   * @param id\\n   */\\n  protected hideNotification(id: string): void {\\n    BSNotification.getInstance(document.getElementById(id)!)?.hide();\\n  }\\n\\n  /**\\n   * Retrieve the icon name by notification type\\n   * @param notification the notification\\n   * @protected\\n   */\\n  private getNotificationIcon(notification: Notification): IconName | undefined {\\n    switch (notification.type) {\\n      case NotificationType.Success:\\n        return \'check-circle\';\\n      case NotificationType.Error:\\n        return \'close-circle\';\\n      case NotificationType.Warning:\\n        return \'error\';\\n      case NotificationType.Info:\\n        return \'info-circle\';\\n      case NotificationType.Standard:\\n      default:\\n        return undefined;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".notification {\\n  z-index: 10000;\\n}\\n","styleUrl":"./notifications.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""},{"name":"_notificationService","type":"NotificationsService","deprecated":false,"deprecationMessage":""}],"line":36,"jsdoctags":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"_notificationService","type":"NotificationsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["OnDestroy"],"accessors":{"NotificationType":{"name":"NotificationType","getSignature":{"name":"NotificationType","type":"","returnType":"","line":88}}},"templateData":"<div *ngFor=\\"let notification of notifications\\"\\n     [id]=\\"notification.id\\"\\n     class=\\"notification {{notification.position}} {{notification.type}}\\"\\n     [class.with-icon]=\\"!!notification.icon\\"\\n     [class.dismissable]=\\"notification.dismissible\\"\\n     role=\\"alert\\" [attr.aria-labelledby]=\\"notification.id+\'-title\'\\">\\n\\n  <h2 [id]=\\"notification.id+\'-title\'\\" class=\\"h5\\">\\n    <it-icon *ngIf=\\"!!notification.icon\\" [name]=\\"notification.icon\\"></it-icon>\\n    <ng-container>{{notification.title}}</ng-container>\\n  </h2>\\n  <p *ngIf=\\"notification.message\\">{{notification.message}}</p>\\n\\n  <button *ngIf=\\"notification.dismissible\\" type=\\"button\\" class=\\"btn notification-close\\"\\n          (click)=\\"hideNotification(notification.id)\\">\\n    <it-icon name=\\"close\\"></it-icon>\\n    <span class=\\"visually-hidden\\">{{\'it.core.close-notification\'|translate:{ title: notification.title } }}</span>\\n  </button>\\n</div>\\n"},{"name":"PaginationComponent","id":"component-PaginationComponent-85d968064fac252c17018464f89e4338bddc1e83981bcff87678cb64f498345e1c4662c90eb2a1c96d570f8f530aa834f6f3c96d72a157c09f02ecb6eae7111c","file":"projects/design-angular-kit/src/lib/components/core/pagination/pagination.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-pagination[currentPage][pageNumbers]","styleUrls":[],"styles":[],"templateUrl":["./pagination.component.html"],"viewProviders":[],"inputsClass":[{"name":"alignment","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPagination alignment (justify-content)\\n","description":"<p>Pagination alignment (justify-content)</p>\\n","line":40,"type":"\\"center\\" | \\"end\\"","decorators":[]},{"name":"changerValues","defaultValue":"[10, 25, 50, 100]","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1543,"end":1573,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1544,"end":1551,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>[10, 25, 50, 100]</p>\\n"}],"rawdescription":"\\n\\nAvailable Changer values\\n","description":"<p>Available Changer values</p>\\n","line":67,"type":"Array<number>","decorators":[]},{"name":"currentChanger","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1421,"end":1462,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1422,"end":1429,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined - hide the Changer</p>\\n"}],"rawdescription":"\\n\\nCurrent value of Changer\\nIf is set show the Changer\\n","description":"<p>Current value of Changer\\nIf is set show the Changer</p>\\n","line":61,"type":"number","decorators":[]},{"name":"currentPage","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIndex of page (start 0)\\n","description":"<p>Index of page (start 0)</p>\\n","line":24,"type":"number","decorators":[]},{"name":"pageNumbers","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMax number of page (counter)\\n","description":"<p>Max number of page (counter)</p>\\n","line":29,"type":"number","decorators":[]},{"name":"showJumpToPage","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1685,"end":1716,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1686,"end":1693,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined - hidden</p>\\n"}],"rawdescription":"\\n\\nHide/Show \\"Jump to page\\" input\\n","description":"<p>Hide/Show &quot;Jump to page&quot; input</p>\\n","line":73,"type":"BooleanInput","decorators":[]},{"name":"simpleMode","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1055,"end":1088,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1056,"end":1063,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined - disabled</p>\\n"}],"rawdescription":"\\n\\nEnable/Disable simple mode\\nPagination in the \\"Simple mode\\" version is optimized for mobile devices.\\n","description":"<p>Enable/Disable simple mode\\nPagination in the &quot;Simple mode&quot; version is optimized for mobile devices.</p>\\n","line":47,"type":"BooleanInput","decorators":[]},{"name":"textLinks","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1274,"end":1307,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1275,"end":1282,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined - disabled</p>\\n"}],"rawdescription":"\\n\\nEnable/Disable text links\\nChevron icons used as navigation links are replaced by text links such as \u201cprevious\u201d and \u201cnext\u201d.\\n","description":"<p>Enable/Disable text links\\nChevron icons used as navigation links are replaced by text links such as \u201cprevious\u201d and \u201cnext\u201d.</p>\\n","line":54,"type":"BooleanInput","decorators":[]},{"name":"visiblePages","defaultValue":"5","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":781,"end":795,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":782,"end":789,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>5</p>\\n"}],"rawdescription":"\\n\\nNumber of pages closest to the current one to display\\n","description":"<p>Number of pages closest to the current one to display</p>\\n","line":35,"type":"number","decorators":[]}],"outputsClass":[{"name":"changerEvent","defaultValue":"new EventEmitter<number>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when changer is changed. Emit the new changer value\\n","description":"<p>Fired when changer is changed. Emit the new changer value</p>\\n","line":83,"type":"EventEmitter"},{"name":"pageEvent","defaultValue":"new EventEmitter<number>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when page is changed. Emit the new index of page\\n","description":"<p>Fired when page is changed. Emit the new index of page</p>\\n","line":78,"type":"EventEmitter"}],"propertiesClass":[{"name":"jumpToPage","defaultValue":"new FormControl<number | null>(null)","deprecated":false,"deprecationMessage":"","type":"FormControl<number | null>","optional":false,"description":"<p>Jump to page input</p>\\n","line":95,"rawdescription":"\\n\\nJump to page input\\n","modifierKind":[122],"jsdoctags":[{"pos":2136,"end":2150,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":333,"tagName":{"pos":2137,"end":2146,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":122,"escapedText":"protected"},"comment":""}]},{"name":"pages","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Array<number>","optional":false,"description":"<p>The pages</p>\\n","line":89,"rawdescription":"\\n\\nThe pages\\n","modifierKind":[122],"jsdoctags":[{"pos":2044,"end":2058,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":333,"tagName":{"pos":2045,"end":2054,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":122,"escapedText":"protected"},"comment":""}]}],"methodsClass":[{"name":"calculatePages","args":[],"optional":false,"returnType":"Array<number>","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCreate array to generate pagination of `visiblePages` element\\n","description":"<p>Create array to generate pagination of <code>visiblePages</code> element</p>\\n","modifierKind":[121]},{"name":"changerChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn click changer\\n","description":"<p>On click changer</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4186,"end":4191,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"pos":4180,"end":4185,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>click event</p>\\n"},{"name":{"pos":4216,"end":4221,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":4210,"end":4215,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the new changer value</p>\\n"}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageChange","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"newPage","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn click page change\\n","description":"<p>On click page change</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":3924,"end":3929,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"pos":3918,"end":3923,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>click event</p>\\n"},{"name":{"pos":3954,"end":3961,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"newPage"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":3948,"end":3953,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the new page of table</p>\\n"}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  EventEmitter,\\n  Input,\\n  OnChanges,\\n  Output,\\n  SimpleChanges\\n} from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { FormControl } from \'@angular/forms\';\\nimport { debounceTime, distinctUntilChanged, filter } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-pagination[currentPage][pageNumbers]\',\\n  templateUrl: \'./pagination.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class PaginationComponent implements OnChanges {\\n\\n  /**\\n   * Index of page (start 0)\\n   */\\n  @Input() currentPage!: number;\\n\\n  /**\\n   * Max number of page (counter)\\n   */\\n  @Input() pageNumbers!: number;\\n\\n  /**\\n   * Number of pages closest to the current one to display\\n   * @default 5\\n   */\\n  @Input() visiblePages: number = 5;\\n\\n  /**\\n   * Pagination alignment (justify-content)\\n   */\\n  @Input() alignment?: \'center\' | \'end\';\\n\\n  /**\\n   * Enable/Disable simple mode\\n   * Pagination in the \\"Simple mode\\" version is optimized for mobile devices.\\n   * @default undefined - disabled\\n   */\\n  @Input() simpleMode?: BooleanInput;\\n\\n  /**\\n   * Enable/Disable text links\\n   * Chevron icons used as navigation links are replaced by text links such as \u201cprevious\u201d and \u201cnext\u201d.\\n   * @default undefined - disabled\\n   */\\n  @Input() textLinks?: BooleanInput;\\n\\n  /**\\n   * Current value of Changer\\n   * If is set show the Changer\\n   * @default undefined - hide the Changer\\n   */\\n  @Input() currentChanger?: number;\\n\\n  /**\\n   * Available Changer values\\n   * @default [10, 25, 50, 100]\\n   */\\n  @Input() changerValues: Array<number> = [10, 25, 50, 100];\\n\\n  /**\\n   * Hide/Show \\"Jump to page\\" input\\n   * @default undefined - hidden\\n   */\\n  @Input() showJumpToPage?: BooleanInput;\\n\\n  /**\\n   * Fired when page is changed. Emit the new index of page\\n   */\\n  @Output() pageEvent = new EventEmitter<number>();\\n\\n  /**\\n   * Fired when changer is changed. Emit the new changer value\\n   */\\n  @Output() changerEvent = new EventEmitter<number>();\\n\\n  /**\\n   * The pages\\n   * @protected\\n   */\\n  protected pages: Array<number> = [];\\n\\n  /**\\n   * Jump to page input\\n   * @protected\\n   */\\n  protected jumpToPage: FormControl<number | null> = new FormControl<number | null>(null);\\n\\n  get isSimpleMode(): boolean {\\n    return isTrueBooleanInput(this.simpleMode);\\n  }\\n\\n  get isTextLinks(): boolean {\\n    return isTrueBooleanInput(this.textLinks);\\n  }\\n\\n  get isShowJumpToPage(): boolean {\\n    return isTrueBooleanInput(this.showJumpToPage);\\n  }\\n\\n  constructor() {\\n    this.jumpToPage.valueChanges.pipe(\\n      debounceTime(300), // Delay filter data after time span has passed without another source emission\\n      distinctUntilChanged(),\\n      filter(value => !!value && this.jumpToPage.valid)\\n    ).subscribe(value => {\\n      this.pageEvent.emit(value! - 1);\\n    });\\n  }\\n\\n  ngOnChanges(changes: SimpleChanges): void {\\n    this.pages = this.calculatePages();\\n    if (changes[\'currentPage\']) {\\n      this.jumpToPage.setValue(null, { emitEvent: false });\\n    }\\n  }\\n\\n  /**\\n   * Create array to generate pagination of `visiblePages` element\\n   */\\n  private calculatePages(): Array<number> {\\n    if (this.isSimpleMode) {\\n      return [this.currentPage];\\n    }\\n\\n    const length = this.pageNumbers > this.visiblePages ? this.visiblePages : this.pageNumbers;\\n\\n    const halfVisiblePages = Math.floor(this.visiblePages / 2);\\n    let start = (this.currentPage > halfVisiblePages && this.pageNumbers > this.visiblePages) ?\\n      this.currentPage - halfVisiblePages + 1 : 1;\\n\\n    if (this.pageNumbers > this.visiblePages) {\\n      if ((this.currentPage + 1) >= this.pageNumbers) {\\n        start -= halfVisiblePages;\\n      } else if (this.currentPage >= (this.pageNumbers - halfVisiblePages)) {\\n        start -= (this.pageNumbers - (this.currentPage + 1));\\n      }\\n    }\\n\\n    return Array.from({ length }, (_, i) => i + start);\\n  }\\n\\n  /**\\n   * On click page change\\n   * @param event click event\\n   * @param newPage the new page of table\\n   */\\n  protected pageChange(event: Event, newPage: number): void {\\n    event.preventDefault();\\n    this.pageEvent.emit(newPage - 1); // emit new page index\\n  }\\n\\n  /**\\n   * On click changer\\n   * @param event click event\\n   * @param value the new changer value\\n   */\\n  protected changerChange(event: Event, value: number): void {\\n    event.preventDefault();\\n    this.changerEvent.emit(value); // emit new changer value\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":107},"implements":["OnChanges"],"accessors":{"isSimpleMode":{"name":"isSimpleMode","getSignature":{"name":"isSimpleMode","type":"boolean","returnType":"boolean","line":97}},"isTextLinks":{"name":"isTextLinks","getSignature":{"name":"isTextLinks","type":"boolean","returnType":"boolean","line":101}},"isShowJumpToPage":{"name":"isShowJumpToPage","getSignature":{"name":"isShowJumpToPage","type":"boolean","returnType":"boolean","line":105}}},"templateData":"<nav class=\\"pagination-wrapper\\"\\n     [class.justify-content-center]=\\"alignment===\'center\'\\"\\n     [class.justify-content-end]=\\"alignment===\'end\'\\"\\n     [class.pagination-total]=\\"totalNumberText.hasChildNodes()\\">\\n\\n  <ul *ngIf=\\"pages.length\\" class=\\"pagination\\">\\n    <li class=\\"page-item\\" [class.disabled]=\\"currentPage < 1\\">\\n      <a class=\\"page-link\\" [class.text]=\\"isTextLinks\\" href=\\"#\\" (click)=\\"pageChange($event, currentPage)\\">\\n        <it-icon *ngIf=\\"!isTextLinks\\" name=\\"chevron-left\\" color=\\"primary\\"></it-icon>\\n        <span class=\\"visually-hidden\\">\\n          {{(isTextLinks ? \'it.core.page\' : \'it.core.previous-page\') | translate}}\\n        </span>\\n        <ng-container *ngIf=\\"isTextLinks\\">{{\'it.core.previous\' | translate}}</ng-container>\\n      </a>\\n    </li>\\n\\n    <ng-container *ngIf=\\"isSimpleMode; else defaultView\\">\\n      <li class=\\"page-item\\"><span class=\\"page-link\\" aria-current=\\"page\\">{{currentPage + 1}}</span></li>\\n      <li class=\\"page-item\\"><span class=\\"page-link\\">/</span></li>\\n      <li class=\\"page-item\\"><span class=\\"page-link\\">{{pageNumbers}}</span></li>\\n      <li class=\\"page-item visually-hidden\\">\\n        <a class=\\"page-link\\" href=\\"#\\" aria-current=\\"page\\">\\n          {{\'it.core.page-of-total\'|translate : {page: (currentPage + 1), total: pageNumbers} }}\\n        </a>\\n      </li>\\n    </ng-container>\\n    <ng-template #defaultView>\\n      <ng-container *ngIf=\\"pageNumbers > visiblePages && pages[0] >= 2\\">\\n        <li class=\\"page-item\\">\\n          <a class=\\"page-link\\" href=\\"#\\" (click)=\\"pageChange($event, 1)\\">1</a>\\n        </li>\\n        <li class=\\"page-item\\" *ngIf=\\"pages[0] >= 3\\">\\n          <span class=\\"page-link\\">...</span>\\n        </li>\\n      </ng-container>\\n\\n      <li class=\\"page-item\\" *ngFor=\\"let page of pages\\">\\n        <a class=\\"page-link\\" aria-current=\\"page\\" *ngIf=\\"page === (currentPage + 1); else inactivePage\\">\\n          <span class=\\"d-inline-block d-sm-none\\">{{\'it.core.page\'|translate}}</span> {{page}}\\n        </a>\\n        <ng-template #inactivePage>\\n          <a class=\\"page-link\\" href=\\"#\\" (click)=\\"pageChange($event, page)\\">{{page}}</a>\\n        </ng-template>\\n      </li>\\n\\n      <ng-container *ngIf=\\"pageNumbers > visiblePages && pages[pages.length - 1] < pageNumbers\\">\\n        <li class=\\"page-item\\" *ngIf=\\"pages[pages.length - 1] < (pageNumbers - 1)\\">\\n          <span class=\\"page-link\\">...</span>\\n        </li>\\n        <li class=\\"page-item\\">\\n          <a class=\\"page-link\\" href=\\"#\\" (click)=\\"pageChange($event, pageNumbers)\\">{{pageNumbers}}</a>\\n        </li>\\n      </ng-container>\\n    </ng-template>\\n\\n    <li class=\\"page-item\\" [class.disabled]=\\"currentPage >= pageNumbers - 1\\">\\n      <a class=\\"page-link\\" [class.text]=\\"isTextLinks\\" href=\\"#\\" (click)=\\"pageChange($event, currentPage + 2)\\">\\n        <span class=\\"visually-hidden\\">\\n          {{(isTextLinks ? \'it.core.page\' : \'it.core.next-page\') | translate}}\\n        </span>\\n        <ng-container *ngIf=\\"isTextLinks\\">{{\'it.core.next\' | translate}}</ng-container>\\n        <it-icon *ngIf=\\"!isTextLinks\\" name=\\"chevron-right\\" color=\\"primary\\"></it-icon>\\n      </a>\\n    </li>\\n  </ul>\\n\\n  <it-dropdown *ngIf=\\"currentChanger !== undefined\\">\\n    <span button>{{currentChanger}} / {{\'it.core.page\' | translate | lowercase}}</span>\\n    <ng-container list>\\n      <it-dropdown-item *ngFor=\\"let value of changerValues\\" href=\\"#\\" externalLink=\\"true\\"\\n                        (click)=\\"changerChange($event, value)\\">\\n        {{value}} / {{\'it.core.page\' | translate | lowercase}}\\n      </it-dropdown-item>\\n    </ng-container>\\n  </it-dropdown>\\n\\n  <it-input *ngIf=\\"isShowJumpToPage\\" type=\\"number\\" [min]=\\"1\\" [max]=\\"pageNumbers\\"\\n            [label]=\\"(\'it.core.go-to\' | translate) + \'...\'\\" [formControl]=\\"jumpToPage\\"></it-input>\\n\\n  <p [class.d-none]=\\"!totalNumberText.hasChildNodes()\\" #totalNumberText>\\n    <ng-content></ng-content>\\n  </p>\\n</nav>\\n"},{"name":"PasswordInputComponent","id":"component-PasswordInputComponent-e84dbf2de852fd0a503b52c9040c72bb22b0d2c2d727b58a7e7ff3d144b2ec2e7cadc92586ec23f449e49794213c144681dc9774c00f45d090095e47dd1533f9","file":"projects/design-angular-kit/src/lib/components/form/password-input/password-input.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-password-input","styleUrls":["./password-input.component.scss"],"styles":[],"templateUrl":["./password-input.component.html"],"viewProviders":[],"inputsClass":[{"name":"description","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe input description\\n","description":"<p>The input description</p>\\n","line":54,"type":"string","decorators":[]},{"name":"minLength","defaultValue":"10","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":735,"end":750,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":736,"end":743,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>10</p>\\n"}],"rawdescription":"\\n\\nThe password minimum length\\n","description":"<p>The password minimum length</p>\\n","line":20,"type":"number","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe input placeholder\\n","description":"<p>The input placeholder</p>\\n","line":49,"type":"string","decorators":[]},{"name":"showStrengthMeter","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nEnable to show the strength meter\\n","description":"<p>Enable to show the strength meter</p>\\n","line":59,"type":"BooleanInput","decorators":[]},{"name":"useCapitalCase","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":985,"end":1002,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":986,"end":993,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nThe password must contain at least one uppercase character\\n","description":"<p>The password must contain at least one uppercase character</p>\\n","line":32,"type":"boolean","decorators":[]},{"name":"useNumber","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":851,"end":868,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":852,"end":859,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nThe password must contain at least one number\\n","description":"<p>The password must contain at least one number</p>\\n","line":26,"type":"boolean","decorators":[]},{"name":"useSmallCase","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1124,"end":1141,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1125,"end":1132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nThe password must contain at least one lowercase character\\n","description":"<p>The password must contain at least one lowercase character</p>\\n","line":38,"type":"boolean","decorators":[]},{"name":"useSpecialCharacters","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1259,"end":1276,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1260,"end":1267,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nThe password must contain at least one special character\\n","description":"<p>The password must contain at least one special character</p>\\n","line":44,"type":"boolean","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"inputElement","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLInputElement>","optional":true,"description":"","line":64,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'input\'"}],"modifierKind":[121]},{"name":"inputPasswordBs","deprecated":false,"deprecationMessage":"","type":"InputPassword","optional":true,"description":"","line":62},{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractFormComponent"}},{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, ElementRef, Input, ViewChild } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\nimport { ItValidators } from \'../../../validators/it-validators\';\\nimport { Observable } from \'rxjs\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { InputPassword } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-password-input\',\\n  templateUrl: \'./password-input.component.html\',\\n  styleUrls: [\'./password-input.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class PasswordInputComponent extends AbstractFormComponent<string> {\\n\\n  /**\\n   * The password minimum length\\n   * @default 10\\n   */\\n  @Input() minLength: number = 10;\\n\\n  /**\\n   * The password must contain at least one number\\n   * @default true\\n   */\\n  @Input() useNumber: boolean = true;\\n\\n  /**\\n   * The password must contain at least one uppercase character\\n   * @default true\\n   */\\n  @Input() useCapitalCase: boolean = true;\\n\\n  /**\\n   * The password must contain at least one lowercase character\\n   * @default true\\n   */\\n  @Input() useSmallCase: boolean = true;\\n\\n  /**\\n   * The password must contain at least one special character\\n   * @default true\\n   */\\n  @Input() useSpecialCharacters: boolean = true;\\n\\n  /**\\n   * The input placeholder\\n   */\\n  @Input() placeholder: string = \'\';\\n\\n  /**\\n   * The input description\\n   */\\n  @Input() description?: string;\\n\\n  /**\\n   * Enable to show the strength meter\\n   */\\n  @Input() showStrengthMeter?: BooleanInput;\\n\\n\\n  inputPasswordBs?: InputPassword;\\n\\n  @ViewChild(\'input\') private inputElement?: ElementRef<HTMLInputElement>;\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    this.addValidators(ItValidators.password(\\n      this.minLength,\\n      this.useNumber,\\n      this.useCapitalCase,\\n      this.useSmallCase,\\n      this.useSpecialCharacters\\n    ));\\n  }\\n\\n  override ngAfterViewInit() {\\n    super.ngAfterViewInit();\\n\\n    if (this.inputElement) {\\n      this.inputPasswordBs = new InputPassword(this.inputElement.nativeElement, {\\n        ...this.description && { enterPass: this.description },\\n        showText: this.isStrengthMeter,\\n        minimumLength: this.minLength\\n      });\\n    }\\n  }\\n\\n  get isStrengthMeter(): boolean {\\n    return isTrueBooleanInput(this.showStrengthMeter);\\n  }\\n\\n  /**\\n   * Return the invalid message string from TranslateService\\n   */\\n  override get invalidMessage(): Observable<string> {\\n    if (this.hasError(\'noPasswordMatch\')) {\\n      return this._translateService.get(\'it.errors.password-no-match\');\\n    }\\n    if (this.hasError(\'minlength\')) {\\n      return this._translateService.get(\'it.errors.password-min-length\', {\\n        minLength: this.minLength\\n      });\\n    }\\n    if (this.hasError(\'hasNumber\')) {\\n      return this._translateService.get(\'it.errors.password-number\');\\n    }\\n    if (this.hasError(\'hasCapitalCase\')) {\\n      return this._translateService.get(\'it.errors.password-capital-case\');\\n    }\\n    if (this.hasError(\'hasSmallCase\')) {\\n      return this._translateService.get(\'it.errors.password-capital-case\');\\n    }\\n    if (this.hasError(\'hasSpecialCharacters\')) {\\n      return this._translateService.get(\'it.errors.password-special-character\');\\n    }\\n\\n    return super.invalidMessage;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".form-group {\\n  input:focus:not(.focus--mouse) {\\n    box-shadow: inherit !important;\\n    border-color: inherit !important;\\n  }\\n}\\n","styleUrl":"./password-input.component.scss"}],"stylesData":"","extends":"AbstractFormComponent","accessors":{"isStrengthMeter":{"name":"isStrengthMeter","getSignature":{"name":"isStrengthMeter","type":"boolean","returnType":"boolean","line":90}},"invalidMessage":{"name":"invalidMessage","getSignature":{"name":"invalidMessage","type":"","returnType":"Observable<string>","line":97,"rawdescription":"\\n\\nReturn the invalid message string from TranslateService\\n","description":"<p>Return the invalid message string from TranslateService</p>\\n"}}},"templateData":"<div class=\\"form-group\\">\\n\\n  <label *ngIf=\\"label\\" [for]=\\"id\\" [class.active]=\\"!!control.value || !!placeholder\\">{{label}}</label>\\n\\n  <input type=\\"password\\"\\n         [id]=\\"id\\"\\n         class=\\"form-control input-password\\"\\n         [class.input-password-strength-meter]=\\"isStrengthMeter\\"\\n         [class.is-invalid]=\\"isInvalid\\"\\n         [class.is-valid]=\\"isValid\\"\\n         [formControl]=\\"control\\"\\n         [placeholder]=\\"placeholder\\"\\n         [attr.aria-describedby]=\\"id + \'-description\'\\" #input>\\n\\n  <span class=\\"password-icon\\" aria-hidden=\\"true\\">\\n    <it-icon name=\\"password-visible\\" size=\\"sm\\" class=\\"password-icon-visible\\"></it-icon>\\n    <it-icon name=\\"password-invisible\\" size=\\"sm\\" class=\\"password-icon-invisible d-none\\"></it-icon>\\n  </span>\\n\\n  <small *ngIf=\\"description && !isStrengthMeter\\" [id]=\\"id + \'-description\'\\" class=\\"form-text\\">{{description}}</small>\\n\\n  <div *ngIf=\\"isInvalid\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n    <div #customError><ng-content select=\\"[error]\\"></ng-content></div>\\n    <ng-container *ngIf=\\"!customError.hasChildNodes()\\">{{invalidMessage | async}}</ng-container>\\n  </div>\\n</div>\\n"},{"name":"ProgressBarComponent","id":"component-ProgressBarComponent-e8bc32b42fe2da91a9633e8a502614c40f86da784509b88a2fc915505470367726844c2263565fd05b0843b65c7626f20849a50d0a11559617eed47631a4ba74","file":"projects/design-angular-kit/src/lib/components/core/progress-bar/progress-bar.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-progress-bar[value]","styleUrls":[],"styles":[],"templateUrl":["./progress-bar.component.html"],"viewProviders":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe progress bar color\\n","description":"<p>The progress bar color</p>\\n","line":30,"type":"ProgressBarColor","decorators":[]},{"name":"indeterminate","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow the progress as indeterminate\\n","description":"<p>Show the progress as indeterminate</p>\\n","line":25,"type":"BooleanInput","decorators":[]},{"name":"showLabel","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow the progress label\\n","description":"<p>Show the progress label</p>\\n","line":20,"type":"BooleanInput","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe progress bar value [0, 100]\\n","description":"<p>The progress bar value [0, 100]</p>\\n","line":15,"type":"number","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { ProgressBarColor } from \'../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-progress-bar[value]\',\\n  templateUrl: \'./progress-bar.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ProgressBarComponent {\\n\\n  /**\\n   * The progress bar value [0, 100]\\n   */\\n  @Input() value!: number;\\n\\n  /**\\n   * Show the progress label\\n   */\\n  @Input() showLabel?: BooleanInput;\\n\\n  /**\\n   * Show the progress as indeterminate\\n   */\\n  @Input() indeterminate?: BooleanInput;\\n\\n  /**\\n   * The progress bar color\\n   */\\n  @Input() color?: ProgressBarColor;\\n\\n  /**\\n   * Return the background color\\n   */\\n  get bgColor(): string {\\n    if (!this.color) {\\n      return \'\';\\n    }\\n\\n    return ` bg-${this.color}`;\\n  }\\n\\n  get isIndeterminate(): boolean {\\n    return isTrueBooleanInput(this.indeterminate);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"bgColor":{"name":"bgColor","getSignature":{"name":"bgColor","type":"string","returnType":"string","line":35,"rawdescription":"\\n\\nReturn the background color\\n","description":"<p>Return the background color</p>\\n"}},"isIndeterminate":{"name":"isIndeterminate","getSignature":{"name":"isIndeterminate","type":"boolean","returnType":"boolean","line":43}}},"templateData":"<div class=\\"progress-bar-wrapper\\">\\n  <div *ngIf=\\"showLabel\\" class=\\"progress-bar-label\\">\\n    <span class=\\"visually-hidden\\">{{\'it.core.progress\'|translate}} </span>{{value}}%\\n  </div>\\n  <div class=\\"progress\\"\\n       [class.progress-color]=\\"!!color\\"\\n       [class.progress-indeterminate]=\\"isIndeterminate\\">\\n\\n    <div *ngIf=\\"isIndeterminate; else determinate\\" class=\\"progress-bar{{bgColor}}\\" role=\\"progressbar\\"></div>\\n    <ng-template #determinate>\\n      <div class=\\"progress-bar{{bgColor}}\\" role=\\"progressbar\\" [style.width.%]=\\"value\\"\\n           [attr.aria-valuenow]=\\"value\\" aria-valuemin=\\"0\\" aria-valuemax=\\"100\\"></div>\\n    </ng-template>\\n  </div>\\n</div>\\n"},{"name":"ProgressButtonComponent","id":"component-ProgressButtonComponent-972f7848b909a5d680154af0c1f2fe9d59d383e973d04605e6f40757591ae8bcf34124551e365e13add93252a2ab5636ad609900f0bb3a8d9f78d9b9204d592a","file":"projects/design-angular-kit/src/lib/components/core/progress-button/progress-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"button[itButton][progress]","styleUrls":[],"styles":[],"templateUrl":["./progress-button.component.html"],"viewProviders":[],"inputsClass":[{"name":"progress","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":648,"end":670,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":649,"end":656,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined</p>\\n"}],"rawdescription":"\\n\\nBehavior of the progress bar\\n- <b>true</b>: Show indeterminate progress bar\\n- <b>false</b> or <b>undefined</b>: Hide progress bar\\n- <b>number</b> [0, 100]: Assign a specific value to the progress bar\\n","description":"<p>Behavior of the progress bar</p>\\n<ul>\\n<li><b>true</b>: Show indeterminate progress bar</li>\\n<li><b>false</b> or <b>undefined</b>: Hide progress bar</li>\\n<li><b>number</b> [0, 100]: Assign a specific value to the progress bar</li>\\n</ul>\\n","line":19,"type":"number | BooleanInput","decorators":[]},{"name":"progressColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe progress bar color\\n","description":"<p>The progress bar color</p>\\n","line":24,"type":"ProgressBarColor","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { ProgressBarColor } from \'../../../interfaces/core\';\\n\\n@Component({\\n  selector: \'button[itButton][progress]\',\\n  templateUrl: \'./progress-button.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class ProgressButtonComponent {\\n\\n  /**\\n   * Behavior of the progress bar\\n   * - <b>true</b>: Show indeterminate progress bar\\n   * - <b>false</b> or <b>undefined</b>: Hide progress bar\\n   * - <b>number</b> [0, 100]: Assign a specific value to the progress bar\\n   * @default undefined\\n   */\\n  @Input() progress?: number | BooleanInput;\\n\\n  /**\\n   * The progress bar color\\n   */\\n  @Input() progressColor?: ProgressBarColor;\\n\\n  get isProgress(): boolean {\\n    return typeof this.progress === \'number\' || isTrueBooleanInput(this.progress);\\n  }\\n\\n  get progressValue(): number {\\n    return typeof this.progress === \'number\' ? this.progress : 0;\\n  }\\n\\n  get isIndeterminate(): boolean {\\n    return typeof this.progress !== \'number\' && isTrueBooleanInput(this.progress);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"isProgress":{"name":"isProgress","getSignature":{"name":"isProgress","type":"boolean","returnType":"boolean","line":26}},"progressValue":{"name":"progressValue","getSignature":{"name":"progressValue","type":"number","returnType":"number","line":30}},"isIndeterminate":{"name":"isIndeterminate","getSignature":{"name":"isIndeterminate","type":"boolean","returnType":"boolean","line":34}}},"templateData":"<ng-content></ng-content>\\n\\n<it-progress-bar *ngIf=\\"isProgress\\"\\n                 [value]=\\"progressValue\\"\\n                 [indeterminate]=\\"isIndeterminate\\"\\n                 [color]=\\"progressColor\\"></it-progress-bar>\\n"},{"name":"RadioButtonComponent","id":"component-RadioButtonComponent-6ad2b3a4ad6bc12cb6ecfc0a81672d11bd14cf3c4c7784c78c6d4a862e233fc584ed769ef5c54d11b080f41920dc52324484fd23ca371c065d4ccf261191706d","file":"projects/design-angular-kit/src/lib/components/form/radio-button/radio-button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-radio-button[value]","styleUrls":["./radio-button.component.scss"],"styles":[],"templateUrl":["./radio-button.component.html"],"viewProviders":[],"inputsClass":[{"name":"checked","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf is radio is checked\\n","description":"<p>If is radio is checked</p>\\n","line":33,"type":"BooleanInput","decorators":[]},{"name":"group","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":762,"end":780,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":763,"end":770,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"rawdescription":"\\n\\nIf is radio group\\n","description":"<p>If is radio group</p>\\n","line":28,"type":"BooleanInput","decorators":[]},{"name":"inline","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":665,"end":683,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":666,"end":673,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"rawdescription":"\\n\\nIf show radio inline\\n","description":"<p>If show radio inline</p>\\n","line":22,"type":"BooleanInput","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe radio value\\n","description":"<p>The radio value</p>\\n","line":16,"type":"string | number","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractFormComponent"}},{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\nimport { BooleanInput, isFalseBooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-radio-button[value]\',\\n  templateUrl: \'./radio-button.component.html\',\\n  styleUrls: [\'./radio-button.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RadioButtonComponent extends AbstractFormComponent<string | number | undefined> {\\n\\n  /**\\n   * The radio value\\n   */\\n  @Input() value?: string | number;\\n\\n  /**\\n   * If show radio inline\\n   * @default false\\n   */\\n  @Input() inline: BooleanInput = false;\\n\\n  /**\\n   * If is radio group\\n   * @default false\\n   */\\n  @Input() group: BooleanInput = false;\\n\\n  /**\\n   * If is radio is checked\\n   */\\n  @Input() checked?: BooleanInput;\\n\\n  get isInline(): boolean {\\n    return isTrueBooleanInput(this.inline);\\n  }\\n\\n  get isGroup(): boolean {\\n    return isTrueBooleanInput(this.group);\\n  }\\n\\n  get name(): string {\\n    let name = \'\';\\n    if (this._ngControl) {\\n      name = this._ngControl.name?.toString() || \'\';\\n\\n      // Retrieve parent name, prevent duplicate name inside FormArray or nested FormGroup\\n      let control = this._ngControl.control?.parent;\\n      while (control?.parent) {\\n        const controls: { [key: string]: any } = control?.parent?.controls || {};\\n        const parentName = Object.keys(controls).find(name => control === controls[name]) || null;\\n        if (!parentName) {\\n          break;\\n        }\\n        name = `${parentName}.${name}`; // parent.0.radioName\\n        control = control.parent;\\n      }\\n    }\\n\\n    return name;\\n  }\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    if (this.control.value || !this.value || isFalseBooleanInput(this.checked)) {\\n      return;\\n    }\\n\\n    this.writeValue(this.value);\\n    return this.onChange(this.value);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"//@import \'bootstrap-italia/src/scss/functions\';\\n//@import \'bootstrap-italia/src/scss/utilities/colors_vars\';\\n//\\n//.form-check {\\n//\\n//  [type=radio].is-invalid:not(:checked) + label::after,\\n//  [type=radio].is-invalid:not(:checked) + label::before {\\n//    border-color: $danger;\\n//  }\\n//\\n//  [type=radio].is-invalid:not(:checked) + label {\\n//    color: $danger;\\n//  }\\n//}\\n","styleUrl":"./radio-button.component.scss"}],"stylesData":"","extends":"AbstractFormComponent","accessors":{"isInline":{"name":"isInline","getSignature":{"name":"isInline","type":"boolean","returnType":"boolean","line":35}},"isGroup":{"name":"isGroup","getSignature":{"name":"isGroup","type":"boolean","returnType":"boolean","line":39}},"name":{"name":"name","getSignature":{"name":"name","type":"string","returnType":"string","line":43}}},"templateData":"<ng-container>\\n  <div class=\\"form-check\\"\\n       [class.form-check-group]=\\"isGroup\\"\\n       [class.form-check-inline]=\\"isInline\\">\\n\\n    <input\\n      [id]=\\"id\\"\\n      type=\\"radio\\"\\n      [value]=\\"value\\"\\n      class=\\"form-check-input\\"\\n      [name]=\\"name\\"\\n      [class.is-invalid]=\\"isInvalid\\"\\n      [class.is-valid]=\\"isValid\\"\\n      [formControl]=\\"control\\"\\n      [attr.aria-describedby]=\\"id + \'-help\'\\">\\n\\n    <label class=\\"form-check-label\\" [for]=\\"id\\">\\n      <div #customLabel>\\n        <ng-content select=\\"[label]\\"></ng-content>\\n      </div>\\n      <ng-container *ngIf=\\"!customLabel.hasChildNodes()\\">{{label}}</ng-container>\\n    </label>\\n\\n    <small *ngIf=\\"isGroup\\" [id]=\\"id + \'-help\'\\" class=\\"form-text\\">\\n      <ng-content></ng-content>\\n    </small>\\n\\n    <div *ngIf=\\"isInvalid && isGroup\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n      <div #customError>\\n        <ng-content select=\\"[error]\\"></ng-content>\\n      </div>\\n      <ng-container *ngIf=\\"!customError.hasChildNodes()\\">{{invalidMessage | async}}</ng-container>\\n    </div>\\n\\n  </div>\\n\\n  <div *ngIf=\\"isInvalid && !isGroup\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n    <div #customError>\\n      <ng-content select=\\"[error]\\"></ng-content>\\n    </div>\\n    <ng-container *ngIf=\\"!customError.hasChildNodes()\\">{{invalidMessage | async}}</ng-container>\\n  </div>\\n</ng-container>\\n"},{"name":"RatingComponent","id":"component-RatingComponent-0d42f864ef9df60d0033f6e2e9788a7a1e19ca032e7cdbf65f2a97b39c9526e31a36b605afa38a1ca8cade1ad3bc8240388f6c957ffc3371f932c8ee97b41ecf","file":"projects/design-angular-kit/src/lib/components/core/rating/rating.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-rating","styleUrls":[],"styles":[],"templateUrl":["./rating.component.html"],"viewProviders":[],"inputsClass":[{"name":"starCount","defaultValue":"5","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":480,"end":494,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":481,"end":488,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>5</p>\\n"}],"rawdescription":"\\n\\nNumber of stars to show\\n","description":"<p>Number of stars to show</p>\\n","line":20,"type":"number","decorators":[]},{"name":"value","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe rating value\\n","description":"<p>The rating value</p>\\n","line":14,"type":"number","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"stars","defaultValue":"this.generateStars()","deprecated":false,"deprecationMessage":"","type":"Array<number>","optional":false,"description":"","line":22,"modifierKind":[122]},{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"generateStars","args":[],"optional":false,"returnType":"Array<number>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate the array of stars\\n","description":"<p>Generate the array of stars</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1002,"end":1009,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractFormComponent"}},{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input, SimpleChanges } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\n\\n@Component({\\n  selector: \'it-rating\',\\n  templateUrl: \'./rating.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class RatingComponent extends AbstractFormComponent<number> {\\n\\n  /**\\n   * The rating value\\n   */\\n  @Input() value?: number;\\n\\n  /**\\n   * Number of stars to show\\n   * @default 5\\n   */\\n  @Input() starCount: number = 5;\\n\\n  protected stars: Array<number> = this.generateStars();\\n\\n  override ngOnChanges(changes: SimpleChanges): void {\\n    super.ngOnChanges(changes);\\n\\n    if (changes[\'starCount\'] || !this.stars.length) {\\n      this.stars = this.generateStars();\\n    }\\n  }\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    if (!this.control.value && !!this.value) {\\n      this.writeValue(this.value);\\n      this.onChange(this.value);\\n    }\\n  }\\n\\n  /**\\n   * Generate the array of stars\\n   * @private\\n   */\\n  private generateStars(): Array<number> {\\n    return Array.from({ length: this.starCount }, (_, i) => i + 1).reverse();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractFormComponent","templateData":"<fieldset class=\\"rating\\"\\n          [class.rating-label]=\\"!!label\\"\\n          [class.rating-read-only]=\\"control.disabled\\">\\n  <legend>\\n    <span>{{label}}</span>\\n    <span class=\\"visually-hidden\\">\\n        {{\'it.core.rating-star\'|translate : { current: control.value || 0, total: stars.length } }}\\n    </span>\\n  </legend>\\n\\n  <ng-container *ngFor=\\"let starValue of stars\\">\\n    <input [id]=\\"id + \'-\' + starValue\\"\\n           type=\\"radio\\"\\n           [name]=\\"id\\"\\n           [value]=\\"starValue\\"\\n           [attr.aria-hidden]=\\"control.disabled\\"\\n           [formControl]=\\"control\\" />\\n\\n    <label class=\\"full\\" [for]=\\"id + \'-\' + starValue\\">\\n      <it-icon name=\\"star-full\\" size=\\"sm\\"></it-icon>\\n      <span class=\\"visually-hidden\\">\\n        {{\'it.core.rate-star\'|translate : { current: starValue, total: stars.length } }}\\n      </span>\\n    </label>\\n  </ng-container>\\n\\n</fieldset>\\n"},{"name":"SelectComponent","id":"component-SelectComponent-494ee995ef0780e6fe0edbda42e3ec51deb49255b7191e70b1515e444dc9534e993e6a1d1e447b405654b7ce824288dfb104cbbc8d9d5a5a8b06d4d203f0c633","file":"projects/design-angular-kit/src/lib/components/form/select/select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-select","styleUrls":["./select.component.scss"],"styles":[],"templateUrl":["./select.component.html"],"viewProviders":[],"inputsClass":[{"name":"description","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe select description\\n","description":"<p>The select description</p>\\n","line":25,"type":"string","decorators":[]},{"name":"groups","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe select group options\\n","description":"<p>The select group options</p>\\n","line":20,"type":"Array<SelectControlGroup>","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe select options\\n","description":"<p>The select options</p>\\n","line":15,"type":"Array<SelectControlOption>","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractFormComponent"}},{"name":"optionIsDisabled","args":[{"name":"option","type":"SelectControlOption","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if the option is disabled\\n","description":"<p>Check if the option is disabled</p>\\n","jsdoctags":[{"name":{"pos":1572,"end":1578,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"option"},"type":"SelectControlOption","deprecated":false,"deprecationMessage":"","tagName":{"pos":1566,"end":1571,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the option</p>\\n"}]},{"name":"optionIsSelected","args":[{"name":"option","type":"SelectControlOption","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCheck if the option is selected\\n","description":"<p>Check if the option is selected</p>\\n","jsdoctags":[{"name":{"pos":1243,"end":1249,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"option"},"type":"SelectControlOption","deprecated":false,"deprecationMessage":"","tagName":{"pos":1237,"end":1242,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the option</p>\\n"}]},{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\nimport { SelectControlGroup, SelectControlOption } from \'../../../interfaces/form\';\\n\\n@Component({\\n  selector: \'it-select\',\\n  templateUrl: \'./select.component.html\',\\n  styleUrls: [\'./select.component.scss\']\\n})\\nexport class SelectComponent extends AbstractFormComponent {\\n\\n  /**\\n   * The select options\\n   */\\n  @Input() options?: Array<SelectControlOption>;\\n\\n  /**\\n   * The select group options\\n   */\\n  @Input() groups?: Array<SelectControlGroup>;\\n\\n  /**\\n   * The select description\\n   */\\n  @Input() description?: string;\\n\\n  override ngOnInit() {\\n    super.ngOnInit();\\n\\n    if (this.control.value) {\\n      return;\\n    }\\n    const selectedOption = this.options?.find(this.optionIsSelected);\\n    if (selectedOption) {\\n      this.writeValue(selectedOption.value);\\n      return this.onChange(selectedOption.value);\\n    }\\n\\n    const selectedGroupOption = this.groups?.flatMap(g => g.options).find(this.optionIsSelected);\\n    if (selectedGroupOption) {\\n      this.writeValue(selectedGroupOption.value);\\n      this.onChange(selectedGroupOption.value);\\n    }\\n  }\\n\\n  /**\\n   * Check if the option is selected\\n   * @param option the option\\n   */\\n  optionIsSelected(option: SelectControlOption): boolean {\\n    if (option.selected === true) {\\n      return true;\\n    }\\n\\n    if (typeof option.selected === \'function\') {\\n      return option.selected(this.control.value);\\n    }\\n\\n    return false;\\n  }\\n\\n  /**\\n   * Check if the option is disabled\\n   * @param option the option\\n   */\\n  optionIsDisabled(option: SelectControlOption): boolean {\\n    if (option.disabled === true) {\\n      return true;\\n    }\\n\\n    if (typeof option.disabled === \'function\') {\\n      return option.disabled(this.control.value);\\n    }\\n\\n    return false;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".select-wrapper {\\n  margin-bottom: 1.7rem;\\n}\\n","styleUrl":"./select.component.scss"}],"stylesData":"","extends":"AbstractFormComponent","templateData":"<div class=\\"select-wrapper\\">\\n  <label [for]=\\"id\\">{{label}}</label>\\n  <select [id]=\\"id\\" [formControl]=\\"control\\" [attr.aria-describedby]=\\"id + \'-description\'\\">\\n    <ng-container *ngIf=\\"options\\">\\n      <option *ngFor=\\"let option of options\\" [disabled]=\\"optionIsDisabled(option)\\" [value]=\\"option.value\\">\\n        {{option.text ?? option.value}}\\n      </option>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\"groups\\">\\n      <optgroup *ngFor=\\"let group of groups\\" [label]=\\"group.label\\">\\n        <option *ngFor=\\"let option of group.options\\" [disabled]=\\"optionIsDisabled(option)\\" [value]=\\"option.value\\">\\n          {{option.text ?? option.value}}\\n        </option>\\n      </optgroup>\\n    </ng-container>\\n  </select>\\n  <small *ngIf=\\"description\\" [id]=\\"id + \'-description\'\\" class=\\"form-text\\">{{description}}</small>\\n</div>\\n"},{"name":"SpinnerComponent","id":"component-SpinnerComponent-6a8cf5c9623c75c749eddbd057c99a6d9415f6dc76b1261e01aacf05e9ad171b016e9c1953673d590af311afdd2f13ad82f0048fd2a326df861adc8520925456","file":"projects/design-angular-kit/src/lib/components/core/spinner/spinner.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-spinner","styleUrls":[],"styles":[],"templateUrl":["./spinner.component.html"],"viewProviders":[],"inputsClass":[{"name":"active","defaultValue":"true","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe spinner is active\\n","description":"<p>The spinner is active</p>\\n","line":14,"type":"BooleanInput","decorators":[]},{"name":"double","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow the double animation\\n","description":"<p>Show the double animation</p>\\n","line":24,"type":"BooleanInput","decorators":[]},{"name":"small","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow a small spinner\\n","description":"<p>Show a small spinner</p>\\n","line":19,"type":"BooleanInput","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-spinner\',\\n  templateUrl: \'./spinner.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class SpinnerComponent {\\n\\n  /**\\n   * The spinner is active\\n   */\\n  @Input() active: BooleanInput = true;\\n\\n  /**\\n   * Show a small spinner\\n   */\\n  @Input() small?: BooleanInput;\\n\\n  /**\\n   * Show the double animation\\n   */\\n  @Input() double?: BooleanInput;\\n\\n  get isActive(): boolean {\\n    return isTrueBooleanInput(this.active);\\n  }\\n\\n  get isSmall(): boolean {\\n    return isTrueBooleanInput(this.small);\\n  }\\n\\n  get isDouble(): boolean {\\n    return isTrueBooleanInput(this.double);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","accessors":{"isActive":{"name":"isActive","getSignature":{"name":"isActive","type":"boolean","returnType":"boolean","line":26}},"isSmall":{"name":"isSmall","getSignature":{"name":"isSmall","type":"boolean","returnType":"boolean","line":30}},"isDouble":{"name":"isDouble","getSignature":{"name":"isDouble","type":"boolean","returnType":"boolean","line":34}}},"templateData":"<div class=\\"progress-spinner\\"\\n     [class.progress-spinner-double]=\\"isDouble\\"\\n     [class.progress-spinner-active]=\\"isActive\\"\\n     [class.size-sm]=\\"isSmall\\">\\n  <div *ngIf=\\"isDouble\\" class=\\"progress-spinner-inner\\"></div>\\n  <div *ngIf=\\"isDouble\\" class=\\"progress-spinner-inner\\"></div>\\n  <span class=\\"visually-hidden\\">{{\'it.core.loading\'|translate}}...</span>\\n</div>\\n"},{"name":"SteppersContainerComponent","id":"component-SteppersContainerComponent-13d6aee30cf0d5f7539f205eaec067de09623745617edaeedfc931f0f303a1abf1677e16ed4ad886f6f546ed567f780fb7abb05a153ca472d9a8168a72f2223b","file":"projects/design-angular-kit/src/lib/components/core/steppers/steppers-container/steppers-container.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-steppers-container[activeStep]","styleUrls":[],"styles":[],"templateUrl":["./steppers-container.component.html"],"viewProviders":[],"inputsClass":[{"name":"activeStep","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":755,"end":786,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":338,"tagName":{"pos":756,"end":761,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the step index</p>\\n","name":{"pos":762,"end":767,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"index"},"isNameFirst":true,"isBracketed":false}],"rawdescription":"\\n\\nThe active step index\\n","description":"<p>The active step index</p>\\n","line":29,"type":"number","decorators":[]},{"name":"confirmLoading","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow the confirm button as indeterminate progress button\\n","description":"<p>Show the confirm button as indeterminate progress button</p>\\n","line":81,"type":"BooleanInput","decorators":[]},{"name":"dark","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDark style\\n","description":"<p>Dark style</p>\\n","line":40,"type":"BooleanInput","decorators":[]},{"name":"progressColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustomize progress color\\n","description":"<p>Customize progress color</p>\\n","line":58,"type":"ProgressBarColor","decorators":[]},{"name":"progressStyle","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1314,"end":1358,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1315,"end":1322,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>undefined - don&#39;t show progress</p>\\n"}],"rawdescription":"\\n\\nThe progress style\\n-<b>progress</b>: Show progress bar - You can change the color with the `progressColor` attribute\\n-<b>dots</b>: Show progress dots\\n","description":"<p>The progress style\\n-<b>progress</b>: Show progress bar - You can change the color with the <code>progressColor</code> attribute\\n-<b>dots</b>: Show progress dots</p>\\n","line":53,"type":"\\"progress\\" | \\"dots\\"","decorators":[]},{"name":"saveLoading","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nShow the save button as indeterminate progress button\\n","description":"<p>Show the save button as indeterminate progress button</p>\\n","line":92,"type":"BooleanInput","decorators":[]},{"name":"showBackButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1535,"end":1552,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1536,"end":1543,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nShow the back button\\n","description":"<p>Show the back button</p>\\n","line":64,"type":"BooleanInput","decorators":[]},{"name":"showConfirmButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1756,"end":1774,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1757,"end":1764,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"rawdescription":"\\n\\nShow the confirm button\\n","description":"<p>Show the confirm button</p>\\n","line":76,"type":"BooleanInput","decorators":[]},{"name":"showForwardButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1644,"end":1661,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1645,"end":1652,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nShow the forward button\\n","description":"<p>Show the forward button</p>\\n","line":70,"type":"BooleanInput","decorators":[]},{"name":"showHeader","defaultValue":"true","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":862,"end":879,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":863,"end":870,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>true</p>\\n"}],"rawdescription":"\\n\\nShow the stepper header\\n","description":"<p>Show the stepper header</p>\\n","line":35,"type":"BooleanInput","decorators":[]},{"name":"showSaveButton","defaultValue":"false","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1984,"end":2002,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1985,"end":1992,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>false</p>\\n"}],"rawdescription":"\\n\\nShow the save button\\n","description":"<p>Show the save button</p>\\n","line":87,"type":"BooleanInput","decorators":[]},{"name":"steppersNumber","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe labels present in the header steps can be anticipated by the relative ordinal number.\\n","description":"<p>The labels present in the header steps can be anticipated by the relative ordinal number.</p>\\n","line":45,"type":"BooleanInput","decorators":[]}],"outputsClass":[{"name":"backClick","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn back button click\\n","description":"<p>On back button click</p>\\n","jsdoctags":[{"pos":2323,"end":2367,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2324,"end":2329,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"comment":"<p>activeStep the current step index</p>\\n"}],"line":103,"type":"EventEmitter<number>"},{"name":"confirmClick","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn confirm button click\\n","description":"<p>On confirm button click</p>\\n","jsdoctags":[{"pos":2592,"end":2636,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2593,"end":2598,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"comment":"<p>activeStep the current step index</p>\\n"}],"line":115,"type":"EventEmitter<number>"},{"name":"forwardClick","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn forward button click\\n","description":"<p>On forward button click</p>\\n","jsdoctags":[{"pos":2456,"end":2500,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2457,"end":2462,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"comment":"<p>activeStep the current step index</p>\\n"}],"line":109,"type":"EventEmitter<number>"},{"name":"saveClick","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn save button click\\n","description":"<p>On save button click</p>\\n","jsdoctags":[{"pos":2725,"end":2769,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":2726,"end":2731,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"comment":"<p>activeStep the current step index</p>\\n"}],"line":121,"type":"EventEmitter<number>"}],"propertiesClass":[{"name":"steps","deprecated":false,"deprecationMessage":"","type":"QueryList<SteppersItemComponent>","optional":true,"description":"<p>The stepper items</p>\\n","line":97,"rawdescription":"\\n\\nThe stepper items\\n","decorators":[{"name":"ContentChildren","stringifiedArguments":"SteppersItemComponent"}]},{"name":"stepsSubscriptions","deprecated":false,"deprecationMessage":"","type":"Array<Subscription>","optional":true,"description":"","line":159,"modifierKind":[121]}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":170,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  AfterViewInit,\\n  ChangeDetectionStrategy,\\n  ChangeDetectorRef,\\n  Component,\\n  ContentChildren,\\n  EventEmitter,\\n  Input,\\n  OnDestroy,\\n  Output,\\n  QueryList\\n} from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { SteppersItemComponent } from \'../steppers-item/steppers-item.component\';\\nimport { ProgressBarColor } from \'../../../../interfaces/core\';\\nimport { startWith, Subscription } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-steppers-container[activeStep]\',\\n  templateUrl: \'./steppers-container.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class SteppersContainerComponent implements AfterViewInit, OnDestroy {\\n\\n  /**\\n   * The active step index\\n   * @param index the step index\\n   */\\n  @Input() activeStep!: number;\\n\\n  /**\\n   * Show the stepper header\\n   * @default true\\n   */\\n  @Input() showHeader: BooleanInput = true;\\n\\n  /**\\n   * Dark style\\n   */\\n  @Input() dark?: BooleanInput;\\n\\n  /**\\n   * The labels present in the header steps can be anticipated by the relative ordinal number.\\n   */\\n  @Input() steppersNumber?: BooleanInput;\\n\\n  /**\\n   * The progress style\\n   * -<b>progress</b>: Show progress bar - You can change the color with the `progressColor` attribute\\n   * -<b>dots</b>: Show progress dots\\n   * @default undefined - don\'t show progress\\n   */\\n  @Input() progressStyle?: \'progress\' | \'dots\';\\n\\n  /**\\n   * Customize progress color\\n   */\\n  @Input() progressColor?: ProgressBarColor;\\n\\n  /**\\n   * Show the back button\\n   * @default true\\n   */\\n  @Input() showBackButton: BooleanInput = true;\\n\\n  /**\\n   * Show the forward button\\n   * @default true\\n   */\\n  @Input() showForwardButton: BooleanInput = true;\\n\\n  /**\\n   * Show the confirm button\\n   * @default false\\n   */\\n  @Input() showConfirmButton: BooleanInput = false;\\n\\n  /**\\n   * Show the confirm button as indeterminate progress button\\n   */\\n  @Input() confirmLoading?: BooleanInput;\\n\\n  /**\\n   * Show the save button\\n   * @default false\\n   */\\n  @Input() showSaveButton: BooleanInput = false;\\n\\n  /**\\n   * Show the save button as indeterminate progress button\\n   */\\n  @Input() saveLoading?: BooleanInput;\\n\\n  /**\\n   * The stepper items\\n   */\\n  @ContentChildren(SteppersItemComponent) steps?: QueryList<SteppersItemComponent>;\\n\\n  /**\\n   * On back button click\\n   * @event activeStep the current step index\\n   */\\n  @Output() backClick: EventEmitter<number>;\\n\\n  /**\\n   * On forward button click\\n   * @event activeStep the current step index\\n   */\\n  @Output() forwardClick: EventEmitter<number>;\\n\\n  /**\\n   * On confirm button click\\n   * @event activeStep the current step index\\n   */\\n  @Output() confirmClick: EventEmitter<number>;\\n\\n  /**\\n   * On save button click\\n   * @event activeStep the current step index\\n   */\\n  @Output() saveClick: EventEmitter<number>;\\n\\n  get isShowHeader(): boolean {\\n    return isTrueBooleanInput(this.showHeader);\\n  }\\n\\n  get isSteppersNumber(): boolean {\\n    return isTrueBooleanInput(this.steppersNumber);\\n  }\\n\\n  get isDark(): boolean {\\n    return isTrueBooleanInput(this.dark);\\n  }\\n\\n  get isShowBackButton(): boolean {\\n    return isTrueBooleanInput(this.showBackButton);\\n  }\\n\\n  get isShowForwardButton(): boolean {\\n    return isTrueBooleanInput(this.showForwardButton);\\n  }\\n\\n  get isShowConfirmButton(): boolean {\\n    return isTrueBooleanInput(this.showConfirmButton);\\n  }\\n\\n  get isConfirmLoading(): boolean {\\n    return isTrueBooleanInput(this.confirmLoading);\\n  }\\n\\n  get isShowSaveButton(): boolean {\\n    return isTrueBooleanInput(this.showSaveButton);\\n  }\\n\\n  get isSaveLoading(): boolean {\\n    return isTrueBooleanInput(this.saveLoading);\\n  }\\n\\n  private stepsSubscriptions?: Array<Subscription>;\\n\\n  constructor(\\n    private readonly _changeDetectorRef: ChangeDetectorRef\\n  ) {\\n    this.backClick = new EventEmitter<number>();\\n    this.forwardClick = new EventEmitter<number>();\\n    this.confirmClick = new EventEmitter<number>();\\n    this.saveClick = new EventEmitter<number>();\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.steps?.changes.pipe( // When steps changes (dynamic add/remove)\\n      startWith(undefined)\\n    ).subscribe(() => {\\n      this.stepsSubscriptions?.forEach(sub => sub.unsubscribe()); // Remove old subscriptions\\n      this.stepsSubscriptions = this.steps?.map(step => step.valueChanges.subscribe(() => {\\n        this._changeDetectorRef.detectChanges(); // DetectChanges when step attributes changes\\n      }));\\n      this._changeDetectorRef.detectChanges(); // Force update html render\\n    });\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.stepsSubscriptions?.forEach(step => step.unsubscribe());\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":159,"jsdoctags":[{"name":"_changeDetectorRef","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"implements":["AfterViewInit","OnDestroy"],"accessors":{"isShowHeader":{"name":"isShowHeader","getSignature":{"name":"isShowHeader","type":"boolean","returnType":"boolean","line":123}},"isSteppersNumber":{"name":"isSteppersNumber","getSignature":{"name":"isSteppersNumber","type":"boolean","returnType":"boolean","line":127}},"isDark":{"name":"isDark","getSignature":{"name":"isDark","type":"boolean","returnType":"boolean","line":131}},"isShowBackButton":{"name":"isShowBackButton","getSignature":{"name":"isShowBackButton","type":"boolean","returnType":"boolean","line":135}},"isShowForwardButton":{"name":"isShowForwardButton","getSignature":{"name":"isShowForwardButton","type":"boolean","returnType":"boolean","line":139}},"isShowConfirmButton":{"name":"isShowConfirmButton","getSignature":{"name":"isShowConfirmButton","type":"boolean","returnType":"boolean","line":143}},"isConfirmLoading":{"name":"isConfirmLoading","getSignature":{"name":"isConfirmLoading","type":"boolean","returnType":"boolean","line":147}},"isShowSaveButton":{"name":"isShowSaveButton","getSignature":{"name":"isShowSaveButton","type":"boolean","returnType":"boolean","line":151}},"isSaveLoading":{"name":"isSaveLoading","getSignature":{"name":"isSaveLoading","type":"boolean","returnType":"boolean","line":155}}},"templateData":"<div class=\\"steppers\\" [class.bg-dark]=\\"isDark\\">\\n  <div *ngIf=\\"isShowHeader\\" class=\\"steppers-header\\">\\n    <ul>\\n      <li *ngFor=\\"let step of steps; let i = index\\"\\n          [class.confirmed]=\\"i < activeStep\\"\\n          [class.active]=\\"i === activeStep\\"\\n          [class.no-line]=\\"i === activeStep && isSteppersNumber\\">\\n\\n        <it-icon *ngIf=\\"step.icon && !isSteppersNumber\\" [name]=\\"step.icon\\"></it-icon>\\n        <span *ngIf=\\"isSteppersNumber\\" class=\\"steppers-number\\">\\n          <ng-container *ngIf=\\"i < activeStep; else showNumber\\">\\n            <ng-container *ngTemplateOutlet=\\"checkIcon\\"></ng-container>\\n          </ng-container>\\n          <ng-template #showNumber>\\n            <span class=\\"visually-hidden\\">{{\'it.core.step\' | translate}} </span>{{i + 1}}\\n          </ng-template>\\n        </span>\\n\\n        {{step.label}}\\n\\n        <ng-container *ngIf=\\"i < activeStep && !isSteppersNumber\\">\\n          <ng-container *ngTemplateOutlet=\\"checkIcon\\"></ng-container>\\n        </ng-container>\\n        <span *ngIf=\\"i === activeStep\\" class=\\"visually-hidden\\">{{\'it.core.active\' | translate}}</span>\\n      </li>\\n    </ul>\\n    <span class=\\"steppers-index\\" aria-hidden=\\"true\\">\\n      <ng-container\\n        *ngIf=\\"!isSteppersNumber; else showNumbers\\">{{(activeStep + 1) + \'/\' + steps?.length}}</ng-container>\\n      <ng-template #showNumbers>\\n        <span *ngFor=\\"let step of steps; let i = index\\" [class.active]=\\"i === activeStep\\">{{i + 1}}</span>\\n      </ng-template>\\n    </span>\\n  </div>\\n\\n  <div *ngIf=\\"steps?.get(activeStep) as step\\" class=\\"steppers-content\\" aria-live=\\"polite\\">\\n    <ng-container *ngTemplateOutlet=\\"step.htmlContent\\"></ng-container>\\n  </div>\\n\\n  <nav *ngIf=\\"isShowBackButton || isShowSaveButton || isShowForwardButton || isShowConfirmButton || !!progressStyle\\"\\n       class=\\"steppers-nav\\">\\n    <button *ngIf=\\"isShowBackButton\\" type=\\"button\\" itButton=\\"outline-primary\\" size=\\"sm\\" class=\\"steppers-btn-prev\\"\\n            (click)=\\"backClick.emit(activeStep)\\">\\n      <it-icon name=\\"chevron-left\\" color=\\"primary\\"></it-icon>\\n      {{\'it.core.back\' | translate}}\\n    </button>\\n\\n    <ng-container *ngIf=\\"!!progressStyle\\">\\n      <ul *ngIf=\\"progressStyle === \'dots\'; else progressBar\\" class=\\"steppers-dots\\">\\n        <li *ngFor=\\"let step of steps; let i = index\\" [class.done]=\\"i < activeStep\\">\\n          <span class=\\"visually-hidden\\">\\n            {{\'it.core.step-of\' | translate: { current: activeStep + 1, available: steps?.length } }}\\n            {{i < activeStep ? (\'- \' + (\'it.core.confirmed\' | translate)) : \'\'}}\\n          </span>\\n        </li>\\n      </ul>\\n\\n      <ng-template #progressBar>\\n        <div class=\\"steppers-progress\\">\\n          <it-progress-bar [color]=\\"progressColor\\" [value]=\\"(activeStep/(steps?.length||1)) * 100\\"></it-progress-bar>\\n        </div>\\n      </ng-template>\\n    </ng-container>\\n\\n    <button *ngIf=\\"isShowSaveButton\\" type=\\"button\\" itButton=\\"primary\\" size=\\"sm\\" class=\\"steppers-btn-save\\"\\n            [progress]=\\"isSaveLoading\\" [disabled]=\\"isSaveLoading\\" (click)=\\"saveClick.emit(activeStep)\\">\\n      {{\'it.general.save\' | translate}}\\n    </button>\\n\\n    <button *ngIf=\\"isShowForwardButton\\" type=\\"button\\" itButton=\\"outline-primary\\" size=\\"sm\\" class=\\"steppers-btn-next\\"\\n            (click)=\\"forwardClick.emit(activeStep)\\">\\n      {{\'it.core.forward\' | translate}}\\n      <it-icon name=\\"chevron-right\\" color=\\"primary\\"></it-icon>\\n    </button>\\n\\n    <button *ngIf=\\"isShowConfirmButton\\" type=\\"button\\" itButton=\\"primary\\" size=\\"sm\\"\\n            class=\\"steppers-btn-confirm d-lg-block\\"\\n            [progress]=\\"isConfirmLoading\\" [disabled]=\\"isConfirmLoading\\"\\n            (click)=\\"confirmClick.emit(activeStep)\\">\\n      {{\'it.core.confirm\' | translate}}\\n    </button>\\n  </nav>\\n</div>\\n\\n<ng-template #checkIcon>\\n  <it-icon name=\\"check\\" class=\\"steppers-success\\"></it-icon>\\n  <span class=\\"visually-hidden\\">{{\'it.core.confirmed\' | translate}}</span>\\n</ng-template>\\n"},{"name":"SteppersItemComponent","id":"component-SteppersItemComponent-a1983b31113da8448fae2b0c3a59c02d413cba0a14b1e87a23f95766387008461b5bf23952e3d5e6b7692944b2c1faef2ec139f446a3d5504c8dad3fdb8c7012","file":"projects/design-angular-kit/src/lib/components/core/steppers/steppers-item/steppers-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-steppers-item[label]","styleUrls":[],"styles":[],"templateUrl":["./steppers-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe labels present in the header steps can be preceded by an icon.\\n","description":"<p>The labels present in the header steps can be preceded by an icon.</p>\\n","line":20,"type":"IconName","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe labels present in the header steps\\n","description":"<p>The labels present in the header steps</p>\\n","line":15,"type":"string","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"htmlContent","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"<p>The content of step</p>\\n","line":25,"rawdescription":"\\n\\nThe content of step\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"TemplateRef"}],"modifierKind":[123]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { IconName } from \'../../../../interfaces/icon\';\\nimport { AbstractComponent } from \'../../../../abstracts/abstract.component\';\\n\\n@Component({\\n  selector: \'it-steppers-item[label]\',\\n  templateUrl: \'./steppers-item.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class SteppersItemComponent extends AbstractComponent {\\n\\n  /**\\n   * The labels present in the header steps\\n   */\\n  @Input() label!: string;\\n\\n  /**\\n   * The labels present in the header steps can be preceded by an icon.\\n   */\\n  @Input() icon?: IconName;\\n\\n  /**\\n   * The content of step\\n   */\\n  @ViewChild(TemplateRef) public htmlContent!: TemplateRef<any>;\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","templateData":"<ng-template>\\n  <ng-content></ng-content>\\n</ng-template>\\n"},{"name":"TabContainerComponent","id":"component-TabContainerComponent-6d511600adb30b71b96e431ce6cc2c1ba5e4884925bad232371e8560e249c8c5347b28a1336e052dc13ba8ac8b6da134f3a77ddb421b285cfa3ade6c08eb7def","file":"projects/design-angular-kit/src/lib/components/core/tab/tab-container/tab-container.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-tab-container","styleUrls":[],"styles":[],"templateUrl":["./tab-container.component.html"],"viewProviders":[],"inputsClass":[{"name":"auto","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTabs automatically occupy the entire available width\\n","description":"<p>Tabs automatically occupy the entire available width</p>\\n","line":27,"type":"BooleanInput","decorators":[]},{"name":"dark","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDark style\\n","description":"<p>Dark style</p>\\n","line":37,"type":"BooleanInput","decorators":[]},{"name":"iconText","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo obtain the correct margin between text and icon in the horizontally developed tab\\n","description":"<p>To obtain the correct margin between text and icon in the horizontally developed tab</p>\\n","line":32,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"tabNavLinks","deprecated":false,"deprecationMessage":"","type":"QueryList<ElementRef<HTMLAnchorElement>>","optional":true,"description":"","line":44,"decorators":[{"name":"ViewChildren","stringifiedArguments":"\'tabNavLinks\'"}],"modifierKind":[121]},{"name":"tabs","deprecated":false,"deprecationMessage":"","type":"QueryList<TabItemComponent>","optional":true,"description":"<p>The tab items</p>\\n","line":42,"rawdescription":"\\n\\nThe tab items\\n","decorators":[{"name":"ContentChildren","stringifiedArguments":"TabItemComponent"}]},{"name":"tabSubscriptions","deprecated":false,"deprecationMessage":"","type":"Array<Subscription>","optional":true,"description":"","line":46,"modifierKind":[121]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"isTrueBooleanInput","args":[{"name":"booleanInput","type":"BooleanInput","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"booleanInput","type":"BooleanInput","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":""},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ContentChildren,\\n  ElementRef,\\n  Input,\\n  OnDestroy,\\n  QueryList,\\n  ViewChildren\\n} from \'@angular/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../../utils/boolean-input\';\\nimport { TabItemComponent } from \'../tab-item/tab-item.component\';\\nimport { of, startWith, Subscription, switchMap, tap } from \'rxjs\';\\nimport { Tab } from \'bootstrap-italia\';\\nimport { AbstractComponent } from \'../../../../abstracts/abstract.component\';\\n\\n@Component({\\n  selector: \'it-tab-container\',\\n  templateUrl: \'./tab-container.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class TabContainerComponent extends AbstractComponent implements OnDestroy {\\n\\n  /**\\n   * Tabs automatically occupy the entire available width\\n   */\\n  @Input() auto?: BooleanInput;\\n\\n  /**\\n   * To obtain the correct margin between text and icon in the horizontally developed tab\\n   */\\n  @Input() iconText?: BooleanInput;\\n\\n  /**\\n   * Dark style\\n   */\\n  @Input() dark?: BooleanInput;\\n\\n  /**\\n   * The tab items\\n   */\\n  @ContentChildren(TabItemComponent) tabs?: QueryList<TabItemComponent>;\\n\\n  @ViewChildren(\'tabNavLinks\') private tabNavLinks?: QueryList<ElementRef<HTMLAnchorElement>>;\\n\\n  private tabSubscriptions?: Array<Subscription>;\\n\\n  isTrueBooleanInput(booleanInput?: BooleanInput): boolean {\\n    return isTrueBooleanInput(booleanInput);\\n  }\\n\\n  override ngAfterViewInit(): void {\\n    super.ngAfterViewInit();\\n\\n    this.tabs?.changes.pipe( // When tabs changes (dynamic add/remove)\\n      startWith(undefined),\\n      tap(() => {\\n        this.tabSubscriptions?.forEach(sub => sub.unsubscribe()); // Remove old subscriptions\\n        this.tabSubscriptions = this.tabs?.map(tab => tab.valueChanges.subscribe(() => {\\n          this._changeDetectorRef.detectChanges(); // DetectChanges when tab-item attributes changes\\n        }));\\n        this._changeDetectorRef.detectChanges(); // Force update html render\\n      }),\\n      switchMap(() => this.tabNavLinks?.changes.pipe(startWith(undefined)) || of(undefined))\\n    ).subscribe(() => {\\n      // Init tabs from bootstrap-italia\\n      this.tabNavLinks?.forEach(tabNavLink => {\\n        const triggerEl = tabNavLink.nativeElement,\\n          tabTrigger = Tab.getOrCreateInstance(triggerEl);\\n\\n        if (triggerEl.getAttribute(\'tab-listener\') !== \'true\') {\\n          triggerEl.addEventListener(\'click\', event => {\\n            event.preventDefault();\\n            tabTrigger.show();\\n          });\\n          triggerEl.setAttribute(\'tab-listener\', \'true\'); // Prevents multiple insertion of the listener\\n        }\\n      });\\n    });\\n  }\\n\\n  ngOnDestroy(): void {\\n    this.tabSubscriptions?.forEach(sub => sub.unsubscribe());\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","implements":["OnDestroy"],"templateData":"<ul class=\\"nav nav-tabs\\"\\n    [class.auto]=\\"isTrueBooleanInput(auto)\\"\\n    [class.nav-tabs-icon-text]=\\"isTrueBooleanInput(iconText)\\"\\n    [class.nav-dark]=\\"isTrueBooleanInput(dark)\\"\\n    role=\\"tablist\\">\\n\\n  <li class=\\"nav-item\\" *ngFor=\\"let tab of tabs\\">\\n    <a #tabNavLinks [id]=\\"tab.id+\'-tab-link\'\\"\\n       role=\\"tab\\"\\n       class=\\"nav-link\\"\\n       [class.active]=\\"isTrueBooleanInput(tab.active)\\"\\n       [class.disabled]=\\"isTrueBooleanInput(tab.disabled)\\"\\n       [attr.href]=\\"\'#\'+tab.id+\'-tab\'\\"\\n       [attr.aria-controls]=\\"tab.id+\'-tab\'\\">\\n      <it-icon *ngIf=\\"tab.icon\\" [name]=\\"tab.icon\\" class=\\"me-2\\"></it-icon>\\n      {{tab.label}}\\n    </a>\\n  </li>\\n</ul>\\n\\n<div class=\\"tab-content\\">\\n  <div *ngFor=\\"let tab of tabs\\"\\n       [id]=\\"tab.id+\'-tab\'\\"\\n       class=\\"tab-pane p-4 fade {{tab.class ?? \'\'}}\\"\\n       [class.active]=\\"isTrueBooleanInput(tab.active)\\"\\n       [class.show]=\\"isTrueBooleanInput(tab.active)\\"\\n       role=\\"tabpanel\\"\\n       [attr.aria-labelledby]=\\"tab.id+\'-tab-link\'\\">\\n    <ng-container *ngTemplateOutlet=\\"tab.htmlContent\\"></ng-container>\\n  </div>\\n</div>\\n"},{"name":"TabItemComponent","id":"component-TabItemComponent-864c3d916645bc133d2d8af9b22806f72d1a9d73b0dbf7834403e2f0b75c89165f79ab972679b1ab0dc14e31a716a8deb8a6e951c20576704497790bc2ea746b","file":"projects/design-angular-kit/src/lib/components/core/tab/tab-item/tab-item.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-tab-item","styleUrls":[],"styles":[],"templateUrl":["./tab-item.component.html"],"viewProviders":[],"inputsClass":[{"name":"active","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDefault active tab\\n","description":"<p>Default active tab</p>\\n","line":26,"type":"BooleanInput","decorators":[]},{"name":"class","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nCustom class\\n","description":"<p>Custom class</p>\\n","line":36,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nDefault disabled tab\\n","description":"<p>Default disabled tab</p>\\n","line":31,"type":"BooleanInput","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe icon name\\n","description":"<p>The icon name</p>\\n","line":21,"type":"IconName","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe tab label\\n","description":"<p>The tab label</p>\\n","line":16,"type":"string","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"htmlContent","deprecated":false,"deprecationMessage":"","type":"TemplateRef<any>","optional":false,"description":"<p>The content of tab</p>\\n","line":41,"rawdescription":"\\n\\nThe content of tab\\n","decorators":[{"name":"ViewChild","stringifiedArguments":"TemplateRef"}],"modifierKind":[123]},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewChild } from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../../abstracts/abstract.component\';\\nimport { BooleanInput } from \'../../../../utils/boolean-input\';\\nimport { IconName } from \'../../../../interfaces/icon\';\\n\\n@Component({\\n  selector: \'it-tab-item\',\\n  templateUrl: \'./tab-item.component.html\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class TabItemComponent extends AbstractComponent {\\n\\n  /**\\n   * The tab label\\n   */\\n  @Input() label?: string;\\n\\n  /**\\n   * The icon name\\n   */\\n  @Input() icon?: IconName;\\n\\n  /**\\n   * Default active tab\\n   */\\n  @Input() active?: BooleanInput;\\n\\n  /**\\n   * Default disabled tab\\n   */\\n  @Input() disabled?: BooleanInput;\\n\\n  /**\\n   * Custom class\\n   */\\n  @Input() class: string = \'\';\\n\\n  /**\\n   * The content of tab\\n   */\\n  @ViewChild(TemplateRef) public htmlContent!: TemplateRef<any>;\\n\\n  override ngAfterViewInit() {\\n    super.ngAfterViewInit();\\n    this._renderer.removeAttribute(this._elementRef.nativeElement, \'class\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","templateData":"<ng-template>\\n  <ng-content></ng-content>\\n</ng-template>\\n"},{"name":"TableComponent","id":"component-TableComponent-d163fc38b92f9d2e9185da9ee5294a721d9dde40fd521112ab5fc0a5dc230d9638059e9dbae842a14ffd9f1bfaf1b830a579e4c5d7fac0a6ed789147315e29ee","file":"projects/design-angular-kit/src/lib/components/core/table/table.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-table","styleUrls":["./table.component.scss"],"styles":[],"templateUrl":["./table.component.html"],"viewProviders":[],"inputsClass":[{"name":"alignment","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse vertical alignment classes to realign where needed.\\n","description":"<p>Use vertical alignment classes to realign where needed.</p>\\n","line":26,"type":"VerticalAlignment","decorators":[]},{"name":"bordered","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd .table-bordered to have borders on all sides of the table and on all cells.\\n","description":"<p>Add .table-bordered to have borders on all sides of the table and on all cells.</p>\\n","line":41,"type":"BooleanInput","decorators":[]},{"name":"borderless","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the .table-borderless class for a borderless table.\\n","description":"<p>Add the .table-borderless class for a borderless table.</p>\\n","line":46,"type":"BooleanInput","decorators":[]},{"name":"captionTop","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTo render the <caption> on top of the table\\n","description":"<p>To render the <caption> on top of the table</p>\\n","line":56,"type":"BooleanInput","decorators":[]},{"name":"color","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nTable color\\n","description":"<p>Table color</p>\\n","line":16,"type":"TableColor","decorators":[]},{"name":"compact","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd .table-sm to make tables more compact by halving the cell padding.\\n","description":"<p>Add .table-sm to make tables more compact by halving the cell padding.</p>\\n","line":51,"type":"BooleanInput","decorators":[]},{"name":"headColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHead table color\\n","description":"<p>Head table color</p>\\n","line":21,"type":"TableHeadColor","decorators":[]},{"name":"hover","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd .table-hover to enable hover state on table rows contained in <tbody>.\\n","description":"<p>Add .table-hover to enable hover state on table rows contained in <tbody>.</p>\\n","line":36,"type":"BooleanInput","decorators":[]},{"name":"responsive","defaultValue":"\'responsive\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":1532,"end":1555,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":1533,"end":1540,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>responsive</p>\\n"}],"rawdescription":"\\n\\nResponsive tables allow you to scroll tables horizontally with ease.\\n","description":"<p>Responsive tables allow you to scroll tables horizontally with ease.</p>\\n","line":62,"type":"TableResponsive","decorators":[]},{"name":"striped","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUse .table-striped to add zebra stripes to each table row contained in <tbody>.\\n","description":"<p>Use .table-striped to add zebra stripes to each table row contained in <tbody>.</p>\\n","line":31,"type":"BooleanInput","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { TableColor, TableHeadColor, TableResponsive, VerticalAlignment } from \'../../../interfaces/core\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\n\\n@Component({\\n  selector: \'it-table\',\\n  templateUrl: \'./table.component.html\',\\n  styleUrls: [\'./table.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class TableComponent {\\n\\n  /**\\n   * Table color\\n   */\\n  @Input() color?: TableColor;\\n\\n  /**\\n   * Head table color\\n   */\\n  @Input() headColor?: TableHeadColor;\\n\\n  /**\\n   * Use vertical alignment classes to realign where needed.\\n   */\\n  @Input() alignment?: VerticalAlignment;\\n\\n  /**\\n   * Use .table-striped to add zebra stripes to each table row contained in <tbody>.\\n   */\\n  @Input() striped?: BooleanInput;\\n\\n  /**\\n   * Add .table-hover to enable hover state on table rows contained in <tbody>.\\n   */\\n  @Input() hover?: BooleanInput;\\n\\n  /**\\n   * Add .table-bordered to have borders on all sides of the table and on all cells.\\n   */\\n  @Input() bordered?: BooleanInput;\\n\\n  /**\\n   * Add the .table-borderless class for a borderless table.\\n   */\\n  @Input() borderless?: BooleanInput;\\n\\n  /**\\n   * Add .table-sm to make tables more compact by halving the cell padding.\\n   */\\n  @Input() compact?: BooleanInput;\\n\\n  /**\\n   * To render the <caption> on top of the table\\n   */\\n  @Input() captionTop?: BooleanInput;\\n\\n  /**\\n   * Responsive tables allow you to scroll tables horizontally with ease.\\n   * @default responsive\\n   */\\n  @Input() responsive: TableResponsive = \'responsive\';\\n\\n\\n  get isStriped(): boolean {\\n    return isTrueBooleanInput(this.striped);\\n  }\\n\\n  get isHover(): boolean {\\n    return isTrueBooleanInput(this.hover);\\n  }\\n\\n  get isBordered(): boolean {\\n    return isTrueBooleanInput(this.bordered);\\n  }\\n\\n  get isBorderless(): boolean {\\n    return isTrueBooleanInput(this.borderless);\\n  }\\n\\n  get isCompact(): boolean {\\n    return isTrueBooleanInput(this.compact);\\n  }\\n\\n  get isCaptionTop(): boolean {\\n    return isTrueBooleanInput(this.captionTop);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"caption:empty {\\n  display: none;\\n}\\n\\ncaption:empty ~ thead {\\n  border-top: none !important;\\n}\\n","styleUrl":"./table.component.scss"}],"stylesData":"","accessors":{"isStriped":{"name":"isStriped","getSignature":{"name":"isStriped","type":"boolean","returnType":"boolean","line":65}},"isHover":{"name":"isHover","getSignature":{"name":"isHover","type":"boolean","returnType":"boolean","line":69}},"isBordered":{"name":"isBordered","getSignature":{"name":"isBordered","type":"boolean","returnType":"boolean","line":73}},"isBorderless":{"name":"isBorderless","getSignature":{"name":"isBorderless","type":"boolean","returnType":"boolean","line":77}},"isCompact":{"name":"isCompact","getSignature":{"name":"isCompact","type":"boolean","returnType":"boolean","line":81}},"isCaptionTop":{"name":"isCaptionTop","getSignature":{"name":"isCaptionTop","type":"boolean","returnType":"boolean","line":85}}},"templateData":"<div [class]=\\"responsive ? \'table-\' + responsive : undefined\\">\\n  <table class=\\"table{{color ? \' table-\' + color : \'\' }}{{alignment ? \' \' + alignment : \'\' }}\\"\\n         [class.table-striped]=\\"isStriped\\"\\n         [class.table-hover]=\\"isHover\\"\\n         [class.table-bordered]=\\"isBordered\\"\\n         [class.table-borderless]=\\"isBorderless\\"\\n         [class.table-sm]=\\"isCompact\\"\\n         [class.caption-top]=\\"isCaptionTop\\">\\n    <caption>\\n      <ng-content select=\\"[caption]\\"></ng-content>\\n    </caption>\\n    <thead [class]=\\"headColor ? \'table-\' + headColor : undefined\\">\\n    <ng-content select=\\"[thead]\\"></ng-content>\\n    </thead>\\n    <tbody>\\n    <ng-content select=\\"[tbody]\\"></ng-content>\\n    </tbody>\\n    <tfoot>\\n    <ng-content select=\\"[tfoot]\\"></ng-content>\\n    </tfoot>\\n  </table>\\n</div>\\n"},{"name":"TextareaComponent","id":"component-TextareaComponent-08b7c31f84cf31c413996d7c8da0b2ac63fab25741b7f425a398ac8846466bae72f5fb7afcd57dc762c9200c7a647b8ab7feab61d75d5dc1b2f2d3e14c45a66b","file":"projects/design-angular-kit/src/lib/components/form/textarea/textarea.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-textarea","styleUrls":["./textarea.component.scss"],"styles":[],"templateUrl":["./textarea.component.html"],"viewProviders":[],"inputsClass":[{"name":"description","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe input description\\n","description":"<p>The input description</p>\\n","line":27,"type":"string","decorators":[]},{"name":"placeholder","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe textarea placeholder\\n","description":"<p>The textarea placeholder</p>\\n","line":22,"type":"string","decorators":[]},{"name":"rows","defaultValue":"3","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":478,"end":492,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":479,"end":486,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p>3</p>\\n"}],"rawdescription":"\\n\\nTextarea Rows\\n","description":"<p>Textarea Rows</p>\\n","line":17,"type":"number","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nSet the disabled state\\n","description":"<p>Set the disabled state</p>\\n","line":29,"type":"BooleanInput","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"label","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe label of form control\\n","description":"<p>The label of form control</p>\\n","line":14,"type":"string","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"validationMode","defaultValue":"\'only-invalid\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":981,"end":1049,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":982,"end":989,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<p><b>only-invalid</b>: Show only invalid validation color</p>\\n"}],"rawdescription":"\\n\\nValidation color display mode (validation triggered if field is touched or not pristine)\\n- <b>true</b>: Always show the validation color\\n- <b>false</b>: Never show validation color\\n- <b>only-valid</b>: Show only valid validation color\\n- <b>only-invalid</b>: Show only invalid validation color\\n","description":"<p>Validation color display mode (validation triggered if field is touched or not pristine)</p>\\n<ul>\\n<li><b>true</b>: Always show the validation color</li>\\n<li><b>false</b>: Never show validation color</li>\\n<li><b>only-valid</b>: Show only valid validation color</li>\\n<li><b>only-invalid</b>: Show only invalid validation color</li>\\n</ul>\\n","line":24,"type":"BooleanInput | \\"only-valid\\" | \\"only-invalid\\"","decorators":[],"inheritance":{"file":"AbstractFormComponent"}},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"control","deprecated":false,"deprecationMessage":"","type":"FormControl","optional":false,"description":"<p>Internal form control</p>\\n","line":36,"rawdescription":"\\n\\nInternal form control\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"onChange","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":92,"inheritance":{"file":"AbstractFormComponent"}},{"name":"onTouched","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"inheritance":{"file":"AbstractFormComponent"}},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"addValidators","args":[{"name":"validators","type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nAdd the validators in control and parent control\\n","description":"<p>Add the validators in control and parent control</p>\\n","modifierKind":[122],"jsdoctags":[{"name":{"pos":4451,"end":4461,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"validators"},"type":"ValidatorFn | ValidatorFn[]","deprecated":false,"deprecationMessage":"","tagName":{"pos":4445,"end":4450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the validators</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"any","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.\\n","description":"<p>Reports error data for the control with the given path.\\nto the control that should be queried for errors.\\nnull is returned.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5714,"end":5723,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5708,"end":5713,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5767,"end":5771,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5761,"end":5766,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5910,"end":5917,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>error data for that particular error. If the control or error is not present,\\nnull is returned.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"hasError","args":[{"name":"errorCode","type":"string","deprecated":false,"deprecationMessage":""},{"name":"path","type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"boolean","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.\\n","description":"<p>Reports whether the control with the given path has the error specified. <br/>\\nIf the control is not present, false is returned.\\nto the control that should be queried for errors.</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":5123,"end":5132,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"errorCode"},"type":"string","deprecated":false,"deprecationMessage":"","tagName":{"pos":5117,"end":5122,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>The code of the error to check</p>\\n"},{"name":{"pos":5176,"end":5180,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"path"},"type":"Array<string | number> | string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"pos":5170,"end":5175,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>A list of control names that designates how to move from the current control\\nto the control that should be queried for errors.</p>\\n"},{"tagName":{"pos":5319,"end":5326,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"returns"},"comment":"<p>whether the given error is present in the control at the given path.</p>\\n"}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"markAsTouched","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nMark the control as touched\\n","description":"<p>Mark the control as touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngDoCheck","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired to check if form control is touched\\n","description":"<p>Fired to check if form control is touched</p>\\n","inheritance":{"file":"AbstractFormComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnChange","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"registerOnTouched","args":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fn","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"setDisabledState","args":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isDisabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"writeValue","args":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"T","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFormComponent"}},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, Input } from \'@angular/core\';\\nimport { AbstractFormComponent } from \'../../../abstracts/abstract-form.component\';\\nimport { Observable } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-textarea\',\\n  templateUrl: \'./textarea.component.html\',\\n  styleUrls: [\'./textarea.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class TextareaComponent extends AbstractFormComponent<string> {\\n\\n  /**\\n   * Textarea Rows\\n   * @default 3\\n   */\\n  @Input() rows?: number = 3;\\n\\n  /**\\n   * The textarea placeholder\\n   */\\n  @Input() placeholder: string = \'\';\\n\\n  /**\\n   * The input description\\n   */\\n  @Input() description?: string;\\n\\n  /**\\n   * Return the invalid message string from TranslateService\\n   */\\n  override get invalidMessage(): Observable<string> {\\n    if (this.control.hasError(\'maxlength\')) {\\n      const error = this.getError(\'maxlength\');\\n      return this._translateService.get(\'it.errors.max-length-invalid\', { max: error.requiredLength });\\n    }\\n    if (this.control.hasError(\'pattern\')) {\\n      const error = this.getError(\'pattern\');\\n      return this._translateService.get(\'it.errors.pattern-invalid\', { pattern: error.requiredPattern });\\n    }\\n\\n    return super.invalidMessage;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"@import \'bootstrap-italia/src/scss/functions\';\\n@import \'bootstrap-italia/src/scss/utilities/colors_vars\';\\n\\ntextarea {\\n  &.is-invalid {\\n    border-color: $danger;\\n  }\\n\\n  //&.is-valid {\\n  //  border-color: $success;\\n  //}\\n}\\n","styleUrl":"./textarea.component.scss"}],"stylesData":"","extends":"AbstractFormComponent","accessors":{"invalidMessage":{"name":"invalidMessage","getSignature":{"name":"invalidMessage","type":"","returnType":"Observable<string>","line":32,"rawdescription":"\\n\\nReturn the invalid message string from TranslateService\\n","description":"<p>Return the invalid message string from TranslateService</p>\\n"}}},"templateData":"<div class=\\"form-group\\">\\n  <label *ngIf=\\"label\\" [for]=\\"id\\" [class.active]=\\"!!control.value || !!placeholder\\">{{label}}</label>\\n  <textarea\\n    [id]=\\"id\\"\\n    [rows]=\\"rows\\"\\n    [class.is-invalid]=\\"isInvalid\\"\\n    [class.is-valid]=\\"isValid\\"\\n    [placeholder]=\\"placeholder\\"\\n    [formControl]=\\"control\\"\\n    (blur)=\\"markAsTouched()\\"></textarea>\\n\\n  <small *ngIf=\\"description\\" [id]=\\"id + \'-description\'\\" class=\\"form-text\\">{{description}}</small>\\n  <div *ngIf=\\"isInvalid\\" class=\\"form-feedback just-validate-error-label\\" [id]=\\"id + \'-error\'\\">\\n    <div #customError><ng-content select=\\"[error]\\"></ng-content></div>\\n    <ng-container *ngIf=\\"!customError.hasChildNodes()\\">{{invalidMessage | async}}</ng-container>\\n  </div>\\n</div>\\n"},{"name":"UploadDragDropComponent","id":"component-UploadDragDropComponent-393e863fc3a05591139bb2d540d99713cff24a30b032105cd42cf9cb8df21c31eda8e2e9a7b343ff1a423649a4d29ba8528c89902e312f497c79da74249a2984","file":"projects/design-angular-kit/src/lib/components/form/upload-drag-drop/upload-drag-drop.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"exportAs":"itUploadDragDrop","inputs":[],"outputs":[],"providers":[],"selector":"it-upload-drag-drop","styleUrls":[],"styles":[],"templateUrl":["./upload-drag-drop.component.html"],"viewProviders":[],"inputsClass":[{"name":"accept","defaultValue":"\'*\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":791,"end":831,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":792,"end":799,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>application/pdf,image/png</p>\\n"},{"pos":831,"end":845,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":832,"end":839,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<ul>\\n<li></li>\\n</ul>\\n"}],"rawdescription":"\\n\\nThe accepted file type to upload <br>\\nPossible values: <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\\">MIME Types</a> separated by comma\\n```html\\n```","description":"<p>The accepted file type to upload <br>\\nPossible values: <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\\">MIME Types</a> separated by comma</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\"></code></pre></div>","line":29,"type":"string","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"fileStartUpload","defaultValue":"new EventEmitter<File>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when file start to upload\\n","description":"<p>Fired when file start to upload</p>\\n","line":34,"type":"EventEmitter"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"donut","deprecated":false,"deprecationMessage":"","type":"ProgressDonut","optional":true,"description":"","line":40},{"name":"donutElement","deprecated":false,"deprecationMessage":"","type":"ElementRef<HTMLDivElement>","optional":true,"description":"","line":42,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'donutElement\'"}],"modifierKind":[121]},{"name":"extension","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":45},{"name":"filename","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":44},{"name":"fileSize","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":46},{"name":"isDragover","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"isSuccess","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":38},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"inheritance":{"file":"AbstractComponent"}},{"name":"onDragLeave","args":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'dragleave\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDragOver","args":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'dragover\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDrop","args":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"HostListener","stringifiedArguments":"\'drop\', [\'$event\']"}],"modifierKind":[123],"jsdoctags":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onLoadFile","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn load file from input\\n","description":"<p>On load file from input</p>\\n","jsdoctags":[{"name":{"pos":2216,"end":2221,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"pos":2210,"end":2215,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"progress","args":[{"name":"value","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nPercentage of upload\\n","description":"<p>Percentage of upload</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2896,"end":2901,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"value"},"type":"number","deprecated":false,"deprecationMessage":"","tagName":{"pos":2890,"end":2895,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":"<p>the percentage [0 - 100]</p>\\n"}]},{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nReset file uploader\\n","description":"<p>Reset file uploader</p>\\n","modifierKind":[123]},{"name":"start","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nStart the upload file\\n","description":"<p>Start the upload file</p>\\n","modifierKind":[123],"jsdoctags":[{"name":{"pos":2446,"end":2450,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"file"},"type":"File","deprecated":false,"deprecationMessage":"","tagName":{"pos":2440,"end":2445,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"success","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nUpload success\\n","description":"<p>Upload success</p>\\n","modifierKind":[123]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[{"name":"dragleave","args":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":66},{"name":"dragover","args":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":57},{"name":"drop","args":[{"name":"evt","type":"DragEvent","deprecated":false,"deprecationMessage":""}],"argsDecorator":["$event"],"deprecated":false,"deprecationMessage":"","line":74}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import {\\n  ChangeDetectionStrategy,\\n  Component,\\n  ElementRef,\\n  EventEmitter,\\n  HostListener,\\n  Input,\\n  Output,\\n  ViewChild\\n} from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { FileUtils } from \'../../../utils/file-utils\';\\nimport { ProgressDonut } from \'bootstrap-italia\';\\n\\n@Component({\\n  selector: \'it-upload-drag-drop\',\\n  templateUrl: \'./upload-drag-drop.component.html\',\\n  exportAs: \'itUploadDragDrop\',\\n  changeDetection: ChangeDetectionStrategy.OnPush\\n})\\nexport class UploadDragDropComponent extends AbstractComponent {\\n\\n  /**\\n   * The accepted file type to upload <br>\\n   * Possible values: <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\\">MIME Types</a> separated by comma\\n   * @example application/pdf,image/png\\n   * @default *\\n   */\\n  @Input() accept: string = \'*\';\\n\\n  /**\\n   * Fired when file start to upload\\n   */\\n  @Output() fileStartUpload = new EventEmitter<File>();\\n\\n  isDragover: boolean = false;\\n  isLoading: boolean = false;\\n  isSuccess: boolean = false;\\n\\n  donut?: ProgressDonut;\\n\\n  @ViewChild(\'donutElement\') private donutElement?: ElementRef<HTMLDivElement>;\\n\\n  filename?: string;\\n  extension?: string;\\n  fileSize?: string;\\n\\n  override ngAfterViewInit(): void {\\n    super.ngAfterViewInit();\\n    if (this.donutElement) {\\n      this.donut = ProgressDonut.getOrCreateInstance(this.donutElement.nativeElement);\\n    }\\n  }\\n\\n  // Dragover listener\\n  @HostListener(\'dragover\', [\'$event\'])\\n  public onDragOver(evt: DragEvent): void {\\n    evt.preventDefault();\\n    evt.stopPropagation();\\n    this.isDragover = !this.isLoading;\\n  }\\n\\n\\n  // Dragleave listener\\n  @HostListener(\'dragleave\', [\'$event\'])\\n  public onDragLeave(evt: DragEvent): void {\\n    evt.preventDefault();\\n    evt.stopPropagation();\\n    this.isDragover = false;\\n  }\\n\\n  // Drop leave listener\\n  @HostListener(\'drop\', [\'$event\'])\\n  public onDrop(evt: DragEvent): void {\\n    evt.preventDefault();\\n    evt.stopPropagation();\\n\\n    this.isDragover = false;\\n    const files = evt.dataTransfer?.files;\\n    if (this.isLoading || !files?.length) {\\n      return;\\n    }\\n    this.start(files[0]);\\n  }\\n\\n  /**\\n   * On load file from input\\n   * @param event\\n   */\\n  onLoadFile(event: Event): void {\\n    const files = (event.target as HTMLInputElement)?.files;\\n    if (!files?.length) {\\n      return;\\n    }\\n    this.start(files[0]);\\n  }\\n\\n  /**\\n   * Start the upload file\\n   * @param file\\n   */\\n  public start(file: File): void {\\n    if (this.accept !== \'*\' && !this.accept.includes(file.type)) {\\n      return;\\n    }\\n\\n    this.reset();\\n    this.isLoading = true;\\n\\n    const splitName = file.name.split(\'.\');\\n    this.filename = splitName[0];\\n    this.extension = splitName[1]?.toUpperCase();\\n    this.fileSize = FileUtils.getFileSizeString(file);\\n\\n    this.fileStartUpload.emit(file);\\n  }\\n\\n  /**\\n   * Percentage of upload\\n   * @param value the percentage [0 - 100]\\n   */\\n  public progress(value: number) {\\n    if (!this.isLoading) {\\n      return;\\n    }\\n\\n    if (value >= 100) {\\n      this.success();\\n    } else {\\n      this.donut?.set(((value < 0) ? 0 : value) / 100);\\n    }\\n  }\\n\\n  /**\\n   * Upload success\\n   */\\n  public success(): void {\\n    this.isLoading = false;\\n    this.isSuccess = true;\\n    this._changeDetectorRef.detectChanges();\\n  }\\n\\n  /**\\n   * Reset file uploader\\n   */\\n  public reset(): void {\\n    this.isLoading = false;\\n    this.isSuccess = false;\\n    this.filename = this.extension = this.fileSize = undefined;\\n    this.donut?.set(0);\\n    this._changeDetectorRef.detectChanges();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","templateData":"<div class=\\"upload-dragdrop\\" [class.dragover]=\\"isDragover\\" [class.loading]=\\"isLoading\\" [class.success]=\\"isSuccess\\">\\n  <div class=\\"upload-dragdrop-image\\">\\n    <img src=\\"/bootstrap-italia/dist/assets/upload-drag-drop-icon.svg\\" alt=\\"drag-drop-icon\\" aria-hidden=\\"true\\">\\n    <div class=\\"upload-dragdrop-loading\\">\\n      <div class=\\"progress-donut\\" #donutElement></div>\\n    </div>\\n    <div class=\\"upload-dragdrop-success\\">\\n      <it-icon name=\\"check\\"></it-icon>\\n    </div>\\n  </div>\\n  <div class=\\"upload-dragdrop-text\\">\\n    <p class=\\"upload-dragdrop-weight\\">\\n      <it-icon name=\\"file\\" size=\\"xs\\"></it-icon>\\n      {{extension}} ({{fileSize}})\\n    </p>\\n    <h5>{{filename || (\'it.form.upload-drag-file\'|translate)}}</h5>\\n    <p *ngIf=\\"isLoading\\">{{\'it.form.upload-loading\'|translate}}</p>\\n    <p *ngIf=\\"isSuccess\\">{{\'it.form.upload-complete\'|translate}}</p>\\n    <p *ngIf=\\"!isLoading && !isSuccess\\">{{\'it.form.upload-or\'|translate}}\\n      <input type=\\"file\\" [id]=\\"id\\" class=\\"upload-dragdrop-input\\" [accept]=\\"accept\\" (change)=\\"onLoadFile($event)\\"/>\\n      <label [for]=\\"id\\">{{\'it.form.upload-select-device\'|translate}}</label>\\n    </p>\\n  </div>\\n</div>\\n"},{"name":"UploadFileListComponent","id":"component-UploadFileListComponent-df0d5875d55664f8f826d89d6302e772cd87b7abfb7d69e3cb0b26fae4196d043ea9632e5a4561e328aa76c1e8b37bc3ba02076c663c401b2477b964106c0f8f","file":"projects/design-angular-kit/src/lib/components/form/upload-file-list/upload-file-list.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"it-upload-file-list[fileList]","styleUrls":[],"styles":[],"templateUrl":["./upload-file-list.component.html"],"viewProviders":[],"inputsClass":[{"name":"accept","defaultValue":"\'*\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":942,"end":982,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":943,"end":950,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"example"},"comment":"<p>application/pdf,image/png</p>\\n"},{"pos":982,"end":996,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":325,"tagName":{"pos":983,"end":990,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":88,"escapedText":"default"},"comment":"<ul>\\n<li></li>\\n</ul>\\n"}],"rawdescription":"\\n\\nThe accepted file type to upload <br>\\nPossible values: <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\\">MIME Types</a> separated by comma\\n```html\\n```","description":"<p>The accepted file type to upload <br>\\nPossible values: <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\\">MIME Types</a> separated by comma</p>\\n<div><pre class=\\"line-numbers\\"><code class=\\"language-html\\"></code></pre></div>","line":25,"type":"string","decorators":[]},{"name":"fileList","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe list of files to show in list\\n","description":"<p>The list of files to show in list</p>\\n","line":17,"type":"Array<UploadFileListItem>","decorators":[]},{"name":"hideLoadButton","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHide the load button\\n","description":"<p>Hide the load button</p>\\n","line":40,"type":"BooleanInput","decorators":[]},{"name":"images","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf is file list image\\n","description":"<p>If is file list image</p>\\n","line":35,"type":"BooleanInput","decorators":[]},{"name":"multiple","defaultValue":"true","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIf upload multiple files\\n","description":"<p>If upload multiple files</p>\\n","line":30,"type":"BooleanInput","decorators":[]},{"name":"id","defaultValue":"this.getDefaultId()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe element ID\\n","description":"<p>The element ID</p>\\n","line":21,"type":"string","decorators":[],"inheritance":{"file":"AbstractComponent"}}],"outputsClass":[{"name":"deleteItem","defaultValue":"new EventEmitter<UploadFileListItem>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired on delete item button click\\n","description":"<p>Fired on delete item button click</p>\\n","line":50,"type":"EventEmitter<UploadFileListItem>"},{"name":"uploadFiles","defaultValue":"new EventEmitter<FileList>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when upload new files\\n","description":"<p>Fired when upload new files</p>\\n","line":45,"type":"EventEmitter<FileList>"},{"name":"valueChanges","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nFired when component input attributes was changed\\n","description":"<p>Fired when component input attributes was changed</p>\\n","line":26,"type":"EventEmitter<void>","inheritance":{"file":"AbstractComponent"}}],"propertiesClass":[{"name":"previewImages","defaultValue":"new Map<number, string>()","deprecated":false,"deprecationMessage":"","type":"Map<number | string>","optional":false,"description":"<p>Cache to preview image</p>\\n","line":55,"rawdescription":"\\n\\nCache to preview image\\n"},{"name":"_changeDetectorRef","deprecated":false,"deprecationMessage":"","type":"ChangeDetectorRef","optional":false,"description":"","line":37,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_elementRef","deprecated":false,"deprecationMessage":"","type":"ElementRef","optional":false,"description":"","line":36,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"_renderer","deprecated":false,"deprecationMessage":"","type":"Renderer2","optional":false,"description":"","line":35,"modifierKind":[122,144],"inheritance":{"file":"AbstractComponent"}},{"name":"instances","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"<p>Counter of active instances</p>\\n","line":32,"rawdescription":"\\n\\nCounter of active instances\\n","modifierKind":[121,124],"jsdoctags":[{"pos":537,"end":549,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":332,"tagName":{"pos":538,"end":545,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}}],"methodsClass":[{"name":"getFileSize","args":[{"name":"file","type":"File","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGet the file size string\\n","description":"<p>Get the file size string</p>\\n","jsdoctags":[{"name":{"pos":2807,"end":2811,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"file"},"type":"File","deprecated":false,"deprecationMessage":"","tagName":{"pos":2801,"end":2806,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"ngOnChanges","args":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[158],"jsdoctags":[{"name":"changes","type":"SimpleChanges","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":""},{"name":"onLoadFiles","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOn load file from input\\n","description":"<p>On load file from input</p>\\n","jsdoctags":[{"name":{"pos":2556,"end":2561,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"event"},"type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"pos":2550,"end":2555,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"escapedText":"param"},"comment":""}]},{"name":"getDefaultId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nGenerate unique id for components\\n","description":"<p>Generate unique id for components</p>\\n","modifierKind":[121],"jsdoctags":[{"tagName":{"pos":1252,"end":1259,"flags":4227072,"modifierFlagsCache":0,"transformFlags":0,"kind":79,"originalKeywordKind":121,"escapedText":"private"},"comment":""}],"inheritance":{"file":"AbstractComponent"}},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","inheritance":{"file":"AbstractComponent"}}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from \'@angular/core\';\\nimport { AbstractComponent } from \'../../../abstracts/abstract.component\';\\nimport { BooleanInput, isTrueBooleanInput } from \'../../../utils/boolean-input\';\\nimport { UploadFileListItem } from \'../../../interfaces/form\';\\nimport { FileUtils } from \'../../../utils/file-utils\';\\nimport { forkJoin, take, tap } from \'rxjs\';\\n\\n@Component({\\n  selector: \'it-upload-file-list[fileList]\',\\n  templateUrl: \'./upload-file-list.component.html\'\\n})\\nexport class UploadFileListComponent extends AbstractComponent implements OnInit, OnChanges {\\n\\n  /**\\n   * The list of files to show in list\\n   */\\n  @Input() fileList!: Array<UploadFileListItem>;\\n\\n  /**\\n   * The accepted file type to upload <br>\\n   * Possible values: <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\\">MIME Types</a> separated by comma\\n   * @example application/pdf,image/png\\n   * @default *\\n   */\\n  @Input() accept: string = \'*\';\\n\\n  /**\\n   * If upload multiple files\\n   */\\n  @Input() multiple: BooleanInput = true;\\n\\n  /**\\n   * If is file list image\\n   */\\n  @Input() images?: BooleanInput;\\n\\n  /**\\n   * Hide the load button\\n   */\\n  @Input() hideLoadButton?: BooleanInput;\\n\\n  /**\\n   * Fired when upload new files\\n   */\\n  @Output() uploadFiles: EventEmitter<FileList> = new EventEmitter<FileList>();\\n\\n  /**\\n   * Fired on delete item button click\\n   */\\n  @Output() deleteItem: EventEmitter<UploadFileListItem> = new EventEmitter<UploadFileListItem>();\\n\\n  /**\\n   * Cache to preview image\\n   */\\n  previewImages: Map<number, string> = new Map<number, string>();\\n\\n  ngOnInit(): void {\\n    if (this.isImageList && this.accept === \'*\') {\\n      this.accept = \'image/*\';\\n    }\\n  }\\n\\n  override ngOnChanges(changes: SimpleChanges): void {\\n    if (changes[\'fileList\'] && this.isImageList) {\\n      const images$ = this.fileList.map(item => FileUtils.fileToBase64(item.file).pipe(\\n        take(1),\\n        tap(base64 => this.previewImages.set(item.id, base64))\\n      ));\\n      forkJoin(images$).subscribe(() => {\\n        this._changeDetectorRef.detectChanges();\\n        super.ngOnChanges(changes);\\n      });\\n    } else {\\n      super.ngOnChanges(changes);\\n    }\\n  }\\n\\n  get isMultipleInput(): boolean {\\n    return isTrueBooleanInput(this.multiple);\\n  }\\n\\n  get isImageList(): boolean {\\n    return isTrueBooleanInput(this.images);\\n  }\\n\\n  get isHideLoadButton(): boolean {\\n    return isTrueBooleanInput(this.hideLoadButton);\\n  }\\n\\n  /**\\n   * On load file from input\\n   * @param event\\n   */\\n  onLoadFiles(event: Event): void {\\n    const files = (event.target as HTMLInputElement)?.files;\\n    if (!files || !files.length) {\\n      return;\\n    }\\n    this.uploadFiles.emit(files);\\n  }\\n\\n  /**\\n   * Get the file size string\\n   * @param file\\n   */\\n  getFileSize(file: File): string {\\n    return FileUtils.getFileSizeString(file);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","extends":"AbstractComponent","implements":["OnInit","OnChanges"],"accessors":{"isMultipleInput":{"name":"isMultipleInput","getSignature":{"name":"isMultipleInput","type":"boolean","returnType":"boolean","line":78}},"isImageList":{"name":"isImageList","getSignature":{"name":"isImageList","type":"boolean","returnType":"boolean","line":82}},"isHideLoadButton":{"name":"isHideLoadButton","getSignature":{"name":"isHideLoadButton","type":"boolean","returnType":"boolean","line":86}}},"templateData":"<ng-container *ngIf=\\"!isHideLoadButton\\">\\n  <input type=\\"file\\" [id]=\\"id\\" class=\\"upload\\" [accept]=\\"accept\\" [multiple]=\\"isMultipleInput\\"\\n         (change)=\\"onLoadFiles($event)\\" />\\n  <label [for]=\\"id\\">\\n    <it-icon name=\\"upload\\" size=\\"sm\\"></it-icon>\\n    <span>{{\'it.form.upload\'|translate}}</span>\\n  </label>\\n</ng-container>\\n\\n<ul class=\\"upload-file-list\\" [class.upload-file-list-image]=\\"isImageList\\" *ngIf=\\"fileList.length\\">\\n  <li *ngFor=\\"let item of fileList\\" class=\\"upload-file\\"\\n      [class.error]=\\"item.error\\"\\n      [class.uploading]=\\"!item.error && item.progress !== undefined && item.progress > 0 && item.progress < 100\\"\\n      [class.success]=\\"!item.error && (!item.progress || item.progress >= 100)\\">\\n\\n    <div class=\\"upload-image\\" *ngIf=\\"isImageList; else icon\\">\\n      <img [attr.src]=\\"previewImages.get(item.id)\\" [alt]=\\"item.file.name\\" />\\n    </div>\\n    <ng-template #icon>\\n      <it-icon name=\\"file\\" size=\\"sm\\" [color]=\\"!item.error ? (item.progress ? \'secondary\' : \'primary\') : \'danger\'\\"></it-icon>\\n    </ng-template>\\n\\n    <p [itTooltip]=\\"item.tooltip\\">\\n      <span class=\\"visually-hidden\\">{{\'it.form.uploaded-file\'|translate : { name: item.file.name } }}</span>\\n      {{item.file.name}} <span class=\\"upload-file-weight\\">{{getFileSize(item.file)}}</span>\\n    </p>\\n\\n    <button *ngIf=\\"item.removable && (!item.progress || item.progress < 100)\\" type=\\"button\\" (click)=\\"deleteItem.emit(item)\\">\\n      <span class=\\"visually-hidden\\">{{\'it.form.delete-file\'|translate : { name: item.file.name } }}</span>\\n      <it-icon name=\\"close\\"></it-icon>\\n    </button>\\n    <button *ngIf=\\"(!item.removable && !item.progress) || (item.progress !== undefined && item.progress >= 100)\\" type=\\"button\\" disabled>\\n      <span class=\\"visually-hidden\\">{{\'it.form.upload-complete\'|translate}}</span>\\n      <it-icon name=\\"check\\"></it-icon>\\n    </button>\\n\\n    <it-progress-bar *ngIf=\\"!item.error && item.progress !== undefined && item.progress > 0 && item.progress < 100\\"\\n                      [value]=\\"item.progress\\"></it-progress-bar>\\n  </li>\\n</ul>\\n"}]}')}}]);
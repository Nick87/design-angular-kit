{"version":3,"file":"main.js","mappings":"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","sources":["./projects/design-angular-kit/src/lib/badge/badge.directive.ts","./projects/design-angular-kit/src/lib/breadcrumb/breadcrumb-item.component.ts","./projects/design-angular-kit/src/lib/breadcrumb/breadcrumb-item.component.html","./projects/design-angular-kit/src/lib/breadcrumb/breadcrumb.component.ts","./projects/design-angular-kit/src/lib/breadcrumb/breadcrumb.component.html","./projects/design-angular-kit/src/lib/button/button.directive.ts","./projects/design-angular-kit/src/lib/button/button.module.ts","./projects/design-angular-kit/src/lib/checkbox/checkbox.component.ts","./projects/design-angular-kit/src/lib/checkbox/checkbox.component.html","./projects/design-angular-kit/src/lib/collapse/collapse-group.component.ts","./projects/design-angular-kit/src/lib/collapse/collapse-group.component.html","./projects/design-angular-kit/src/lib/collapse/collapse-item.component.ts","./projects/design-angular-kit/src/lib/collapse/collapse-item.component.html","./projects/design-angular-kit/src/lib/collapse/collapse.config.ts","./projects/design-angular-kit/src/lib/collapse/collapse.directive.ts","./projects/design-angular-kit/src/lib/collapse/collapse.module.ts","./projects/design-angular-kit/src/lib/design-angular-kit.module.ts","./projects/design-angular-kit/src/lib/dropdown/dropdown-divider.component.ts","./projects/design-angular-kit/src/lib/dropdown/dropdown-divider.component.html","./projects/design-angular-kit/src/lib/dropdown/dropdown-item.component.ts","./projects/design-angular-kit/src/lib/dropdown/dropdown-item.component.html","./projects/design-angular-kit/src/lib/dropdown/dropdown.component.ts","./projects/design-angular-kit/src/lib/dropdown/dropdown.component.html","./projects/design-angular-kit/src/lib/dropdown/dropdown.config.ts","./projects/design-angular-kit/src/lib/dropdown/dropdown.directive.ts","./projects/design-angular-kit/src/lib/dropdown/dropdown.module.ts","./projects/design-angular-kit/src/lib/enums/icons.enum.ts","./projects/design-angular-kit/src/lib/form-input/form-input-password.utils.ts","./projects/design-angular-kit/src/lib/form-input/form-input.component.ts","./projects/design-angular-kit/src/lib/form-input/form-input.component.html","./projects/design-angular-kit/src/lib/form-input/it-prefix.directive.ts","./projects/design-angular-kit/src/lib/form-input/it-suffix.directive.ts","./projects/design-angular-kit/src/lib/form-input/it-text-prefix.directive.ts","./projects/design-angular-kit/src/lib/form-input/it-text-suffix.directive.ts","./projects/design-angular-kit/src/lib/form-input/mark-matching-text.pipe.ts","./projects/design-angular-kit/src/lib/icon/icon.component.ts","./projects/design-angular-kit/src/lib/icon/icon.component.html","./projects/design-angular-kit/src/lib/icon/icon.module.ts","./projects/design-angular-kit/src/lib/models/Alignment.ts","./projects/design-angular-kit/src/lib/models/ButtonSize.ts","./projects/design-angular-kit/src/lib/models/InputType.ts","./projects/design-angular-kit/src/lib/models/ThemeColor.ts","./projects/design-angular-kit/src/lib/popover/popover.config.ts","./projects/design-angular-kit/src/lib/popover/popover.directive.ts","./projects/design-angular-kit/src/lib/popover/popover.module.ts","./projects/design-angular-kit/src/lib/progress-bar/progress-bar.component.ts","./projects/design-angular-kit/src/lib/progress-bar/progress-bar.component.html","./projects/design-angular-kit/src/lib/radio/radio.component.ts","./projects/design-angular-kit/src/lib/radio/radio.component.html","./projects/design-angular-kit/src/lib/radio/unique-selection-dispatcher.ts","./projects/design-angular-kit/src/lib/tabs/tab-group.component.ts","./projects/design-angular-kit/src/lib/tabs/tab-group.component.html","./projects/design-angular-kit/src/lib/tabs/tab.component.ts","./projects/design-angular-kit/src/lib/tabs/tab.component.html","./projects/design-angular-kit/src/lib/tabs/tabs.module.ts","./projects/design-angular-kit/src/lib/toggle/toggle.component.ts","./projects/design-angular-kit/src/lib/toggle/toggle.component.html","./projects/design-angular-kit/src/lib/tooltip/tooltip.config.ts","./projects/design-angular-kit/src/lib/tooltip/tooltip.directive.ts","./projects/design-angular-kit/src/lib/tooltip/tooltip.module.ts","./projects/design-angular-kit/src/lib/util/focus-mouse.directive.ts","./projects/design-angular-kit/src/lib/util/util.ts","./projects/design-angular-kit/src/lib/util/utils.module.ts","./projects/design-angular-kit/src/public_api.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/link-sort.pipe.ts","./src/app/router-dispatcher/router-dispatcher.component.ts","./src/app/router-dispatcher/router-dispatcher.component.html","./src/app/table-of-content-item/table-of-content-item.component.ts","./src/app/table-of-content-item/table-of-content-item.component.html","./src/app/table-of-content/table-of-content.component.ts","./src/app/table-of-content/table-of-content.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Directive, ElementRef, Input, HostBinding } from '@angular/core';\nimport { ThemeColor, THEME_COLORS } from '../models/ThemeColor';\nimport { Util } from '../util/util';\n\n/**\n * Una badge con design bootstrap italia.\n */\n@Directive({\n  selector: '[itBadge]', // tslint:disable-line\n  exportAs: 'itBadge'\n})\nexport class BadgeDirective {\n\n  /**\n   * (Opzionale) indica il colore del badge. Può essere `primary`, `secondary`, `danger`, `warning`, `info`, `success`, `light` o `dark`.\n   * Se non viene fornito o il valore è diverso da quelli previsti il suo valore di default è `light`.\n   */\n  @Input()\n  get badgeColor(): any {\n    return this._badgeColor;\n  }\n  set badgeColor(value: any) {\n    if (ThemeColor.is(value)) {\n      this._badgeColor = value;\n    } else {\n      this._badgeColor = THEME_COLORS.LIGHT;\n    }\n  }\n  private _badgeColor = THEME_COLORS.LIGHT;\n\n  /**\n   * La direttiva che abilita l'elemento come badge. Mostra il testo come contenuto del badge.\n   * Se valutato ad `undefined`, `null` o stringa vuota il badge non viene mostrato.\n   */\n  @Input('itBadge')\n  @HostBinding('innerText')\n  get badgeText(): string { return this._badgeText; }\n  set badgeText(value: string) {\n    if (value) {\n      this._badgeText = value;\n    } else {\n      this._badgeText = '';\n    }\n  }\n  private _badgeText = '';\n\n  private _isPill = false;\n  /**\n   * Indica se il badge è arrotondato o meno.\n   */\n  @Input()\n  get isPill(): boolean { return this._isPill; }\n  set isPill(value: boolean) {\n    this._isPill = Util.coerceBooleanProperty(value);\n  }\n\n  private getBadgeColorClassName(): string {\n    return `bg-${this._badgeColor}`;\n  }\n\n  @HostBinding('class')\n  get hostClasses(): string {\n    return [\n      'badge',\n      this.getBadgeColorClassName(),\n      this.isPill ? 'rounded-pill' : '',\n    ].join(' ');\n  }\n\n  constructor(private el: ElementRef) { }\n\n}\n","import { Component, OnInit, Input, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\n\nlet identifier = 0;\n\n@Component({\n  selector: 'it-breadcrumb-item',\n  templateUrl: './breadcrumb-item.component.html',\n  styleUrls: ['./breadcrumb-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbItemComponent {\n  id = `it-breadcrumb-item-${identifier++}`;\n\n  constructor(private _cdRef: ChangeDetectorRef, private _elemRef: ElementRef) { }\n\n  /**\n   * Il link alla pagina verso cui andare al click di questo elemento del breadcrumb\n   */\n  @Input()\n  get link(): string { return this._link; }\n  set link(value: string) { this._link = value; }\n  private _link: string;\n\n  /**\n   * La classe dell'icona da usare prima del testo dell'elemento del breadcrumb\n   */\n  @Input()\n  get icon(): string { return this._icon; }\n  set icon(value: string) { this._icon = value; }\n  private _icon: string;\n\n  @Input()\n  get iconColor(): string { return this._iconColor; }\n  set iconColor(value: string) { \n    if(this._iconColor !== value) {\n      this._iconColor = value;\n      this._cdRef.detectChanges();\n    }\n  }\n  private _iconColor: string;\n\n  get separator(): string { return this._separator; }\n  set separator(value: string) { this._separator = value; }\n  private _separator: string;\n\n  get isLast(): boolean { return this._isLast; }\n  set isLast(value: boolean) {\n    this._isLast = value;\n    const breadcrumbItem = this._elemRef.nativeElement.querySelector('.breadcrumb-item');\n    if (this._isLast) {\n      breadcrumbItem.setAttribute('aria-current', 'page');\n    } else {\n      if (breadcrumbItem.hasAttribute('aria-current')) {\n        breadcrumbItem.removeAttribute('aria-current');\n      }\n    }\n    this._cdRef.detectChanges();\n  }\n  private _isLast = false;\n\n  @Input() customClass: string = '';\n\n  get breadcrumbClass() {\n    return 'breadcrumb-item ' + (this.customClass ?? '') + (this.isLast ? ' active' : '');\n  }\n\n}\n","<li [class]=\"breadcrumbClass\" [id]=\"id\">\n  <it-icon [icon] = \"icon\" [color] = \"iconColor\"></it-icon>\n\n  <a [href]=\"link\" focusMouse>\n    <ng-content></ng-content>\n  </a> \n  <span class=\"separator\" *ngIf=\"!isLast\">{{separator}}</span>\n</li>\n","import {\n  Component, Input, ContentChildren, QueryList, forwardRef,\n  AfterContentInit, OnChanges, OnDestroy, SimpleChanges, ChangeDetectionStrategy\n} from '@angular/core';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\nimport { Util } from '../util/util';\nimport { Subscription } from 'rxjs';\n\nconst DEFAULT_SEPARATOR = '/';\nlet identifier = 0;\n\n/**\n * Una componente che indica la posizione della pagina corrente all’interno di una gerarchia di navigazione\n */\n@Component({\n  selector: 'it-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadcrumbComponent implements AfterContentInit, OnChanges, OnDestroy {\n  id = `it-breadcrumb-${identifier++}`;\n\n  /**\n   * Indica che il breadcrumb utilizza il tema di colorazione scura.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get dark(): boolean { return this._dark; }\n  set dark(value: boolean) { \n    this._dark = Util.coerceBooleanProperty(value); \n  }\n  private _dark = false;\n\n  /**\n   * Il carattere che verrà usato come separatore tra gli elementi del breadcrumb\n   */\n  @Input()\n  get separator(): string { return this._separator; }\n  set separator(value: string) { this._separator = value ? value : DEFAULT_SEPARATOR; }\n  private _separator = DEFAULT_SEPARATOR;\n\n  @ContentChildren(forwardRef(() => BreadcrumbItemComponent), { descendants: true })\n  private _items: QueryList<BreadcrumbItemComponent>;\n\n  @Input() \n  customClass: string = '';\n\n  @Input() \n  ariaLabel: string = 'breadcrumb';\n\n  get breadcrumbClass() {\n    return 'breadcrumb ' + (this.customClass ?? '') + (this._dark ? ' dark' : '');\n  }\n\n  private _subscription = Subscription.EMPTY;\n\n  ngAfterContentInit() {\n    this._reloadBreadcrumbs(this._items);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['separator']) {\n      if (!changes['separator'].firstChange) {\n        this._reloadBreadcrumbs(this._items);\n      }\n    } else if (changes['dark']) {\n      this._reloadBreadcrumbs(this._items);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n\n  private _reloadBreadcrumbs(currentItems: QueryList<BreadcrumbItemComponent>) {\n    currentItems.forEach(item => {\n      item.separator = this.separator;\n      item.isLast = (item === currentItems.last);\n      item.iconColor = item.iconColor || (this._dark ? 'white' : 'primary');\n    });\n\n    this._subscribeToChanges();\n  }\n\n\n  private _subscribeToChanges() {\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n\n    this._subscription = this._items.changes.subscribe(items => {\n      this._reloadBreadcrumbs(items);\n    });\n  }\n\n}\n","<nav class=\"breadcrumb-container\" [attr.aria-label]=\"ariaLabel\" [id]=\"id\">\n  <ol [ngClass]=\"breadcrumbClass\">\n    <ng-content></ng-content>\n  </ol>\n</nav>","import { ChangeDetectorRef, ContentChild, ContentChildren, Directive, Host, HostBinding, HostListener, Input, Optional, QueryList } from '@angular/core';\nimport { ThemeColor } from '../models/ThemeColor';\nimport { ButtonSize } from '../models/ButtonSize';\nimport { Util } from '../util/util';\nimport { IconComponent } from '../icon/icon.component';\nimport { IconColorEnum } from '../enums/icons.enum';\nimport { ItDropdownToggle } from '../dropdown/dropdown.directive';\nimport { ProgressBarComponent } from '../progress-bar/progress-bar.component';\n\n\n/**\n * Un bottone con design bootstrap italia. Supporta tutte le funzionalità di un bottone HTML5.\n */\n@Directive({\n  selector: '[itButton]',\n  exportAs: 'itButton'\n})\nexport class ItButtonDirective {\n  private _isDropdownButton: boolean = false;\n  constructor(@Optional() @Host() dropdownToggle: ItDropdownToggle, private _cdr: ChangeDetectorRef) {\n    this._isDropdownButton = !!dropdownToggle;\n  }\n\n  private isLightColor(color: string): boolean {\n    return  color === IconColorEnum.light || color === IconColorEnum.info || \n            color === IconColorEnum.white;\n  }\n\n  @Input() autoUpdateIconColor = true;\n\n  @Input('itButton')\n  set color(value: any) {\n    if (ThemeColor.is(value)) {\n      this._color = value;\n    } else {\n      this._color = this._isDropdownButton ? \"dropdown\" : IconColorEnum.primary;\n    }\n    if(this.autoUpdateIconColor) {\n      this.updateButtonIconColor();\n    }\n  }\n  private _color;\n\n  private updateButtonIconColor() {\n    this.iconComponents?.forEach(icon => {\n      let newIconColor = IconColorEnum.primary;\n      if(this._color === \"dropdown\") {\n        newIconColor = IconColorEnum.primary;\n      } else if(this.isLightColor(this._color)) {\n        newIconColor = IconColorEnum.default;\n      } else {\n        newIconColor = IconColorEnum.white;\n      }\n      icon.changeColor(newIconColor);\n    });\n    \n  }\n\n  /**\n   * Stabilisce il colore del pulsante a seconda delle classi di bootstrap.\n   * Può avere valori:\n   * <ul>\n   * <li> primary\n   * <li> secondary\n   * <li> danger\n   * <li> warning\n   * <li> info\n   * <li> success\n   * <li> light\n   * <li> dark\n   * </ul>\n   */\n  get color(): any {\n    return this._color;\n  }\n\n\n  /**\n   * Se presente, il pulsante avrà un effetto di trasparenza e non reagirà al click\n   */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = Util.coerceBooleanProperty(value); }\n  private _disabled = false;\n\n  private _onFocus = false;\n  @HostListener('focus')\n  onFocus() {\n    this._onFocus = true;\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this._onFocus = false;\n  }\n\n  @ContentChildren(IconComponent) iconComponents: QueryList<IconComponent>;\n  @ContentChild(ProgressBarComponent) progressBar: ProgressBarComponent;\n\n  /**\n   * Stabilisce se lo stile del pulsante avrà un contorno.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore.\n   * Deve funzionare solo in congiunzione con un colore definito, altrimenti l'attributo viene ignorato.\n   */\n  @Input()\n  get outline(): boolean { return this._outline; }\n  set outline(value: boolean) { this._outline = Util.coerceBooleanProperty(value); }\n  private _outline = false;\n\n  /**\n   * Indica se il pulsante occupa tutta l'ampiezza a sua disposizione.\n   */\n  @Input()\n  get block(): boolean { return this._block; }\n  set block(value: boolean) { this._block = Util.coerceBooleanProperty(value); }\n  private _block = false;\n\n\n\n  \n\n  /**\n   * Indica la grandezza del pulsante. Può assumere i valori:\n   * <ul>\n   * <li> lg\n   * <li> sm\n   * <li> xs\n   * </ul>\n   */\n  @Input()\n  get size(): any {\n    return this._size;\n  }\n  set size(value: any) {\n    if (ButtonSize.is(value)) {\n      this._size = value;\n    } else {\n      this._size = undefined;\n    }\n  }\n  private _size;\n  \n  @HostBinding('class')\n  get hostClasses(): string {\n    let cssClass = 'btn';\n   \n    if (this.color) {\n      if (this.outline) {\n        cssClass += ` btn-outline-${this.color}`;\n      } else {\n        cssClass += ` btn-${this.color}`;\n      }\n    }\n\n    if (this.size) {\n      cssClass += ` btn-${this.size}`;\n    }\n\n    if (this.block) {\n      cssClass += ' btn-block';\n    }\n\n    if (this.disabled) {\n      cssClass += ' disabled';\n    }\n\n    if(this._onFocus) {\n      cssClass += ' focus--mouse';\n    }\n\n    if(this.iconComponents?.length && !this.progressBar) {\n      cssClass += ' btn-icon';\n    }\n\n    if(this.progressBar) {\n      cssClass += ' btn-progress';\n    }\n\n    return cssClass;\n  }\n\n\n}\n","import { NgModule } from \"@angular/core\";\nimport { ItIconModule } from \"../icon/icon.module\";\nimport { ItButtonDirective } from \"./button.directive\";\n\n@NgModule({\n    declarations: [ItButtonDirective],\n    imports: [ItIconModule],\n    exports: [ItButtonDirective]\n})\nexport class ItButtonModule {}","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, forwardRef, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Util } from '../util/util';\n\nlet identifier = 0;\n\nexport class CheckboxChange {\n  source: CheckboxComponent;\n  checked: boolean;\n}\n\n/**\n * Una checkbox con design bootstrap italia. Supporta tutte le funzionalità di una checkbox HTML5,\n * ed espone una API simile. Una `<it-checkbox>` può essere checked, unchecked, o disabled.\n */\n@Component({\n  selector: 'it-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.css'],\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => CheckboxComponent), multi: true }],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxComponent implements ControlValueAccessor {\n  \n  /** The native `<input type=\"checkbox\">` element */\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  /**\n   * Se la checkbox è selezionata.\n   */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value: boolean) {\n    if (value !== this.checked) {\n      this._checked = value;\n      if(this._checked) {\n        this.indeterminate = false;    \n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _checked = false;\n\n  @Input()\n  get grouped(): boolean { return this._grouped; }\n  set grouped(value: boolean) { this._grouped = Util.coerceBooleanProperty(value); }\n  private _grouped = false;\n  \n  /**\n   * L'etichetta della checkbox.\n   */\n  @Input()\n  label: string;\n\n  /**\n   * Se la checkbox è disabilitata.\n   */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _disabled = false;\n\n  @Input()\n  get inline(): boolean { return this._inline; }\n  set inline(value: boolean) { this._inline = Util.coerceBooleanProperty(value); }\n  private _inline = false;\n\n\n  @Input()\n  get indeterminate(): boolean { return this._indeterminate; }\n  set indeterminate(value: boolean) { \n    const newValue = Util.coerceBooleanProperty(value); \n    const changed = this._indeterminate !== newValue;\n    if(changed) {\n      this._indeterminate = newValue;\n      this.indeterminateChange.emit(this._indeterminate);\n      \n      if(this._indeterminate) {\n        queueMicrotask(() => {\n          this.checked = false;\n          this._emitChangeEvent();\n        });\n    \n      }\n      \n    }\n  }\n  private _indeterminate = false;\n\n  @Output() indeterminateChange = new EventEmitter<boolean>();\n\n  focus = false;\n  onFocus() {\n    this.focus = true;\n  }\n\n  onBlur() {\n    this.focus = false;\n  }\n  \n  /**\n   * Evento emesso quando il valore `checked` della checkbox cambia.\n   */\n  @Output() readonly change: EventEmitter<CheckboxChange> =\n    new EventEmitter<CheckboxChange>();\n\n  inputId = `checkbox-${identifier++}`;\n\n  private _onTouched: () => any = () => {};\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => { };\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  writeValue(value: any) {\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n\n  handleChange(event: Event) {\n    event.stopPropagation();\n    if (!this.disabled) {\n      if(!this.indeterminate) {\n        this._toggle();\n      } else {\n        this.indeterminate = false;\n        // reset proprietà \"checked\" per prevenire il comportamento di default dell'elemento HTML\n        this._inputElement.nativeElement.checked = this.checked;\n      }\n      this._emitChangeEvent();\n    }\n  }\n\n  private _toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  private _emitChangeEvent() {\n    const event = new CheckboxChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(event);\n  }\n}\n","<div class=\"form-check\" [class.form-check-group] = \"grouped\" [class.form-check-inline] = \"inline\" >\n  <input #input type=\"checkbox\"\n    [id]=\"inputId\"\n    [class.focus--mouse] = \"focus\"\n    [class.semi-checked] = \"indeterminate\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    (change)=\"handleChange($event)\"\n    (focus)=\"onFocus()\"\n    (blur)=\"onBlur()\"\n    >\n  <label\n    [attr.for]=\"inputId\" *ngIf = \"label\">{{label}}</label>\n  \n  <ng-content></ng-content>\n</div>","import { Component, ContentChildren, forwardRef, QueryList,\n  Input, HostListener, SimpleChanges, OnChanges } from '@angular/core';\nimport { ItCollapseItemComponent } from './collapse-item.component';\nimport { Util } from '../util/util';\n\nlet identifier = 0;\n\n@Component({\n  selector: 'it-collapse-group',\n  templateUrl: './collapse-group.component.html',\n  styleUrls: ['./collapse-group.component.css']\n})\nexport class ItCollapseGroupComponent implements OnChanges {\n  id = `collapse-group-${identifier++}`;\n\n  /**\n   * Indica se gli item del gruppo sono mutuamente richiudibili (o accordion)\n   */\n  @Input()\n  get accordion(): boolean { return this._accordion; }\n  set accordion(value: boolean) { this._accordion = Util.coerceBooleanProperty(value); }\n  private _accordion = false;\n\n  @ContentChildren(forwardRef(() => ItCollapseItemComponent), { descendants: true })\n  private _items: QueryList<ItCollapseItemComponent>; // tslint:disable-line\n\n  @HostListener('click', ['$event.target'])\n  onClick(target) {\n    if (this.accordion) {\n      const items = this._items.toArray();\n      items.forEach(currentItem => {\n        const isTargetPartOfItem = (currentItem.elementRef.nativeElement as HTMLElement).contains(target);\n        if (!isTargetPartOfItem) {\n          if (!currentItem.directive.isCollapsed) {\n            currentItem.directive.toggle();\n          }\n        }\n      });\n    }\n  }\n\n  ngOnChanges(simpleChanges: SimpleChanges) {\n    if (simpleChanges['accordion']) {\n      const isAccordion = simpleChanges['accordion'].currentValue;\n      if (isAccordion) {\n        const items = this._items.toArray();\n        items.forEach(currentItem => {\n          if (!currentItem.directive.isCollapsed) {\n            currentItem.directive.toggle();\n          }\n        });\n      }\n    }\n  }\n}\n","<div [id]=\"id\" class=\"collapse-div\" role=\"tablist\">\n  <ng-content></ng-content>\n</div>","import { Component, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { ItCollapseDirective } from './collapse.directive';\n\nlet identifier = 0;\n\n@Component({\n  selector: 'it-collapse-item',\n  templateUrl: './collapse-item.component.html',\n  styleUrls: ['./collapse-item.component.css']\n})\nexport class ItCollapseItemComponent {\n  @ViewChild(ItCollapseDirective, { static: true }) readonly directive: ItCollapseDirective;\n\n  id = `collapse-item-${identifier++}`;\n  headingId = `${this.id}-heading`;\n\n  /**\n   * Testo del bottone di apertura/chiusura del collapse item\n   */\n  @Input()\n  get header(): string { return this._header; }\n  set header(value: string) { this._header = value; }\n  private _header;\n\n  /**\n   * Evento da emettere quando il collapse sta per essere mostrato\n   */\n  @Output('show')\n  get showEvent(): EventEmitter<ItCollapseItemComponent> { return this._showEvent; }\n  set showEvent(value: EventEmitter<ItCollapseItemComponent>) { this._showEvent = value; }\n  private _showEvent = new EventEmitter<ItCollapseItemComponent>();\n\n  /**\n   * Evento da emettere quando il collapse è mostrato\n   */\n  @Output('shown')\n  get shownEvent(): EventEmitter<ItCollapseItemComponent> { return this._shownEvent; }\n  set shownEvent(value: EventEmitter<ItCollapseItemComponent>) { this._shownEvent = value; }\n  private _shownEvent = new EventEmitter<ItCollapseItemComponent>();\n\n  /**\n   * Evento da emettere quando il collapse sta per essere nascosto\n   */\n  @Output('hide')\n  get hideEvent(): EventEmitter<ItCollapseItemComponent> { return this._hideEvent; }\n  set hideEvent(value: EventEmitter<ItCollapseItemComponent>) { this._hideEvent = value; }\n  private _hideEvent = new EventEmitter<ItCollapseItemComponent>();\n\n  /**\n   * Evento da emettere quando il collapse è nascosto\n   */\n  @Output('hidden')\n  get hiddenEvent(): EventEmitter<ItCollapseItemComponent> { return this._hiddenEvent; }\n  set hiddenEvent(value: EventEmitter<ItCollapseItemComponent>) { this._hiddenEvent = value; }\n  private _hiddenEvent = new EventEmitter<ItCollapseItemComponent>();\n\n  show() {\n    this.showEvent.emit(this);\n  }\n\n  hide() {\n    this.hideEvent.emit(this);\n  }\n\n  shown() {\n    this.shownEvent.emit(this);\n  }\n\n  hidden() {\n    this.hiddenEvent.emit(this);\n  }\n\n  constructor(readonly elementRef: ElementRef) { }\n}\n","<div class=\"collapse-header\" [id]=\"headingId\">\n  <button #toggleButton focusMouse data-toggle=\"collapse\" [attr.aria-expanded]=\"!collapse.isCollapsed\" [attr.aria-controls]=\"id\" (click)=\"collapse.toggle()\" [ngClass]=\"{'collapsed' : collapse.isCollapsed}\">\n    {{header}}\n  </button>\n</div>\n<div [id]=\"id\" #collapse=\"itCollapse\" itCollapse  (shown)=\"shown()\" (hidden)=\"hidden()\" role=\"tabpanel\" [attr.aria-labelledby]=\"headingId\">\n  <div class=\"collapse-body\">\n    <ng-content></ng-content>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { NgbCollapseConfig } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Injectable({providedIn: 'root'})\nexport class ItCollapseConfig extends NgbCollapseConfig {\n    \n}","import { Directive, Input, ElementRef, NgZone, OnInit, OnChanges, SimpleChanges, ChangeDetectorRef, Output, EventEmitter} from '@angular/core';\nimport { NgbCollapse } from '@ng-bootstrap/ng-bootstrap';\nimport { Util } from '../util/util';\nimport { ItCollapseConfig } from './collapse.config';\n\n/**\n * Per ottimizzare l’ingombro dei contenuti di una pagina si possono usare degli elementi richiudibili\n * (in gergo definiti collassabili o collapse), che possono essere attivati indipendentemente l’uno dall’altro\n */\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[itCollapse]',\n  exportAs: 'itCollapse'\n})\nexport class ItCollapseDirective extends NgbCollapse implements OnInit, OnChanges {\n  \n  constructor(private _cd: ChangeDetectorRef,  _elementRef: ElementRef<HTMLElement>, _config: ItCollapseConfig, _ngZone: NgZone) {\n      super(_elementRef, _config, _ngZone);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    super.collapsed = Util.coerceBooleanProperty(this.itCollapse);\n    super.ngbCollapseChange = this.itCollapseChange;   \n    this._cd.detectChanges();\n  }\n\n  ngOnChanges({itCollapse}: SimpleChanges): void {\n    const coercedValue = Util.coerceBooleanProperty(itCollapse.currentValue);\n    super.collapsed = coercedValue;\n    super.ngOnChanges({collapsed: itCollapse});\n   \n  }\n\n  /**\n   * La direttiva di collapse che opzionalmente contiene il predicato che ne stabilisce\n   * che sarà avvalorato a true quando il collapse è espanso, a false altrimenti\n   */\n  @Input() itCollapse:boolean;\n  @Output() itCollapseChange = new EventEmitter<boolean>();\n\n\n  get isCollapsed(): boolean {\n    return this.collapsed;\n  }\n\n  show(): void {\n    if(this.isCollapsed) {\n      super.toggle();\n    }\n  }\n\n  hide(): void {\n    if(!this.isCollapsed) {\n      super.toggle();\n    }\n  }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NgbCollapseModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ItUtilsModule } from \"../util/utils.module\";\nimport { ItCollapseGroupComponent } from \"./collapse-group.component\";\nimport { ItCollapseItemComponent } from \"./collapse-item.component\";\nimport { ItCollapseDirective } from \"./collapse.directive\";\n\n@NgModule({\n    imports: [CommonModule, NgbCollapseModule, ItUtilsModule],\n    declarations: [ItCollapseDirective, ItCollapseItemComponent, ItCollapseGroupComponent],\n    exports: [ItCollapseDirective, ItCollapseItemComponent, ItCollapseGroupComponent],\n})\nexport class ItCollapseModule {}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { RadioButtonComponent, RadioGroupDirective } from './radio/radio.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { BadgeDirective } from './badge/badge.directive';\nimport { FormInputComponent } from './form-input/form-input.component';\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\nimport { BreadcrumbItemComponent } from './breadcrumb/breadcrumb-item.component';\nimport { ItPrefixDirective } from './form-input/it-prefix.directive';\nimport { ItSuffixDirective } from './form-input/it-suffix.directive';\nimport { ItTextPrefixDirective } from './form-input/it-text-prefix.directive';\nimport { ItTextSuffixDirective } from './form-input/it-text-suffix.directive';\nimport { ItPopoverModule } from './popover/popover.module';\nimport { ItTooltipModule } from './tooltip/tooltip.module';\nimport { ItCollapseModule } from './collapse/collapse.module';\nimport { ItDropdownModule } from './dropdown/dropdown.module';\nimport { ItIconModule } from './icon/icon.module';\nimport { ItButtonModule } from './button/button.module';\nimport { ItTabsModule } from './tabs/tabs.module';\nimport { MarkMatchingTextPipe } from './form-input/mark-matching-text.pipe';\nimport { ItUtilsModule } from './util/utils.module';\n\n@NgModule({\n    imports: [\n        \n        CommonModule,\n        ItUtilsModule,\n        FormsModule,\n        ItPopoverModule,\n        ItTooltipModule,\n        ItCollapseModule,\n        ItDropdownModule,\n        ItIconModule,\n        ItButtonModule,\n        ItTabsModule,\n    ],\n    declarations: [\n        CheckboxComponent,\n        ToggleComponent,\n        RadioGroupDirective,\n        RadioButtonComponent,\n        BadgeDirective,\n        ProgressBarComponent,\n        FormInputComponent,\n        BreadcrumbComponent,\n        BreadcrumbItemComponent,\n        ItPrefixDirective,\n        ItSuffixDirective,\n        ItTextPrefixDirective,\n        ItTextSuffixDirective,\n        MarkMatchingTextPipe\n    ],\n    exports: [\n        CheckboxComponent,\n        ToggleComponent,\n        RadioGroupDirective,\n        RadioButtonComponent,\n        BadgeDirective,\n        ProgressBarComponent,\n        ItButtonModule,\n        FormInputComponent,\n        BreadcrumbComponent,\n        BreadcrumbItemComponent,\n        ItIconModule,\n        ItPrefixDirective,\n        ItSuffixDirective,\n        ItTextPrefixDirective,\n        ItTextSuffixDirective,\n        ItPopoverModule,\n        ItTooltipModule,\n        ItCollapseModule,\n        ItDropdownModule,\n        ItUtilsModule\n    ]\n})\nexport class DesignAngularKitModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'it-dropdown-divider',\n  templateUrl: './dropdown-divider.component.html',\n  styleUrls: ['./dropdown-divider.component.css']\n})\nexport class DropdownDividerComponent {\n\n}\n","<li>\n  <span class=\"divider\"></span>\n</li>","import { Component, Input} from '@angular/core';\nimport { IconColorEnum } from '../enums/icons.enum';\nimport { HorizontalAlign, HORIZONTAL_ALIGN } from '../models/Alignment';\nimport { Util } from '../util/util';\n\nlet identifier = 0;\n\n/**\n * Componente usata per visualizzare una voce di menù all'interno di una dropdown\n */\n@Component({\n  selector: 'it-dropdown-item',\n  templateUrl: './dropdown-item.component.html',\n  styleUrls: ['./dropdown-item.component.css']\n})\nexport class DropdownItemComponent {\n  id = `dropdown-item-${identifier++}`;\n\n  /**\n   * Il link alla pagina verso cui andare al click sull'elemento del dropdown\n   */\n  @Input()\n  get link(): string { return !this.disabled ? this._link : ''; }\n  set link(value: string) { this._link = value; }\n  private _link = '';\n\n  /**\n   * Se presente indica che l'elemento viene renderizzato come elemento attivo.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get active(): boolean { return this._active; }\n  set active(value: boolean) { this._active = Util.coerceBooleanProperty(value); }\n  private _active = false;\n\n  /**\n   * Se presente indica che l'elemento è disabilitato.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = Util.coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * Se presente indica che il testo dell'elemento viene renderizzato più grande.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get large(): boolean { return this._large; }\n  set large(value: boolean) { this._large = Util.coerceBooleanProperty(value); }\n  private _large = false;\n\n  /**\n   * La classe dell'icona da usare prima o dopo del testo dell'elemento del dropdown\n   */\n  @Input()\n  get icon(): string { return this._icon; }\n  set icon(value: string) { this._icon = value; }\n  private _icon = undefined;\n\n  /**\n   * La posizione dell'icona rispetto al testo dell'elemento del dropdown.\n   * Può assumere valori right o left.\n   */\n  @Input()\n  get iconPosition(): HorizontalAlign { return this._iconPosition; }\n  set iconPosition(value: any) {\n    if (HORIZONTAL_ALIGN.is(value)) {\n      this._iconPosition = value as HorizontalAlign;\n    } else {\n      this._iconPosition = HorizontalAlign.right;\n    }\n  }\n  private _iconPosition = HorizontalAlign.right;\n\n\n  @Input()\n  get iconColor(): IconColorEnum { return this._iconColor; }\n  set iconColor(value: IconColorEnum) { this._iconColor = value; }\n  private _iconColor = IconColorEnum.primary;\n\n  get dropdownItemClass() {\n    return `list-item ${this.iconPosition}-icon`;\n  }\n\n  get iconClass() {\n    return `${this.icon} ${this.iconPosition}`;\n  }\n\n}\n","<li [id]=\"id\">\n  <a itDropdownItem focusMouse\n    [attr.href]=\"link\"\n    [attr.tabindex]=\"this.disabled ? -1 : 0\"\n    [class]=\"dropdownItemClass\"\n    [ngClass]=\"{\n      'large' : large, \n      'active' : active,\n      'disabled' : disabled,\n      'disabled-item-link' : disabled,\n      'left-icon': iconPosition === 'left',\n      'right-icon': iconPosition === 'right'\n    }\">\n    <span>\n      <ng-content></ng-content>\n    </span>\n    <it-icon *ngIf = \"icon\" [icon]=\"icon\" [position]=\"iconPosition\" [color] = \"iconColor\"></it-icon>\n  </a>\n</li>","import {\n  Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList\n} from '@angular/core';\nimport { Util } from '../util/util';\nimport { ThemeColor } from '../models/ThemeColor';\nimport { DropdownItemComponent } from './dropdown-item.component';\nimport { IconColorEnum } from '../enums/icons.enum';\n\nlet identifier = 0;\n\nconst DEFAULT_COLOR = 'dropdown';\nexport type DropdownMenuPlacement = 'bottom-start' | 'top-start' | 'left-start' | 'right-start';\n\n/**\n * Componente usata per attivare o disattivare overlay contestuali per visualizzare elenchi di link e altro ancora con questi menù a tendina\n */\n@Component({\n  selector: 'it-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class DropdownComponent {\n  id = `dropdown-${identifier++}`;\n\n  @ContentChildren(DropdownItemComponent) menuItems: QueryList<DropdownItemComponent>;\n\n\n  @Input() menuHeading: string  = \"\";\n  @Input() expandIcon: string | null = \"it-expand\";\n  @Input() expandIconPosition: 'start' | 'end' = 'end';\n\n  private _menuPlacement: DropdownMenuPlacement;\n  get menuPlacement() {\n    return this._menuPlacement;\n  }\n  @Input() set menuPlacement(value : DropdownMenuPlacement) {\n    if(value === 'left-start') {\n      this.expandIconPosition = 'start';\n    } else if (value === 'right-start') {\n      this.expandIconPosition = 'end';\n    }\n    this._menuPlacement = value;\n  }\n\n  /**\n   * Se presente indica che il dropdown utilizza il tema di colorazione scura.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get dark(): boolean { return this._dark; }\n  set dark(value: boolean) { \n    this._dark = Util.coerceBooleanProperty(value); \n    if(this.autoUpdateMenuItemsIconColor) {\n      this.updateMenuItemsIconColor();\n    }\n  }\n  private _dark = false;\n\n  /**\n   * Se presente indica che le voci del dropdown si sviluppano orizzontalmente.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get fullWidth(): boolean { return this._fullWidth; }\n  set fullWidth(value: boolean) { this._fullWidth = Util.coerceBooleanProperty(value); }\n  private _fullWidth = false;\n\n  /**\n   * Il colore del pulsante che attiva il dropdown.\n   * Può assumere i valori primary, secondary, danger, warning, info, warning, success, light e dark\n   */\n  @Input()\n  get color(): any { return this._color; }\n  set color(value: any) {\n    if (ThemeColor.is(value)) {\n      this._color = value;\n    } else {\n      this._color = DEFAULT_COLOR;\n    }\n  }\n  private _color = DEFAULT_COLOR;\n\n  /**\n   * Il testo presente sul pulsante che attiva il dropdown\n   */\n  @Input()\n  get label(): string { return this._label; }\n  set label(value: string) { this._label = value; }\n  private _label = '';\n\n\n  /**\n   * Evento che viene lanciato ogni volta che il dropdown viene aperto\n   */\n  @Output()\n  get onOpen(): EventEmitter<DropdownComponent> { return this._onOpen; }\n  set onOpen(value: EventEmitter<DropdownComponent>) { this._onOpen = value; }\n  private _onOpen = new EventEmitter<DropdownComponent>();\n\n  /**\n  * Evento che viene lanciato ogni volta che il dropdown viene chiuso\n  */\n  @Output()\n  get onClose(): EventEmitter<DropdownComponent> { return this._onClose; }\n  set onClose(value: EventEmitter<DropdownComponent>) { this._onClose = value; }\n  private _onClose = new EventEmitter<DropdownComponent>();\n\n  public isOpen: boolean = false;\n\n  onOpenChange(isOpen: boolean) {\n    this.isOpen = isOpen;\n    if(this.isOpen) {\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n    }\n  }\n\n  @Input() autoUpdateMenuItemsIconColor: boolean = true;\n  private updateMenuItemsIconColor() {\n    this.menuItems?.forEach(item => {\n      item.iconColor = this._dark ? IconColorEnum.light : IconColorEnum.primary;\n    });\n  }\n\n  get isDropend(): boolean {\n    return this._menuPlacement === 'right-start';\n  }\n\n  get isDropstart(): boolean {\n    return this._menuPlacement === 'left-start';\n  }\n\n  get isDropup(): boolean {\n    return this._menuPlacement === 'top-start';\n  }\n\n\n\n}\n","<div  itDropdown (openChange)=\"onOpenChange($event)\"  \n      [placement]=\"menuPlacement\"\n      [class.dropstart] = \"isDropstart\"\n      [class.dropend] = \"isDropend\"\n      [class.dropup] = \"isDropup\">\n  <button class=\"dropdown-toggle\" [itButton]=\"color\" itDropdownToggle id=\"dropdownMenuButton\" aria-haspopup=\"true\">\n    <it-icon *ngIf = \"expandIcon && expandIconPosition === 'start'\" [icon]=\"expandIcon\" [expand]=\"true\"> </it-icon>\n    {{label}}\n    <it-icon *ngIf = \"expandIcon && expandIconPosition === 'end'\" [icon]=\"expandIcon\" [expand]=\"true\"> </it-icon>\n  </button>\n  <div itDropdownMenu aria-labelledby=\"dropdownMenuButton\" [class.dark]=\"dark\" [class.full-width]=\"fullWidth\">\n    <div class=\"link-list-wrapper\">\n      <div class=\"link-list-heading\" *ngIf = \"menuHeading\">{{menuHeading}}</div>\n      <ul class=\"link-list\">\n        <ng-content></ng-content>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { NgbDropdownConfig } from \"@ng-bootstrap/ng-bootstrap\";\n\n@Injectable({providedIn: 'root'})\nexport class ItDropdownConfig extends NgbDropdownConfig {}","\nimport {\n  ChangeDetectorRef,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  NgZone,\n  AfterContentInit,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  Optional,\n  OnChanges,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport { NgbDropdown, NgbDropdownAnchor, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbNavbar } from '@ng-bootstrap/ng-bootstrap';\nimport { ItDropdownConfig } from './dropdown.config';\n\n@Directive({selector: '.navbar'})\nexport class ItNavbar extends NgbNavbar {\n}\n\n/**\n * A directive you should put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * @since 4.1.0\n */\n@Directive({\n  selector: '[itDropdownItem]'\n})\nexport class ItDropdownItem extends NgbDropdownItem {\n  constructor(elementRef: ElementRef<HTMLElement>, _renderer: Renderer2) {\n    super(elementRef, _renderer);\n  }\n}\n\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\n@Directive({\n  selector: '[itDropdownMenu]',\n  host: {\n    '[attr.data-popper-placement]': 'placement'\n  }\n})\nexport class ItDropdownMenu extends NgbDropdownMenu implements AfterContentInit {\n  @ContentChildren(ItDropdownItem) menuItems: QueryList<ItDropdownItem>;\n\n  constructor(\n      @Inject(forwardRef(() => ItDropdown)) public dropdown: ItDropdown, _elementRef: ElementRef<HTMLElement>) {\n        super(dropdown, _elementRef);\n    }\n\n  ngAfterContentInit(): void {\n    super.menuItems = this.menuItems;\n  }\n\n\n\n}\n\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * @since 1.1.0\n */\n@Directive(\n    {selector: '[itDropdownAnchor]'})\nexport class ItDropdownAnchor extends NgbDropdownAnchor {\n  constructor(\n      @Inject(forwardRef(() => ItDropdown)) public dropdown: ItDropdown, _elementRef: ElementRef<HTMLElement>) {\n        super(dropdown, _elementRef)\n  }\n}\n\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\n@Directive({\n  selector: '[itDropdownToggle]',\n  host: {\n    '[class]': 'placement'\n  },\n  providers: [{provide: ItDropdownAnchor, useExisting: forwardRef(() => ItDropdownToggle)}]\n})\nexport class ItDropdownToggle extends NgbDropdownToggle {\n  constructor(@Inject(forwardRef(() => ItDropdown)) public dropdown: ItDropdown, elementRef: ElementRef<HTMLElement>) {\n    super(dropdown, elementRef);\n  }\n}\n\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\n@Directive({selector: '[itDropdown]', exportAs: 'itDropdown'})\nexport class ItDropdown extends NgbDropdown implements AfterContentInit, OnChanges, OnDestroy {\n\n  @ContentChild(ItDropdownMenu, {static: false}) _itMenu: ItDropdownMenu;\n  @ContentChild(ItDropdownAnchor, {static: false}) _itAnchor: ItDropdownAnchor;\n\n  /**\n   * An event fired when the dropdown is opened or closed.\n   *\n   * The event payload is a `boolean`:\n   * * `true` - the dropdown was opened\n   * * `false` - the dropdown was closed\n   */\n  @Output() openChange = new EventEmitter<boolean>();\n\n  constructor(\n      _changeDetector: ChangeDetectorRef, config: ItDropdownConfig,\n      @Inject(DOCUMENT) _document: any, _ngZone: NgZone, _elementRef: ElementRef<HTMLElement>,\n      _renderer: Renderer2, @Optional() itNavbar: ItNavbar) {\n        super(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, itNavbar);\n  }\n\n  ngAfterContentInit() {\n    super[\"_menu\"] = this._itMenu;\n    super[\"_anchor\"] = this._itAnchor;\n\n    super.ngAfterContentInit();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n  }\n\n  ngOnDestroy() { super.ngOnDestroy(); }\n\n}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NgbDropdownModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ItButtonModule } from \"../button/button.module\";\nimport { ItIconModule } from \"../icon/icon.module\";\nimport { ItUtilsModule } from \"../util/utils.module\";\nimport { DropdownDividerComponent } from \"./dropdown-divider.component\";\nimport { DropdownItemComponent } from \"./dropdown-item.component\";\nimport { DropdownComponent } from \"./dropdown.component\";\nimport { ItDropdown, ItDropdownAnchor, ItDropdownItem, ItDropdownMenu, ItDropdownToggle, ItNavbar } from \"./dropdown.directive\";\n\n@NgModule({\n    declarations: [DropdownComponent, DropdownDividerComponent, DropdownItemComponent, ItDropdown, ItNavbar, ItDropdownMenu, ItDropdownAnchor, ItDropdownToggle, ItDropdownItem],\n    imports: [CommonModule, NgbDropdownModule, ItIconModule, ItButtonModule, ItUtilsModule],\n    exports: [DropdownComponent, DropdownDividerComponent, DropdownItemComponent, ItDropdown, ItNavbar, ItDropdownMenu, ItDropdownAnchor, ItDropdownToggle, ItDropdownItem]\n})\nexport class ItDropdownModule {}","export enum IconSizeEnum {\n  sx = 'icon-xs',\n  sm = 'icon-sm',\n  lg = 'icon-lg',\n  xl = 'icon-xl',\n  default = ''\n}\n\nexport enum IconColorEnum {\n  default = 'default',\n  primary = 'primary',\n  secondary = 'secondary',\n  info = 'info',\n  success = 'success',\n  warning = 'warning',\n  danger = 'danger',\n  disable = 'disable',\n  light = 'light',\n  white = 'white',\n}\n\nexport enum IconBackgroundColorEnum {\n  light = 'light',\n  dark = 'dark',\n}\n\n","import { PasswordStrengthMeterConfig } from \"./form-input.component\"\n\n/**\n * Classe di utility creata sulla base del seguente sorgente di bootstrap-italia: https://github.com/italia/bootstrap-italia/blob/main/src/js/plugins/input-password.js\n * TODO: Da sostituire una volta che i metodi scoreText, scoreColor, e calculateScore \n * saranno importabili dalla libreria bootstrap-italia.\n */\nexport class FormInputPasswordUtils {\n\n  public static readonly DEFAULT_CONFIG =  {\n    shortPass: 'Password molto debole',\n    badPass: 'Password debole',\n    goodPass: 'Password sicura',\n    strongPass: 'Password molto sicura',\n    enterPass: 'Inserisci almeno 8 caratteri e una lettera maiuscola',\n    alertCaps: 'CAPS LOCK inserito',\n    showText: true,\n    minimumLength: 4,\n  };\n\n  constructor(private _config: PasswordStrengthMeterConfig) {}\n\n    /**\n   * Returns a value between -1 and 100 to score\n   * the user's password.\n   *\n   * @param  string password The password to be checked.\n   * @return int\n   */\n  public calculateScore(password: string) {\n    var score = 0\n\n    // empty password\n    if (password.trim().length === 0) {\n      return -2\n    }\n\n    // password < this._config.minimumLength\n    if (password.length < this._config.minimumLength) {\n      return -1\n    }\n\n    // password length\n    score += password.length * 4\n    score += this._checkRepetition(1, password).length - password.length\n    score += this._checkRepetition(2, password).length - password.length\n    score += this._checkRepetition(3, password).length - password.length\n    score += this._checkRepetition(4, password).length - password.length\n\n    // password has 3 numbers\n    if (password.match(/(.*[0-9].*[0-9].*[0-9])/)) {\n      score += 5\n    }\n\n    // password has at least 2 sybols\n    let symbols: RegExp | string = '.*[!,@,#,$,%,^,&,*,?,_,~]';\n    symbols = new RegExp('(' + symbols + symbols + ')')\n    if (password.match(symbols)) {\n      score += 5\n    }\n\n    // password has Upper and Lower chars\n    if (password.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)) {\n      score += 10\n    }\n\n    // password has number and chars\n    if (password.match(/([a-zA-Z])/) && password.match(/([0-9])/)) {\n      score += 15\n    }\n\n    // password has number and symbol\n    if (password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([0-9])/)) {\n      score += 15\n    }\n\n    // password has char and symbol\n    if (password.match(/([!,@,#,$,%,^,&,*,?,_,~])/) && password.match(/([a-zA-Z])/)) {\n      score += 15\n    }\n\n    // password is just numbers or chars\n    if (password.match(/^\\w+$/) || password.match(/^\\d+$/)) {\n      score -= 10\n    }\n\n    if (score > 100) {\n      score = 100\n    }\n\n    if (score < 0) {\n      score = 0\n    }\n\n    return score\n  }\n\n  /**\n   * Checks for repetition of characters in\n   * a string\n   *\n   * @param int rLen Repetition length.\n   * @param string str The string to be checked.\n   * @return string\n   */\n  private _checkRepetition(rLen, str) {\n    var res = '',\n      repeated = false\n    for (var i = 0; i < str.length; i++) {\n      repeated = true\n      for (var j = 0; j < rLen && j + i + rLen < str.length; j++) {\n        repeated = repeated && str.charAt(j + i) === str.charAt(j + i + rLen)\n      }\n      if (j < rLen) {\n        repeated = false\n      }\n      if (repeated) {\n        i += rLen - 1\n        repeated = false\n      } else {\n        res += str.charAt(i)\n      }\n    }\n    return res\n  }\n\n  /**\n   * Returns strings based on the score given.\n   *\n   * @param int score Score base.\n   * @return string\n   */\n   public scoreText(score) {\n\n    if (score === -1) {\n      return this._config.shortPass;\n    } else if (score === -2) {\n      return this._config.enterPass;\n    }\n\n    score = score < 0 ? 0 : score\n\n    if (score < 26) {\n      return this._config.shortPass\n    }\n    if (score < 51) {\n      return this._config.badPass\n    }\n    if (score < 76) {\n      return this._config.goodPass\n    }\n\n    return this._config.strongPass\n  }\n\n  public scoreColor(score) {\n    if (score === -1) {\n      return 'danger'\n    }\n    if (score === -2) {\n      return 'muted'\n    }\n\n    score = score < 0 ? 0 : score\n\n    if (score < 26) {\n      return 'danger'\n    }\n    if (score < 51) {\n      return 'warning'\n    }\n    if (score < 76) {\n      return 'success'\n    }\n\n    return 'success'\n  }\n}","import {\n  Component, Input, ChangeDetectionStrategy, forwardRef,\n  AfterContentInit, Output, EventEmitter, ChangeDetectorRef, ViewChild, ElementRef, ContentChildren, QueryList, AfterContentChecked, OnInit, HostListener\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { merge } from 'rxjs';\nimport { InputType, INPUT_TYPES } from '../models/InputType';\nimport { Util } from '../util/util';\nimport { FormInputPasswordUtils } from './form-input-password.utils';\nimport { ItPrefixDirective } from './it-prefix.directive';\nimport { ItSuffixDirective } from './it-suffix.directive';\nimport { ItTextPrefixDirective } from './it-text-prefix.directive';\nimport { ItTextSuffixDirective } from './it-text-suffix.directive';\n\nlet identifier = 0;\n\nexport class FormInputChange {\n  constructor(\n    public source: FormInputComponent,\n    public value: any\n  ) { }\n}\n\nexport interface PasswordStrengthMeterConfig {\n  /** Testo per il punteggio di forza della password minimo */\n  shortPass: string,\n  /** Testo per punteggio di forza della password basso\t */\n  badPass: string,\n  /** Testo per punteggio di forza della password buono\t */\n  goodPass: string,\n  /** Testo per il punteggio di forza della password massimo\t */\n  strongPass: string,\n  /** Testo di aiuto */\n  enterPass: string,\n  /** Testo per avvertire che il CAPS LOCK è inserito\t */\n  alertCaps: string,\n  /** Lunghezza minima per il calcolo della forza della password (soglia password molto debole)\t */\n  showText: boolean,\n  /** Attiva/disattiva la visibilità dei messaggi di errore\t */\n  minimumLength: number,\n}\n\n\n/**\n * Elemento disponibile per l'autocompletamento del it-form-input\n */\nexport interface AutoCompleteItem {\n  /** Valore voce di autocompletamento */\n  value: string;\n  /** Opzionale. Path in cui ricercare l'immagine dell'avatar da posizionare a sinistra della voce di autocompletamento */\n  avatarSrcPath?: string;\n  /** Opzionale. Testo in alternativa dell'avatar per accessibilità */\n  avatarAltText?: string;\n  /** Opzionale. Icona posizionata a sinistra della voce di autocompletamento */\n  icon?: string;\n  /** Opzionale. Label posizionata a destra della voce di autocompletamento */\n  label?: string;\n  /** Opzionale. Link relativo all'elemento */\n  link?: string\n}\n\n/**\n * Elementi e stili per la creazione di input accessibili e responsivi.\n */\n@Component({\n  selector: 'it-input',\n  templateUrl: './form-input.component.html',\n  styleUrls: ['./form-input.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FormInputComponent),\n    multi: true\n  }]\n})\nexport class FormInputComponent implements OnInit, AfterContentInit, ControlValueAccessor {\n\n  private _formInputPasswordUtils: FormInputPasswordUtils;\n\n  @ContentChildren(ItPrefixDirective, {descendants: true}) _prefixChildren: QueryList<ItPrefixDirective>;\n  @ContentChildren(ItTextPrefixDirective, {descendants: true}) _textPrefixChildren: QueryList<ItTextPrefixDirective>;\n\n  @ContentChildren(ItSuffixDirective, {descendants: true}) _suffixChildren: QueryList<ItSuffixDirective>;\n  @ContentChildren(ItTextSuffixDirective, {descendants: true}) _textSuffixChildren: QueryList<ItTextSuffixDirective>;\n\n  INPUT_TYPES = INPUT_TYPES;\n\n  @ViewChild('inputElement', { static: false })\n  private _inputElement: ElementRef;\n\n  /**\n   * Opzionale. Indica se mostrare gli input readonly nella forma stilizzata come testo normale\n   */\n  @Input()\n  get readonlyPlainText(): boolean { return this._readonlyPlainText; }\n  set readonlyPlainText(value: boolean) { this._readonlyPlainText = Util.coerceBooleanProperty(value); }\n  private _readonlyPlainText: boolean = false;\n\n\n  /**\n   * Opzionale. Indica se abilitare il controllo sulla sicurezza della password\n   */\n  @Input()\n  get enablePasswordStrengthMeter(): boolean { return this._enablePasswordStrengthMeter; }\n  set enablePasswordStrengthMeter(value: boolean) { this._enablePasswordStrengthMeter = Util.coerceBooleanProperty(value); }\n  private _enablePasswordStrengthMeter: boolean = false;\n\n  /**\n   * Punteggio di sicurezza calcolato in base alla password immessa se enablePasswordStrengthMeter ha valore true\n   */\n  passwordScore: number = 0;\n\n  /**\n   * Dimensione dell'input di autocomplete. Di default ha dimensione standard.\n   */\n  @Input() autocompleteWrapperSize: 'big' | 'default' = 'default';\n\n  private _passwordStrengthMeterConfig: PasswordStrengthMeterConfig = FormInputPasswordUtils.DEFAULT_CONFIG;\n\n  @Input() set passwordStrengthMeterConfig(newConfig: PasswordStrengthMeterConfig) {\n    this._passwordStrengthMeterConfig = {...this._passwordStrengthMeterConfig, ...newConfig};\n  }\n\n  get passwordStrengthMeterConfig(): PasswordStrengthMeterConfig {\n    return this._passwordStrengthMeterConfig;\n  }\n\n  /**\n   * Indica l'id dell'elemento HTML\n   */\n  @Input()\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n  }\n  private _id = `form-input-${identifier++}`;\n\n  /**\n   * Indica l'attributo name del componente HTML\n   */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(value: string) {\n    this._name = value;\n  }\n  private _name: string;\n\n  /**\n   * Indica il tipo di campo. Puo' assumere i valori text, email, password e number\n   */\n  @Input()\n  get type(): string {\n    return this._type;\n  }\n  set type(value: string) {\n    if (InputType.is(value)) {\n      if (value === INPUT_TYPES.NUMBER) {\n        if (isNaN(Number(this.value))) {\n          this.value = '';\n          this.onChange();\n        }\n      }\n      this._type = value;\n    } else {\n      this._type = INPUT_TYPES.TEXT;\n    }\n\n    this._isPasswordMode = this._type === INPUT_TYPES.PASSWORD;\n    this._isPasswordVisible = false;\n    this.showAutocompletion = false;\n  }\n  private _type = INPUT_TYPES.TEXT;\n\n  /**\n   * Indica il valore della label da visualizzare\n   */\n  @Input()\n  get label(): string { return this._label; }\n  set label(value: string) { this._label = value; }\n  private _label: string;\n\n  /**\n   * Indica se la label dell'input deve essere visualizzata dall'utente o solamente visibile per lo screen reader\n   */\n  @Input()\n  get labelVisuallyHidden(): boolean { return this._labelVisuallyHidden; }\n  set labelVisuallyHidden(value: boolean) { this._labelVisuallyHidden = value; }\n  private _labelVisuallyHidden: boolean = false;\n\n\n  /**\n   * Indica il valore che avrà l'attributo HTML \"min\" per l'input di tipo number\n   */\n  @Input()\n  get min(): number { return this._min; }\n  set min(value: number) { this._min = Util.coerceNumberProperty(value); }\n  private _min: number;\n   \n  /**\n   * Indica il valore che avrà l'attributo HTML \"max\" per l'input di tipo number\n   */\n  @Input()\n  get max(): number { return this._max; }\n  set max(value: number) { this._max = Util.coerceNumberProperty(value); }\n  private _max: number;\n\n  /**\n   * Indica il valore che avrà l'attributo HTML \"step\" per l'input di tipo number\n   */\n  @Input()\n  get step(): number { return this._step; }\n  set step(value: number) { this._step = Util.coerceNumberProperty(value); }\n  private _step: number = 1;\n\n\n  /**\n   * Indica il testo di aiuto sotto la input\n   */\n  @Input()\n  get note(): string { return this._note; }\n  set note(value: string) { this._note = value; }\n  private _note: string;\n\n  /**\n   * Indica il testo presente nel campo vuoto. Nel caso sia già presente la label, il placeholder non verrà mostrato\n   */\n  @Input()\n  get placeholder(): string {\n    return this._placeholder || '';\n  }\n  set placeholder(value: string) { this._placeholder = value; }\n  private _placeholder: string;\n\n  /**\n   * Indica l'icona da visualizzare a sinistra del campo di input\n   */\n  @Input()\n  get icon(): string { return this._icon; }\n  set icon(value: string) { this._icon = value; }\n  private _icon: string;\n\n  /**\n   * Opzionale.\n   * Indica se il campo in questione è disabilitato.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = Util.coerceBooleanProperty(value); }\n  private _disabled = false;\n\n   /**\n   * Opzionale.\n   * Nel caso di input numerico, indica se il campo è una valuta.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get currency(): boolean { return this._currency; }\n  set currency(value: boolean) { this._currency = Util.coerceBooleanProperty(value); }\n  private _currency = false;\n\n   /**\n   * Opzionale.\n   * Nel caso di input numerico, indica se il campo è una percentuale.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get percentage(): boolean { return this._percentage; }\n  set percentage(value: boolean) { this._percentage = Util.coerceBooleanProperty(value); }\n  private _percentage = false;\n\n  /**\n   * Opzionale.\n   * Nel caso di input numerico, indica se il campo si deve ridimensionare automaticamente a seconda del valore contenuto in esso.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get adaptive(): boolean { return this._adaptive; }\n  set adaptive(value: boolean) { this._adaptive = Util.coerceBooleanProperty(value); }\n  private _adaptive = false;\n\n  /**\n   * Opzionale.\n   * Indica se il campo in questione è di sola lettura.\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get readonly(): boolean { return this._readonly; }\n  set readonly(value: boolean) { this._readonly = Util.coerceBooleanProperty(value); }\n  private _readonly = false;\n\n  get value(): any { return this._inputElement?.nativeElement?.value; }\n  set value(value: any) { \n    if(this._inputElement) {\n      this._inputElement.nativeElement.value = value;\n    } \n  }\n\n  /**\n   * Opzionale.\n   * Disponibile solo se il type è search.\n   * Indica la lista di elementi ricercabili su cui basare il sistema di autocompletamento della input\n   */\n  @Input()\n  get autoCompleteData(): Array<AutoCompleteItem> { return this._autoCompleteData; }\n  set autoCompleteData(value: Array<AutoCompleteItem>) { this._autoCompleteData = value; }\n  private _autoCompleteData: Array<AutoCompleteItem>;\n\n  /**\n   * Evento emesso quando il valore dell'input cambia.\n   * Gli eventi di change sono emessi soltanto quando il valore cambia a causa dell'interazione dell'utente\n   * con il campo d'input.\n   */\n  @Output()\n  readonly change: EventEmitter<FormInputChange> = new EventEmitter<FormInputChange>();\n\n  /**\n   * Opzionale.\n   * Indica se disabilitare l'avviso di CAPS LOCK attivo\n   * Accetta una espressione booleana o può essere usato come attributo senza valore\n   */\n  @Input()\n  get disableCapsLockAlert(): boolean { return this._disableCapsLockAlert; }\n  set disableCapsLockAlert(value: boolean) { this._disableCapsLockAlert = Util.coerceBooleanProperty(value); }\n  private _disableCapsLockAlert = false;\n\n  /**\n   * Indica se è attivo il CAPS LOCK\n   */\n  isCapsLockActive = false;\n\n  /**\n   * La label da mostrare in caso sia attivo il CAPS LOCK\n   */\n  @Input() capsLockActiveLabel = 'CAPS LOCK inserito';\n\n  get isLabelActive() {\n    return this._isLabelActive;\n  }\n  set isLabelActive(value: boolean) {\n    const newValue = Util.coerceBooleanProperty(value);\n   \n    // In alcuni casi la label deve essere sempre posizionata sopra l'input per evitare sovrapposizioni \n    // di testo, come in caso di presenza del placeholder o per l'input di tipo \"date\" o \"time\"\n    if(newValue || (!this.value && !this.placeholder && this.type !== INPUT_TYPES.TIME && \n                    this.type !== INPUT_TYPES.DATE && this.type !== INPUT_TYPES.NUMBER)) {\n      this._isLabelActive = newValue;\n    } else {\n      this._isLabelActive = true;\n    }\n  }\n  private _isLabelActive: boolean;\n\n\n  get isPasswordMode() {\n    return this._isPasswordMode;\n  }\n  set isPasswordMode(value: boolean) {\n    this._isPasswordMode = Util.coerceBooleanProperty(value);\n  }\n  private _isPasswordMode = false;\n\n  get isPasswordVisible() {\n    return this._isPasswordVisible;\n  }\n  set isPasswordVisible(value: boolean) {\n    this._isPasswordVisible = Util.coerceBooleanProperty(value);\n    this._type = this._isPasswordVisible ? INPUT_TYPES.TEXT : INPUT_TYPES.PASSWORD;\n  }\n  private _isPasswordVisible = false;\n\n  showAutocompletion = false;\n  private _isInitialized = false;\n  private _controlValueAccessorChangeFn: (value: any) => void = () => { };\n  private _onTouched: () => any = () => { };\n\n  /** Indica se è stato effettuato il focus sul campo di input */\n  focus: boolean = false;\n\n  private _emitChangeEvent(): void {\n    if (this._isInitialized) {\n      this.change.emit(new FormInputChange(this, this.value));\n    }\n  }\n\n  ngOnInit(): void {\n    this.isLabelActive = false;\n    this._formInputPasswordUtils = new FormInputPasswordUtils(this.passwordStrengthMeterConfig);\n  }\n\n\n  writeValue(value: any): void {\n    this.value = value;\n    if (this.value) {\n      this.isLabelActive = true;\n    }\n\n    this.onChange();\n    if (this._isInitialized) {\n      this._changeDetector.detectChanges();\n    }\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  constructor(private _changeDetector: ChangeDetectorRef) { }\n\n\n  ngAfterContentInit(): void {\n    this._isInitialized = true;\n\n    // Run change detection if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes,\n          this._textPrefixChildren.changes, this._textSuffixChildren.changes\n    ).subscribe(() => {\n      this._changeDetector.markForCheck();\n    });\n    \n  }\n\n  onChange() {\n    this._emitChangeEvent();\n    this._controlValueAccessorChangeFn(this.value);\n  }\n\n  onInput() {\n    if(this.isPasswordMode && this._enablePasswordStrengthMeter) {\n      this.recalculatePasswordStrength();\n    }\n\n    this.showAutocompletion = this._type === INPUT_TYPES.SEARCH && this.isAutocompletable() && this.value;\n   \n    this._emitChangeEvent();\n    this._controlValueAccessorChangeFn(this.value);\n  }\n\n  onFocus() {\n    this.focus = true;\n    this.isLabelActive = true;\n  }\n\n  onBlur() {\n    this.focus = false;\n    const inputValue: string = this.value;\n    if (!inputValue || inputValue.length === 0) {\n     \n      this.isLabelActive = false;\n      \n      if (this.type === INPUT_TYPES.NUMBER) {\n        this.value = '';\n      }\n    }\n  }\n\n  get noteId() {\n    return `${this.id}-note`;\n  }\n\n  getRelatedEntries() {\n    if (this.value) {\n      const lowercaseValue = this.value.toLowerCase();\n      const lowercaseData = this._autoCompleteData.filter((item) => item.value).map(item => {\n        return { ...item, original : item.value, lowercase : item.value.toLowerCase() };\n      });\n\n      const relatedEntries = [];\n      lowercaseData.forEach(lowercaseEntry => {\n        const matching = (lowercaseEntry.lowercase).includes(lowercaseValue);\n        if (matching) {\n          relatedEntries.push(lowercaseEntry);\n        }\n      });\n\n      return relatedEntries;\n    } else {\n      return [];\n    }\n  }\n\n  isAutocompletable() {\n    if (this._autoCompleteData && this._type === INPUT_TYPES.SEARCH) {\n      return this._autoCompleteData.length > 0;\n    } else {\n      return false;\n    }\n  }\n\n  onEntryClick(entry: AutoCompleteItem, event: Event) {\n    // Se non è stato definito un link associato all'elemento dell'autocomplete, probabilmente il desiderata \n    // non è effettuare la navigazione al default '#', pertanto in tal caso meglio annullare la navigazione.\n    if(!entry.link) {\n      event.preventDefault();\n    }\n    this.value = entry.value;\n    this.showAutocompletion = false;\n    this.onChange();\n  }\n\n  /**\n   * indica se il campo di input è composto da altri elementi accessori come \n   * icone o bottoni da posizionare adiacenti al campo di input\n   */\n  get isInputGroup(): boolean {\n    return  this._textPrefixChildren.length > 0 || this._prefixChildren.length > 0 || !!this.icon \n            || this._suffixChildren.length > 0 || this._textSuffixChildren.length > 0;\n  }\n\n\n  /**\n   * Ricalcola il punteggio di sicurezza in base al valore corrente\n   */\n  recalculatePasswordStrength(): void {\n    this.passwordScore = this._formInputPasswordUtils.calculateScore(this.value);\n  }\n  \n\n  get passwordScoreText(): string {\n    return this._formInputPasswordUtils.scoreText(this.passwordScore);\n  }\n\n  get passwordScoreColor(): string {\n    return this._formInputPasswordUtils.scoreColor(this.passwordScore);\n  }\n\n  get valueLength(): number {\n    if(!this.value) {\n      return 0;\n    }\n    return (this.value as string | number).toString().length;\n  }\n \n\n  @HostListener('window:click', ['$event'])\n  @HostListener('window:keydown', ['$event'])\n  @HostListener('window:keyup', ['$event'])\n  onKeyUp(event: KeyboardEvent): void {\n    this.isCapsLockActive = event.getModifierState && event.getModifierState('CapsLock');\n  }\n\n\n  autocompleteItemTrackByValueFn(index: number, item: AutoCompleteItem) {\n    return item.value;\n  }\n\n\n  /**\n   * Incrementa il valore dell'input numerico di tanto quanto vale lo step\n   */\n  incrementNumberValue(): void {\n    if(this.type === INPUT_TYPES.NUMBER) {\n      const tempValue = +this.value + this.step;\n      if(this.max === undefined || tempValue <= this.max) {\n        this.value = tempValue;\n      }\n    }\n  }\n\n  /**\n   * Decrementa il valore dell'input numerico di tanto quanto vale lo step\n   */\n  decrementNumberValue(): void {\n    if(this.type === INPUT_TYPES.NUMBER ) {\n      const tempValue = +this.value - this.step;\n      if(this.min === undefined || tempValue >= this.min) {\n        this.value = tempValue;\n      }\n    }\n  }\n}\n\n","<div class=\"form-group\" [class.autocomplete-wrapper-big]=\"autocompleteWrapperSize === 'big'\">\n  <div class=\"input-group\" *ngIf = \"isInputGroup; else formInputWithLabel\">\n      <ng-container *ngIf=\"_textPrefixChildren.length || _prefixChildren.length || icon\">\n        <div class=\"input-group-prepend\">\n\n          <!-- Gli elementi figli di \"it-input\" con la direttiva \"itTextPrefix\"  -->\n          <ng-container *ngIf=\"_textPrefixChildren.length || icon\">\n\n            <div class=\"input-group-text\" >\n              <ng-container *ngIf=\"icon\">\n                <it-icon [icon] = \"icon\" size=\"icon-sm\"></it-icon>\n              </ng-container>\n\n              <ng-container *ngIf=\"_textPrefixChildren.length\">\n                <ng-content select = \"[itTextPrefix]\"></ng-content>\n              </ng-container>\n            </div>\n          </ng-container>\n         \n          <ng-container *ngIf=\"_prefixChildren.length\">\n            <!-- Gli elementi figli di \"it-input\" con la direttiva \"itPrefix\"  -->\n            <ng-content select = \"[itPrefix]\"></ng-content>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <ng-container [ngTemplateOutlet]=\"formInputWithLabel\"></ng-container>\n\n      <ng-container *ngIf=\"_suffixChildren.length || _textSuffixChildren.length\">\n        <div  class=\"input-group-append\">\n          <!-- Gli elementi figli di \"it-input\" con la direttiva \"itTextSuffix\"  -->\n          <ng-container *ngIf=\"_textSuffixChildren.length\">\n            <div class=\"input-group-text\" >\n              <ng-content select = \"[itTextSuffix]\"></ng-content>\n            </div>\n          </ng-container>\n         \n          <ng-container *ngIf=\"_suffixChildren.length\">\n            <!-- Gli elementi figli di \"it-input\" con la direttiva \"itSuffix\"  -->\n            <ng-content select = \"[itSuffix]\"></ng-content>\n          </ng-container>\n        </div>\n      </ng-container>\n      \n    \n  </div>\n\n\n\n  <ng-template #formInput>\n      <input #inputElement\n        (focus)=\"onFocus()\"\n        (blur)=\"onBlur()\"\n        (change)=\"onChange()\"\n        (input)=\"onInput()\"\n        [type]=\"type\"\n        [id]=\"id\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [step]=\"step\"\n        [class.focus--mouse]=\"focus\"\n        [class.input-password]=\"isPasswordMode\"\n        [attr.name]=\"name\"\n        [disabled]=\"disabled\"\n        [readonly]=\"readonly\"\n        [placeholder]=\"placeholder\"\n        [style.width]=\"adaptive && valueLength ? 'calc(44px + ' + valueLength + 'ch)' : null\"\n        [ngClass]=\"{\n          'form-control' : (!readonly || !readonlyPlainText) && type !== INPUT_TYPES.NUMBER,\n          'form-control-plaintext' : readonly && readonlyPlainText,\n          'autocomplete' : isAutocompletable()\n        }\"\n      [attr.aria-describedby]=\"note ? noteId : undefined\"/>  \n  </ng-template>\n\n\n\n  <ng-template #formInputWithLabel>\n      <label  [attr.for]=\"id\" *ngIf=\"label\" \n              [class.visually-hidden]=\"labelVisuallyHidden\"\n              [class.input-number-label]=\"type === INPUT_TYPES.NUMBER\"\n              [class.active] = \"isLabelActive && !labelVisuallyHidden\" >\n        {{label}}\n      </label>\n    \n      <!-- INIZIO gestione input di tipo NUMBER -->\n\n      <ng-container *ngIf=\"type === INPUT_TYPES.NUMBER; else formInput\">\n        <span class=\"input-number\" \n              [class.input-number-adaptive]=\"adaptive\"\n              [class.input-number-currency]=\"currency\" \n              [class.input-number-percentage]=\"percentage\">\n\n          <ng-container [ngTemplateOutlet]=\"formInput\"></ng-container>\n\n          <button class=\"input-number-add\" (click)=\"incrementNumberValue()\" focusMouse>\n            <span class=\"visually-hidden\">Aumenta valore di {{step}} Euro</span>\n          </button>\n          <button class=\"input-number-sub\" (click)=\"decrementNumberValue()\" focusMouse>\n            <span class=\"visually-hidden\">Diminuisci valore di {{step}} Euro</span>\n          </button>\n        </span>\n      </ng-container>\n\n    <!-- FINE gestione input di tipo NUMBER -->\n\n  </ng-template>\n\n  <small [id]=\"noteId\" class=\"form-text\" *ngIf=\"note\">\n    {{note}}\n  </small>\n\n\n  <!-- INIZIO gestione input di tipo PASSWORD -->\n\n  <ng-container *ngIf=\"isPasswordMode\">\n    <!-- Icona dell'occhio per la vedere/nascondere la password -->\n    <span \n      class = \"password-icon\"\n      aria-hidden=\"true\"\n      (click)=\"isPasswordVisible = !isPasswordVisible\">\n      <it-icon [icon]=\"'it-password-' + (isPasswordVisible ? 'invisible' : 'visible')\" size=\"icon-sm\" color=\"default\"></it-icon>\n    </span>\n\n    <!-- Indicatore di sicurezza della password -->\n    <div class=\"password-strength-meter\" *ngIf=\"isPasswordMode && enablePasswordStrengthMeter\">\n      <small class=\"form-text\" \n        [ngClass] = \"['text-' + passwordScoreColor]\"\n        *ngIf = \"passwordStrengthMeterConfig.showText\">{{ passwordScoreText }}\n      </small>\n      <div class=\"password-meter progress rounded-0 position-absolute\">\n        <div class=\"row position-absolute w-100 m-0\">\n          <div class=\"col-3 border-start border-end border-white\"></div>\n          <div class=\"col-3 border-start border-end border-white\"></div>\n          <div class=\"col-3 border-start border-end border-white\"></div>\n          <div class=\"col-3 border-start border-end border-white\"></div>\n        </div>\n\n        <div class=\"progress-bar\" \n          [class]=\"['bg-' + passwordScoreColor]\"\n          role=\"progressbar\" [attr.aria-valuenow]=\"passwordScore >= 0 ? passwordScore : 0\" aria-valuemin=\"0\" aria-valuemax=\"100\" [style.width.%]=\"passwordScore >= 0 ? passwordScore : 0\">\n        </div>\n      </div>\n    </div>\n\n  </ng-container>\n\n <!-- FINE gestione input di tipo PASSWORD -->\n\n\n\n\n  <!-- Avviso CAPS LOCK Attivo -->\n  <small *ngIf=\"isCapsLockActive && !disableCapsLockAlert && type !== INPUT_TYPES.NUMBER\" class=\"password-caps form-text text-warning position-absolute bg-white w-100\">{{capsLockActiveLabel}}</small>\n\n\n\n  <!-- INIZIO gestione AUTOCOMPLETAMENTO -->\n\n\n  <!-- Icona lente per autocompletamento -->\n  <span class=\"autocomplete-icon\" aria-hidden=\"true\" *ngIf=\"isAutocompletable()\">\n    <it-icon icon = \"it-search\" size=\"icon-sm\" color=\"default\"></it-icon>\n  </span>\n\n\n  <!-- Lista di autocompletamento -->\n  <ul class=\"autocomplete-list\" *ngIf=\"isAutocompletable()\"  [class.autocomplete-list-show]=\"showAutocompletion\">\n    <li *ngFor=\"let entry of getRelatedEntries(); trackBy: autocompleteItemTrackByValueFn\" (click)=\"onEntryClick(entry, $event)\">\n      <a [href]=\"entry.link\" >\n        <ng-container *ngTemplateOutlet=\"autocompleteItemTemplate\"></ng-container>\n      </a>\n      <ng-template #autocompleteItemTemplate>\n        <div class=\"avatar size-sm\" *ngIf=\"entry.avatarSrcPath\">\n          <img [src]=\"entry.avatarSrcPath\" [alt]=\"entry.avatarAltText\">\n        </div>\n        <it-icon *ngIf=\"entry.icon\" [icon]=\"entry.icon\" size=\"icon-sm\"></it-icon>\n        <span class=\"autocomplete-list-text\">\n          <span [innerHTML] = \"entry.original | markMatchingText: value\"></span>\n          <em *ngIf=\"entry.label\">{{entry.label}}</em>\n        </span>\n      </ng-template>\n    </li>\n  </ul>\n\n</div>\n\n  <!-- FINE gestione AUTOCOMPLETAMENTO -->","import { Directive } from \"@angular/core\";\n\n@Directive({\n    selector: '[itPrefix]'\n})\nexport class ItPrefixDirective {}\n","import { Directive } from \"@angular/core\";\n\n@Directive({\n    selector: '[itSuffix]'\n})\nexport class ItSuffixDirective {}","import { Directive } from \"@angular/core\";\n\n@Directive({\n    selector: '[itTextPrefix]'\n})\nexport class ItTextPrefixDirective {}\n","import { Directive } from '@angular/core';\n\n@Directive({\n    selector: '[itTextSuffix]'\n})\nexport class ItTextSuffixDirective {}\n","import { Pipe, PipeTransform } from \"@angular/core\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Pipe({\n    name: 'markMatchingText'\n}) \nexport class MarkMatchingTextPipe implements PipeTransform {\n    constructor(private domSanitizer: DomSanitizer) {}\n\n    transform(allString: string, searchString: string): any {\n        if (!searchString) { \n            return allString; \n        } else if(!allString) {\n            return \"\";\n        }\n        // Check if search string is a substring of pivot string (no case-sensitive)\n        const idxOfMatchString = allString.toLowerCase().indexOf(searchString.toLowerCase());\n        if(idxOfMatchString !== -1) {\n            // retrieve the exactly substring\n            const matchingString = allString.substring(idxOfMatchString, idxOfMatchString + searchString.length);\n            // Replace original string marking as <strong> (bold) the matchinng substring\n            const regEx = new RegExp('(' + matchingString + ')', 'gi')\n            const res = allString.replace(regEx, '<mark>$1</mark>');\n            return this.domSanitizer.bypassSecurityTrustHtml(res);\n        } \n\n        return allString;\n        \n    }\n\n    \n}","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input} from '@angular/core';\nimport {IconBackgroundColorEnum, IconColorEnum, IconSizeEnum} from '../enums/icons.enum';\nimport { HorizontalAlign, VerticalAlign, VERTICAL_ALIGN } from '../models/Alignment';\n\n@Component({\n  selector: 'it-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconComponent  {\n\n  private static readonly ICON_BASE_URL = 'bootstrap-italia/dist/svg/sprites.svg#';\n\n  constructor(private _cdr: ChangeDetectorRef) { }\n\n  changeColor(color: IconColorEnum) {\n    if(this.color !== color) {\n      this.color = color;\n      this._cdr.markForCheck();\n    }\n  }\n\n  @Input() rounded: boolean = false;\n  @Input() roundedColor: IconColorEnum = null;\n\n  get roundedColorClass(): string {\n    return this.roundedColor ? ' rounded-' + this.roundedColor : '';\n  }\n\n\n  @Input() set icon(newIcon: string) {\n    if(newIcon) {\n      this.svgPath = IconComponent.ICON_BASE_URL + newIcon;\n      this.iconName = newIcon;\n    } else {\n      this.svgPath = null;\n    }\n  }\n\n  protected iconName: string = '';\n\n  @Input() wai = 'wai';\n\n  @Input() size: IconSizeEnum = IconSizeEnum.default;\n  @Input() color: IconColorEnum = IconColorEnum.primary;\n  @Input() bgColor: IconBackgroundColorEnum = null;\n\n  @Input() padded = false;\n  @Input() expand = false;\n\n  /**\n   * Allineamento orizzontale dell'icona rispetto al contenitor: 'left' | 'right'\n   */\n  @Input() position: HorizontalAlign = HorizontalAlign.right;\n\n  private _verticalAlign: VerticalAlign =  VerticalAlign.middle;\n\n  /**\n   * Allineamento verticale dell'icona rispetto al contenitore: 'top' | 'middle' | 'bottom'\n   */\n  get verticalAlign() {\n    return this._verticalAlign;\n  }\n\n  @Input() set verticalAlign(value: any) {\n    if (VERTICAL_ALIGN.is(value)) {\n      this._verticalAlign = value as VerticalAlign;\n    } else {\n      this._verticalAlign = VerticalAlign.middle;\n    }\n  }\n\n  svgPath: string = null;\n\n}\n","<ng-container *ngIf = \"iconName && svgPath\">\n  <ng-container *ngIf = \"rounded; else svgIcon\">\n    <span [class] = \"'rounded-icon' + roundedColorClass\">\n      <ng-container *ngTemplateOutlet=\"svgIcon\"></ng-container>\n    </span>\n  </ng-container>\n</ng-container>\n<ng-template #svgIcon>\n  <svg\n  class=\"icon {{iconName}} {{size}} icon-{{color}} {{ bgColor ? 'bg-' + bgColor : '' }} {{position}} align-{{verticalAlign}}\" \n  [class.icon-expand]=\"expand\" [class.icon-padded]=\"padded\">\n\n  <use [attr.xlink:href]=\"svgPath\" [attr.href]=\"svgPath\"></use>\n</svg> \n</ng-template>","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { IconComponent } from \"./icon.component\";\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent]\n})\nexport class ItIconModule {}","import * as t from 'io-ts';\n\n\nexport enum VerticalAlign {\n  top = \"top\",\n  middle = 'middle',\n  bottom = 'bottom'\n}\n\nexport enum HorizontalAlign {\n  left = 'left',\n  right = 'right'\n}\n\nexport const HORIZONTAL_ALIGN = t.keyof(HorizontalAlign);\nexport const VERTICAL_ALIGN = t.keyof(VerticalAlign);\n","import * as t from 'io-ts';\n\nexport const ButtonSize = t.keyof({\n  lg: null,\n  sm: null,\n  xs: null,\n});\n\nconst LG = 'lg';\nconst SM = 'sm';\nconst XS = 'xs';\n\nexport const BUTTON_SIZES = {\n  LG: LG,\n  SM: SM,\n  XS: XS,\n};\n","import * as t from 'io-ts';\n\nexport const InputType = t.keyof({\n  text: null,\n  email: null,\n  password: null,\n  number: null,\n  time: null,\n  search: null,\n  date: null,\n  radio: null,\n  checkbox: null,\n  textarea: null,\n  button: null,\n  reset: null,  \n  submit: null,\n  'datetime-local': null,\n  hidden: null,\n  image: null,\n  month: null,\n  range: null,\n  tel: null,\n  url: null,\n  week: null,\n  datetime: null,\n  color: null,\n  file: null\n});\n\nconst TEXT = 'text';\nconst EMAIL = 'email';\nconst PASSWORD = 'password';\nconst NUMBER = 'number';\nconst TIME = 'time';\nconst SEARCH = 'search';\nconst DATE = 'date';\n\nexport const INPUT_TYPES = {\n  TEXT: TEXT,\n  EMAIL: EMAIL,\n  PASSWORD: PASSWORD,\n  NUMBER: NUMBER,\n  SEARCH: SEARCH,\n  TIME: TIME,\n  DATE: DATE\n};\n","import * as t from 'io-ts';\n\nexport const ThemeColor = t.keyof({\n  primary: null,\n  secondary: null,\n  danger: null,\n  warning: null,\n  info: null,\n  success: null,\n  light: null,\n  dark: null,\n});\n\nconst PRIMARY = 'primary';\nconst SECONDARY = 'secondary';\nconst DANGER = 'danger';\nconst WARNING = 'warning';\nconst INFO = 'info';\nconst SUCCESS = 'success';\nconst LIGHT = 'light';\nconst DARK = 'dark';\n\nexport const THEME_COLORS = {\n  PRIMARY: PRIMARY,\n  SECONDARY: SECONDARY,\n  DANGER: DANGER,\n  WARNING: WARNING,\n  INFO: INFO,\n  SUCCESS: SUCCESS,\n  LIGHT: LIGHT,\n  DARK: DARK\n};\n","\nimport { Injectable } from '@angular/core';\nimport { NgbPopoverConfig } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * Servizio di configurazione per la direttiva ItPopover.\n * Il servizio può essere iniettato, tipicamente in un root component, per impostare i valori delle proprietà in\n * modo tale da fornire i valori di default per tutti i popover utilizzati in un'applicazione.\n */\n@Injectable({providedIn: 'root'})\nexport class ItPopoverConfig extends NgbPopoverConfig {}\n","import {\n    Directive,\n    Input,\n    OnInit,\n    OnDestroy,\n    OnChanges,\n    Inject,\n    Injector,\n    Renderer2,\n    ElementRef,\n    TemplateRef,\n    ViewContainerRef,\n    NgZone,\n    ChangeDetectorRef,\n    ApplicationRef\n  } from '@angular/core';\n  import {DOCUMENT} from '@angular/common';\nimport { NgbPopover } from '@ng-bootstrap/ng-bootstrap';\nimport { ItPopoverConfig } from './popover.config';\n  \n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\n@Directive({selector: '[itPopover]', exportAs: 'itPopover'})\nexport class ItPopover extends NgbPopover implements OnInit, OnDestroy, OnChanges {\n \n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are falsy, the popover won't open.\n   */\n  @Input() itPopover:  string | TemplateRef<any>| null | undefined;\n\n  constructor(\n      _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2, injector: Injector,\n      viewContainerRef: ViewContainerRef, config: ItPopoverConfig, _ngZone: NgZone,\n      @Inject(DOCUMENT) _document: any, _changeDetector: ChangeDetectorRef,\n      applicationRef: ApplicationRef) {\n        super(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef);\n  }\n\n  ngOnInit(): void {\n      super.ngOnInit();\n      super.ngbPopover = this.itPopover;\n      this.popoverClass = 'it-popover-window';\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n  }\n}","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NgbPopoverModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ItPopover } from \"./popover.directive\";\n\n@NgModule({\n    declarations: [ItPopover],\n    exports: [ItPopover],\n    imports: [CommonModule, NgbPopoverModule]\n})\nexport class ItPopoverModule {}","import {\n  Component,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Inject,\n  Input,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ThemeColor, THEME_COLORS } from '../models/ThemeColor';\nimport { Util } from '../util/util';\n\nlet progressbarId = 0;\n\n/**\n * Una barra di avanzamento con design bootstrap italia.\n */\n@Component({\n  selector: 'it-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProgressBarComponent {\n\n  public static readonly PROGRESS_BAR_DEFAULT_MIN = 0;\n  public static readonly PROGRESS_BAR_DEFAULT_MAX = 100;\n  public static readonly PROGRESS_BAR_DEFAULT_VALUE = 0;\n  public static readonly PROGRESS_BAR_DEFAULT_LABEL = '';\n\n  progressbarId = `it-progress-bar-${progressbarId++}`;\n\n  /**\n   * Il valore minimo della barra di avanzamento.\n   */\n  @Input()\n  get min(): number { return this._min; }\n  set min(v: number) { this._min = Math.round(v); }\n  private _min = ProgressBarComponent.PROGRESS_BAR_DEFAULT_MIN;\n\n  /**\n   * Il valore massimo della barra di avanzamento.\n   */\n  @Input()\n  get max(): number { return this._max; }\n  set max(v: number) { this._max = Math.round(v); }\n  private _max = ProgressBarComponent.PROGRESS_BAR_DEFAULT_MAX;\n\n  /**\n   * L'attuale valore della barra di avanzamento.\n   */\n  @Input()\n  get value(): number { return this._value; }\n  set value(v: number) { this._value = Math.min(Math.max(v, this._min), this._max); }\n  private _value = ProgressBarComponent.PROGRESS_BAR_DEFAULT_VALUE;\n\n  /**\n   * L'etichetta della barra di avanzamento.\n   */\n  @Input()\n  get label(): string { return this._label; }\n  set label(v: string) { this._label = v; }\n  private _label = ProgressBarComponent.PROGRESS_BAR_DEFAULT_LABEL;\n\n  @Input()\n  get indeterminate(): boolean { return this._indeterminate; }\n  set indeterminate(value: boolean) { this._indeterminate = Util.coerceBooleanProperty(value); }\n  private _indeterminate = false;\n\n  @Input()\n  get indeterminateHiddenText(): string { return this._indeterminateHiddenText; }\n  set indeterminateHiddenText(v: string) { this._indeterminateHiddenText = v; }\n  private _indeterminateHiddenText = \"In elaborazione...\";\n\n  /**\n   * Il colore della barra di avanzamento.\n   */\n  @Input()\n  get color(): any {\n    return this._color;\n  }\n  set color(value: any) {\n    if (ThemeColor.is(value)) {\n      this._color = value;\n    } else {\n      this._color = THEME_COLORS.PRIMARY;\n    }\n  }\n  private _color = THEME_COLORS.PRIMARY;\n\n  valuePercentage(): number {\n    return ((this.value - this.min) * 100) / (this.max - this.min);\n  }\n\n  pgStyle() {\n    return this.indeterminate ? null : { 'width' : this.valuePercentage() + '%' };\n  }\n\n\n  get progressBarClass(): Set<string> {\n    const progressbarClass = new Set<string>();\n    progressbarClass.add('progress-bar');\n    if (this.color) {\n      progressbarClass.add(`bg-${this.color}`);\n    }\n\n    return progressbarClass;\n  }\n\n\n  constructor() { }\n\n}\n","<ng-container *ngIf = \"label; else progressBarEl\">\n  <div class=\"progress-bar-wrapper\">\n    <div class=\"progress-bar-label\"><span class=\"visually-hidden\">Progresso </span>{{label}}</div>\n    <ng-container *ngTemplateOutlet=\"progressBarEl\"></ng-container>\n  </div>\n</ng-container>\n\n<ng-template #progressBarEl>\n  <div class=\"progress\" [class.progress-indeterminate] = \"indeterminate\">\n    <span class=\"visually-hidden\" *ngIf=\"indeterminate && indeterminateHiddenText\">{{indeterminateHiddenText}}</span>\n    <div role=\"progressbar\" [id]=\"progressbarId\" \n      [ngClass]=\"progressBarClass\" \n      [ngStyle]=\"pgStyle()\"\n      [attr.aria-valuenow]=\"value\" [attr.aria-valuemin]=\"min\" [attr.aria-valuemax]=\"max\" >\n    </div>\n  </div>\n</ng-template>","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  forwardRef,\n  ChangeDetectionStrategy,\n  AfterContentInit,\n  Directive,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n  Optional,\n  HostBinding\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { UniqueSelectionDispatcher } from './unique-selection-dispatcher';\n\nlet identifier = 0;\n\nfunction _coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n\nexport class RadioChange {\n  constructor(\n    public source: RadioButtonComponent,\n    public value: any\n  ) { }\n}\n\n@Directive({\n  selector: 'it-radio-group', // tslint:disable-line\n  exportAs: 'itRadioGroup',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioGroupDirective),\n    multi: true\n  }]\n})\nexport class RadioGroupDirective implements AfterContentInit, ControlValueAccessor {\n\n  @HostBinding('attr.role') role = 'radiogroup';\n\n  /**\n   * Il valore selezionato per il gruppo. Dovrebbe essere uguale al valore del radio button selezionato se\n   * *esiste* un radio button con un valore corrispondente. Se *non esiste* un radio button corrispondente\n   * questo valore persiste ed è applicato nel caso in cui un nuovo radio button viene aggiunto con il valore\n   * corrispondente.\n   */\n  private _value: any = null;\n\n  /** L'attributo HTML name da applicare ai radio button in questo gruppo */\n  private _name = `it-radio-group-${identifier++}`;\n\n  /** Il radio button attualmente selezionato. */\n  private _selected: RadioButtonComponent | null = null;\n\n  /** se `value` è stato settato al suo valore iniziale. */\n  private _isInitialized = false;\n\n  /** Se il radio group è disabilitato. */\n  private _disabled = false;\n\n\n\n  /**\n   * Evento emesso quando il valore del gruppo cambia.\n   * Gli eventi di change sono emessi soltanto quando il valore cambia a causa dell'interazione dell'utente\n   * con il radio button (stesso comportamento di `<input type-\"radio\">`).\n   */\n  @Output() readonly change: EventEmitter<RadioChange> = new EventEmitter<RadioChange>();\n\n  /** radio buttons figli. */\n  @ContentChildren(forwardRef(() => RadioButtonComponent), { descendants: true }) _radios: QueryList<RadioButtonComponent>; // tslint:disable-line\n\n  /** Il metodo da chiamare per aggiornare ngModel */\n  _controlValueAccessorChangeFn: (value: any) => void = () => { };\n\n  onTouched: () => any = () => { };\n\n  /** Nome del gruppo di radio button. Tutti i radio button all'interno del gruppo avranno questo nome. */\n  @Input()\n  get name(): string { return this._name; }\n  set name(value: string) {\n    this._name = value;\n    this._updateRadioButtonNames();\n  }\n\n  /** Valore del radio button. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(newValue: any) {\n    if (this._value !== newValue) {\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n\n  _checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n\n  /** Il radio button selezionato. */\n  @Input()\n  get selected() { return this._selected; }\n  set selected(selected: RadioButtonComponent | null) {\n    this._selected = selected;\n    this.value = selected ? selected.value : null;\n    this._checkSelectedRadioButton();\n  }\n\n  /** Se il gruppo è disabled */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = _coerceBooleanProperty(value);\n    this._markRadiosForCheck();\n  }\n\n  constructor(\n    private _changeDetector: ChangeDetectorRef\n  ) { }\n\n  /**\n   * Inizializza le proprietà quando il contenuto dei figliè disponibile.\n   * Questo permette di propagare gli attributi rilevanti ai radio buttons associati.\n   */\n  ngAfterContentInit(): void {\n    this._isInitialized = true;\n  }\n\n  _touch() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  private _updateRadioButtonNames(): void {\n    if (this._radios) {\n      this._radios.forEach(radio => {\n        radio.name = this.name;\n      });\n    }\n  }\n\n  /** Aggiorna il radio button `selected` a seconda del suo _value. */\n  private _updateSelectedRadioFromValue(): void {\n    this._selected = null;\n    this._radios.forEach(radio => {\n      radio.checked = this.value === radio.value;\n      if (radio.checked) {\n        this._selected = radio;\n      }\n    });\n  }\n\n  /** Invia l'evento change con la selezione corrente e il valore del gruppo. */\n  _emitChangeEvent(): void {\n    if (this._isInitialized) {\n      this.change.emit(new RadioChange(this._selected, this._value));\n    }\n  }\n\n  _markRadiosForCheck() {\n    if (this._radios) {\n      this._radios.forEach(radio => radio._markForCheck());\n    }\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n\n/**\n * Un radio button con design bootstrap italia. Supporta tutte le funzionalità di una radio HTML5,\n * ed espone una API simile. Una `<it-radio-button>` può essere checked, unchecked, o disabled.\n */\n@Component({\n  selector: 'it-radio-button',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss'],\n  exportAs: 'itRadioButton',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RadioButtonComponent implements OnInit, OnDestroy {\n\n  id = `radio-${identifier++}`;\n\n  /** Attributo 'name' usato per raggruppare i radio button per un'unica selezione. */\n  @Input() name: string;\n\n  /** L'etichetta delradio button. */\n  @Input()\n  label: string;\n\n  /** se il radio button è checked. */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value: boolean) {\n    const newCheckedState = _coerceBooleanProperty(value);\n    if (this._checked !== newCheckedState) {\n      this._checked = newCheckedState;\n      if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n        this.radioGroup.selected = this;\n      } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n        this.radioGroup.selected = null;\n      }\n\n      if (newCheckedState) {\n        this._radioDispatcher.notify(this.id, this.name);\n      }\n\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /** Il valore di questo radio button. */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    if (this._value !== value) {\n      this._value = value;\n      if (this.radioGroup !== null) {\n        if (!this.checked) {\n          this.checked = this.radioGroup.value === value;\n        }\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n      }\n    }\n  }\n\n  /** Se il radio button è disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n  }\n  set disabled(value: boolean) {\n    const newDisabledState = !!value;\n    if (this._disabled !== newDisabledState) {\n      this._disabled = newDisabledState;\n      this._changeDetector.markForCheck();\n    }\n  }\n\n  /**\n   * Evento emesso quando il valore `checked` del radio button cambia.\n   */\n  @Output() readonly change: EventEmitter<RadioChange> = new EventEmitter<RadioChange>();\n\n  /** Il radio group padre. Può essere presente o meno. */\n  radioGroup: RadioGroupDirective;\n\n  /** Se il radio button è checked. */\n  private _checked = false;\n\n  /** Se il radio button è disabled. */\n  private _disabled: boolean;\n\n  /** il valore assegnato al radio button. */\n  private _value: any = null;\n\n  private _removeUniqueSelectionListener: () => void = () => { };\n\n  constructor(\n    @Optional() radioGroup: RadioGroupDirective,\n    private _changeDetector: ChangeDetectorRef,\n    private _radioDispatcher: UniqueSelectionDispatcher\n  ) {\n    this.radioGroup = radioGroup;\n\n    this._removeUniqueSelectionListener =\n      _radioDispatcher.listen((id: string, name: string) => {\n        if (id !== this.id && name === this.name) {\n          this.checked = false;\n        }\n      });\n  }\n\n  /**\n   * Segna il radio button come da controllare per la change detection.\n   */\n  _markForCheck() {\n    this._changeDetector.markForCheck();\n  }\n\n  ngOnInit(): void {\n    if (this.radioGroup) {\n      // Se il radio button è all'interno di un gruppo, determina se deve essere selezionato\n      this.checked = this.radioGroup.value === this._value;\n      // Copia il `name` del radio group\n      this.name = this.radioGroup.name;\n    }\n  }\n\n  ngOnDestroy() {\n    this._removeUniqueSelectionListener();\n  }\n\n  private _emitChangeEvent(): void {\n    this.change.emit(new RadioChange(this, this._value));\n  }\n\n  _onInputChange(event: Event) {\n    event.stopPropagation();\n\n    const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n    this.checked = true;\n    this._emitChangeEvent();\n\n    if (this.radioGroup) {\n      this.radioGroup._controlValueAccessorChangeFn(this.value);\n      this.radioGroup._touch();\n      if (groupValueChanged) {\n        this.radioGroup._emitChangeEvent();\n      }\n    }\n  }\n}\n","<div class=\"form-check\">\n  <input type=\"radio\"\n    focusMouse\n    [id]=\"id\"\n    [checked]=\"checked\"\n    [disabled]=\"disabled\"\n    [attr.name]=\"name\"\n    (change)=\"_onInputChange($event)\">\n  <label\n    [attr.for]=\"id\">{{label}}</label>\n</div>\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, OnDestroy} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\n@Injectable({providedIn: 'root'})\nexport class UniqueSelectionDispatcher implements OnDestroy {\n  private _listeners: UniqueSelectionDispatcherListener[] = [];\n\n  /**\n   * Notify other items that selection for the given name has been set.\n   * @param id ID of the item.\n   * @param name Name of the item.\n   */\n  notify(id: string, name: string) {\n    for (const listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n\n  /**\n   * Listen for future changes to item selection.\n   * @return Function used to deregister listener\n   */\n  listen(listener: UniqueSelectionDispatcherListener): () => void {\n    this._listeners.push(listener);\n    return () => {\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\n        return listener !== registered;\n      });\n    };\n  }\n\n  ngOnDestroy() {\n    this._listeners = [];\n  }\n}\n","import {\n  Component,\n  AfterContentInit,\n  ContentChildren,\n  QueryList,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  AfterContentChecked,\n  OnDestroy\n} from '@angular/core';\nimport { Subscription, merge } from 'rxjs';\nimport { Util } from '../util/util';\nimport { ItTabComponent } from './tab.component';\n\n/** Usato per generare ID univoci per ogni componente tab */\nlet nextId = 0;\n\n/** Un change event emesso ai cambi di selezione. */\nexport class TabChangeEvent {\n  /** Indice del tab selezionato. */\n  index: number;\n  /** Riferimento al tab selezionato. */\n  tab: ItTabComponent;\n}\n\n /**\n * Un componente tab-group con design bootstrap italia. Utilizzabile con il tag `<it-tab-group>`.\n *\n * Supporta al suo interno tab di base `<it-tab>` con una label e un contenuto.\n */\n@Component({\n  selector: 'it-tab-group',\n  exportAs: 'itTabGroup',\n  templateUrl: './tab-group.component.html',\n  styleUrls: ['./tab-group.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItTabGroupComponent implements AfterContentInit, AfterContentChecked, OnDestroy {\n\n  @ContentChildren(ItTabComponent) _tabs: QueryList<ItTabComponent>;\n\n  /** L'indice del tab che dovrebbe essere selezionato dopo che il contenuto e' stato controllato */\n  private _indexToSelect: number | null = 0;\n\n  /** Subscription all'aggiunta e rimozione di tab. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription ai cambiamenti alle label dei tab. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Se le tab sono formattate come pill. */\n  @Input()\n  get pill(): boolean { return this._isPill; }\n  set pill(value) {\n    this._isPill = Util.coerceBooleanProperty(value);\n  }\n  private _isPill = false;\n\n\n  /** L'indice della tab attiva. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = Util.coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /**\n   * Se il tab-group ha un tema scuro\n   */\n  @Input()\n  get dark(): boolean { return this._dark; }\n  set dark(value) {\n    this._dark = Util.coerceBooleanProperty(value);\n  }\n  private _dark = false;\n\n  /** abilita il supporto al data-binding bidirezionale `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** emesso quando la selezione del tab cambia. */\n  @Output() readonly selectedTabChange: EventEmitter<TabChangeEvent> =\n      new EventEmitter<TabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {\n    this._groupId = nextId++;\n  }\n\n  /**\n   * Dopo che il contenuto è controllato, il componente conosce i tab che sono stati definiti\n   * e qual è l'indice del tab selezionato.\n   */\n  ngAfterContentChecked(): void {\n    this.changeTab(this._indexToSelect);\n  }\n\n  changeTab(newIndex: number): void {\n\n    // Non fissare `indexToSelect` immediatamente nel setter perchè può accadere che\n    // il numero di tab cambi prima che avvenga la change detection.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(newIndex);\n\n    // Se il nuovo tab è disabilitato, non fare niente\n    if (this._tabs && this._tabs.length > 0 && this._tabs.toArray()[indexToSelect].disabled) {\n      return;\n    }\n\n    if (this._selectedIndex !== indexToSelect && this._selectedIndex != null) {\n      const tabChangeEvent = this._createChangeEvent(indexToSelect);\n      this.selectedTabChange.emit(tabChangeEvent);\n      // Emetto questo valore dopo che è partita la change detection\n      // dal momento che il contenuto controllato potrebbe contenere questa variabile\n      Promise.resolve().then(() => this.selectedIndexChange.emit(indexToSelect));\n    }\n\n    // Setta la posizione per ogni tab.\n    this._tabs.forEach((tab: ItTabComponent, index: number) => {\n      tab.position = index - indexToSelect;\n      tab.isActive = index === indexToSelect;\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit(): void {\n    this._subscribeToTabLabels();\n\n    // Sottoscrivi al cambiamento nel numero di tab, così da\n    // poter ri-renderizzare il contenuto quando nuove tab vengono aggiunte o rimosse.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Mantieni il tab selezionato precedentemente se un nuovo tab è aggiunto o rimosso e non ci sono\n      // cambiamenti espliciti che selezionino un tab differente.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assegna `_indexToSelect` e `_selectedIndex` in modo da non emettere un change event\n            // per evitare al consumer loop infiniti in alcuni casi limite come ad esempio\n            // se si aggiunge un tab all'interno dell'evento `selectedIndexChange`.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  private _createChangeEvent(index: number): TabChangeEvent {\n    const event = new TabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Sottoscrivi a cambiamenti nelle label dei tab. Necessario perchè l'input per la label è sul TabComponent\n   * mentre il data binding è all'interno di TabGroupComponent. Per fare in modo che il binding sia aggiornato\n   * bisogna sottoscriversi ai cambiamenti e azionare la change detection in maniera manuale.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(\n        ...this._tabs.map(tab => tab._disableChange),\n        ...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** fissa l'indice tra 0 e la dimensione dei tab. */\n  private _clampTabIndex(index: number | null): number {\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** ritorna un id univoco per ogni label di tab */\n  _getTabLabelId(i: number): string {\n    return `it-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** ritorna un id univoco per ogni elemento di contenuto del tab */\n  _getTabContentId(i: number): string {\n    return `it-tab-content-${this._groupId}-${i}`;\n  }\n\n  /** restituisce il tabIndex del tab. */\n  _getTabIndex(tab: ItTabComponent, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  _handleClick($event: Event, index: number): void {\n    $event.preventDefault();\n    this.changeTab(index);\n  }\n\n}\n","<ul class=\"nav\" [ngClass]=\"{'nav-dark': dark, 'nav-tabs': !pill, 'nav-pills mb-3': pill}\" role=\"tablist\">\n\n  <li class=\"nav-item\" *ngFor=\"let tab of _tabs; let i = index\">\n    <a\n    focusMouse\n      href=\"#\"\n      role=\"tab\"\n      [attr.aria-controls]=\"_getTabContentId(i)\"\n      [attr.aria-selected]=\"selectedIndex == i\"\n      [attr.aria-label]=\"tab.ariaLabel || null\"\n      [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\"\n      [ngClass]=\"{ 'nav-link': true, 'active': selectedIndex == i, 'disabled': tab.disabled }\"\n      [id]=\"_getTabLabelId(i)\"\n      (click)=\"_handleClick($event, i)\"\n      >\n      <i *ngIf=\"tab.icon\" class=\"it-ico-lg d-block text-center\" [ngClass]=\"tab.icon\"></i>\n      {{tab.label}}\n    </a>\n  </li>\n</ul>\n<div class=\"tab-content\">\n  <ng-container *ngFor=\"let tab of _tabs; let i = index\">\n    <div\n      [ngClass]=\"{ 'tab-pane p-3': true, 'show active': selectedIndex == i }\"\n      [id]=\"_getTabContentId(i)\"\n      role=\"tabpanel\"\n      [attr.aria-labelledby]=\"_getTabLabelId(i)\">\n      <ng-container *ngTemplateOutlet=\"tab._implicitContent\"></ng-container>\n    </div>\n  </ng-container>\n</div>\n","import {\n  Component,\n  OnDestroy,\n  OnChanges,\n  Input,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Util } from '../util/util';\n\n/**\n * Un componente tab con design bootstrap italia. Indica la singola tab di un insieme di tab.\n * Utilizzabile con il tag `<it-tab>` all'interno di un tag `<it-tab-group>`.\n */\n@Component({\n  selector: 'it-tab',\n  exportAs: 'itTab',\n  templateUrl: './tab.component.html',\n  styleUrls: ['./tab.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ItTabComponent implements OnChanges, OnDestroy {\n\n  /** Testo della tab. */\n  @Input() label: string = ''; // tslint:disable-line\n\n  /** Aria label del tab. */\n  @Input('aria-label') ariaLabel: string; // tslint:disable-line\n\n  /**\n   * Riferimento all'elemento dal quale il tab è etichettato.\n   * Viene resettato se `aria-label` è impostato.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string; // tslint:disable-line\n\n  /** Se la tab è disabilitata. */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = Util.coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * La stringa rappresentante l'icona da utilizzare nel titolo della tab. Es. `it-file`\n   */\n  @Input() icon: string | null = null;\n\n  /** Emette un evento ogni volta che la label cambia. */\n  readonly _labelChange = new Subject<void>();\n\n  /** Emette un evento ogni volta che l'attributo disabled cambia */\n  readonly _disableChange = new Subject<void>();\n\n  /**\n   * La posizione relativa della tab dove 0 rappresenta il centro, i negativi sono a sinistra\n   * e i positivi sono a destra.\n   */\n  position: number | null = null;\n\n  /**\n   * Se il tab è attivo.\n   */\n  isActive = false;\n\n  @ViewChild(TemplateRef, { static: true }) _implicitContent: TemplateRef<any>;\n\n  ngOnDestroy(): void {\n    this._disableChange.complete();\n    this._labelChange.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('label')\n        || changes.hasOwnProperty('ariaLabel')\n        || changes.hasOwnProperty('ariaLabelledby')) {\n      this._labelChange.next();\n    }\n\n    if (changes.hasOwnProperty('disabled')) {\n      this._disableChange.next();\n    }\n  }\n\n}\n","<ng-template><ng-content></ng-content></ng-template>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { ItUtilsModule } from \"../util/utils.module\";\nimport { ItTabGroupComponent } from \"./tab-group.component\";\nimport { ItTabComponent } from \"./tab.component\";\n\n@NgModule({\n    declarations: [ItTabComponent, ItTabGroupComponent],\n    exports: [ItTabComponent, ItTabGroupComponent],\n    imports: [CommonModule, ItUtilsModule]\n})\nexport class ItTabsModule {}","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, forwardRef, ChangeDetectionStrategy } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\nlet identifier = 0;\n\nexport class ToggleChange {\n  source: ToggleComponent;\n  checked: boolean;\n}\n\n/**\n * Una toggle con design bootstrap italia. Supporta tutte le funzionalità di una checkbox HTML5,\n * ed espone una API simile. Una `<it-toggle>` può essere checked, unchecked, o disabled.\n */\n@Component({\n  selector: 'it-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.css'],\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ToggleComponent), multi: true }],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /**\n   * Se la toggle è selezionata.\n   */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value: boolean) {\n    if (value !== this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _checked = false;\n\n  /**\n   * L'etichetta della toggle.\n   */\n  @Input()\n  label: string;\n\n  /**\n   * Se la toggle è disabilitata.\n   */\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _disabled = false;\n\n  /**\n   * Evento emesso quando il valore `checked` della toggle cambia.\n   */\n  @Output() readonly change: EventEmitter<ToggleChange> =\n    new EventEmitter<ToggleChange>();\n\n    inputId = `toggle-${identifier++}`;\n\n  private _onTouched: () => any = () => {};\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => { };\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef\n  ) { }\n\n  writeValue(value: any) {\n    this.checked = !!value;\n  }\n\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n\n  handleChange(event: Event) {\n    event.stopPropagation();\n    if (!this.disabled) {\n      this._toggle();\n      this._emitChangeEvent();\n    }\n  }\n\n  private _toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  private _emitChangeEvent() {\n    const event = new ToggleChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(event);\n  }\n}\n","<div class=\"form-check\">\n  <div class=\"toggles\">\n    <label [attr.for]=inputId>\n      {{label}}\n      <input type=checkbox\n        focusMouse\n        [id]=inputId\n        [checked]=checked\n        [disabled]=disabled\n        (change)=handleChange($event)>\n      <span class=\"lever\"></span>\n    </label>\n  </div>\n</div>","\nimport { Injectable } from '@angular/core';\nimport { NgbTooltipConfig } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * Servizio di configurazione per la direttiva ItPopover.\n * Il servizio può essere iniettato, tipicamente in un root component, per impostare i valori delle proprietà in\n * modo tale da fornire i valori di default per tutti i popover utilizzati in un'applicazione.\n */\n@Injectable({providedIn: 'root'})\nexport class ItTooltipConfig extends NgbTooltipConfig {}\n","/**\n * @license\n * Copyright Angular ng-bootstrap team All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://raw.githubusercontent.com/ng-bootstrap/ng-bootstrap/master/LICENSE\n */\nimport {\n  Directive,\n  Input,\n  OnInit,\n  OnDestroy,\n  OnChanges,\n  Injector,\n  Renderer2,\n  ElementRef,\n  TemplateRef,\n  ViewContainerRef,\n  NgZone,\n  Inject,\n  ApplicationRef,\n  ChangeDetectorRef,\n} from '@angular/core';\n\n\nimport { ItTooltipConfig } from './tooltip.config';\n\nimport { NgbTooltip } from '@ng-bootstrap/ng-bootstrap';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Una direttiva per la creazione di un tooltip.\n */\n@Directive({\n  selector: '[itTooltip]', // tslint:disable-line\n  exportAs: 'itTooltip'\n})\nexport class ItTooltip extends NgbTooltip implements OnInit, OnDestroy, OnChanges {\n  /**\n   * The string content or a `TemplateRef` for the content to be displayed in the popover.\n   *\n   * If the title and the content are falsy, the popover won't open.\n   */\n   @Input() itTooltip:  string | TemplateRef<any>| null | undefined;\n\n   constructor(\n       _elementRef: ElementRef<HTMLElement>, _renderer: Renderer2, injector: Injector,\n       viewContainerRef: ViewContainerRef, config: ItTooltipConfig, _ngZone: NgZone,\n       @Inject(DOCUMENT) _document: any, _changeDetector: ChangeDetectorRef,\n       applicationRef: ApplicationRef) {\n         super(_elementRef, _renderer, injector, viewContainerRef, config, _ngZone, _document, _changeDetector, applicationRef);\n   }\n \n   ngOnInit(): void {\n       super.ngOnInit();\n       super.ngbTooltip = this.itTooltip;\n       this.tooltipClass = 'it-tooltip-window';\n   }\n \n   ngOnDestroy(): void {\n     super.ngOnDestroy();\n   }\n}\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { NgbTooltipModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { ItTooltip } from \"./tooltip.directive\";\n\n@NgModule({\n    declarations: [ItTooltip],\n    exports: [ItTooltip],\n    imports: [CommonModule, NgbTooltipModule]\n})\nexport class ItTooltipModule {}","import { Directive, ElementRef, HostListener } from \"@angular/core\";\n\n\n/**\n * Aggiunge la classe \"focus--mouse\" quando viene effettuato il focus sull'elemento a cui è applicata la direttiva\n */\n@Directive({\n    selector: '[focusMouse]',\n    exportAs: 'focusMouse'\n\n})\nexport class FocusMouseDirective {\n    \n    constructor(private elementRef: ElementRef) {}\n    \n    \n    @HostListener('focus')\n    onFocus(): void {\n        (this.elementRef.nativeElement as HTMLElement).classList.add('focus--mouse');\n    }\n\n    @HostListener('blur')\n    onBlur(): void {\n        (this.elementRef.nativeElement as HTMLElement).classList.remove('focus--mouse');\n    }\n}","export class Util {\n  static coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n  }\n\n  static coerceNumberProperty(value: any, fallbackValue = 0): number {\n    return Util._isNumberValue(value) ? Number(value) : fallbackValue;\n  }\n\n  static _isNumberValue(value: any): boolean {\n    return !isNaN(parseFloat(value as any)) && !isNaN(Number(value));\n\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { FocusMouseDirective } from \"./focus-mouse.directive\";\n\n\n@NgModule({\n    declarations: [FocusMouseDirective],\n    exports: [FocusMouseDirective]\n})\nexport class ItUtilsModule {}","/*\n * Public API Surface of design-angular-kit\n */\n\nexport * from './lib/progress-bar/progress-bar.component';\nexport * from './lib/checkbox/checkbox.component';\nexport * from './lib/popover/popover.directive';\nexport * from './lib/popover/popover.config';\nexport * from './lib/popover/popover.module';\nexport * from './lib/toggle/toggle.component';\nexport * from './lib/radio/radio.component';\nexport * from './lib/tooltip/tooltip.directive';\nexport * from './lib/tooltip/tooltip.module';\nexport * from './lib/tooltip/tooltip.config';\nexport * from './lib/button/button.directive';\nexport * from './lib/button/button.module';\nexport * from './lib/badge/badge.directive';\nexport * from './lib/collapse/collapse.directive';\nexport * from './lib/collapse/collapse-item.component';\nexport * from './lib/collapse/collapse-group.component';\nexport * from './lib/collapse/collapse.module';\nexport * from './lib/form-input/form-input.component';\nexport * from './lib/form-input/it-prefix.directive';\nexport * from './lib/form-input/it-suffix.directive';\nexport * from './lib/form-input/it-text-suffix.directive';\nexport * from './lib/form-input/it-text-prefix.directive';\nexport * from './lib/dropdown/dropdown.component';\nexport * from './lib/dropdown/dropdown-item.component';\nexport * from './lib/dropdown/dropdown-divider.component';\nexport * from './lib/breadcrumb/breadcrumb.component';\nexport * from './lib/breadcrumb/breadcrumb-item.component';\nexport * from './lib/tabs/tab-group.component';\nexport * from './lib/icon/icon.component';\nexport * from './lib/icon/icon.module';\nexport * from './lib/dropdown/dropdown.directive';\nexport * from './lib/dropdown/dropdown.config';\nexport * from './lib/dropdown/dropdown.module'\nexport * from './lib/util/utils.module';\nexport * from './lib/util/focus-mouse.directive';\n\nexport * from './lib/design-angular-kit.module';\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RouterDispatcherComponent } from './router-dispatcher/router-dispatcher.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'info', pathMatch: 'full' },\n  { path: 'info', component: RouterDispatcherComponent, children: [\n    { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n    { path: 'welcome', loadChildren: () => import('src/app/welcome/welcome.module').then(m => m.WelcomeModule) }\n  ]},\n  { path: 'componenti', component: RouterDispatcherComponent, children: [\n    { path: '', redirectTo: 'badge', pathMatch: 'full' },\n    { path: 'badge', loadChildren: () => import('src/app/badge/badge.module').then(m => m.BadgeModule) },\n    { path: 'checkbox', loadChildren: () => import('src/app/checkbox/checkbox.module').then(m => m.CheckboxModule) },\n    { path: 'progress-bar', loadChildren: () => import('src/app/progress-bar/progress-bar.module').then(m => m.ProgressBarModule) },\n    { path: 'toggle', loadChildren: () => import('src/app/toggle/toggle.module').then(m => m.ToggleModule) },\n    { path: 'popover', loadChildren: () => import('src/app/popover/popover.module').then(m => m.PopoverModule) },\n    { path: 'radio', loadChildren: () => import('src/app/radio/radio.module').then(m => m.RadioModule) },\n    { path: 'breadcrumb', loadChildren: () => import('src/app/breadcrumb/breadcrumb.module').then(m => m.BreadcrumbModule) },\n    { path: 'tabs', loadChildren: () => import('src/app/tabs/tabs.module').then(m => m.TabsModule) },\n    { path: 'tooltip', loadChildren: () => import('src/app/tooltip/tooltip.module').then(m => m.TooltipModule) },\n    { path: 'button', loadChildren: () => import('src/app/button/button.module').then(m => m.ButtonModule) },\n    { path: 'collapse', loadChildren: () => import('src/app/collapse/collapse.module').then(m => m.CollapseModule) },\n    { path: 'form-input', loadChildren: () => import('src/app/form-input/form-input.module').then(m => m.FormInputModule) },\n    { path: 'dropdown', loadChildren: () => import('src/app/dropdown/dropdown.module').then(m => m.DropdownModule) },\n  ]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'it-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'design-angular-kit-doc';\n}\n","<nav class=\"navbar-institutional navbar navbar-expand-lg navbar-dark\">\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsTop\" aria-controls=\"navbarsTop\"\n      aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div>\n      <a class=\"navbar-brand\" href=\"http://www.agid.gov.it/\">AgID</a>\n      <span class=\"navbar-brand text-white\"> + </span>\n      <a class=\"navbar-brand\" href=\"https://teamdigitale.governo.it/\">Team\n          <span class=\"d-none d-lg-inline\">per la Trasformazione </span>Digitale</a>\n  </div>\n  <div class=\"collapse navbar-collapse\" id=\"navbarsTop\">\n      <ul class=\"navbar-nav ml-auto\">\n          <li class=\"nav-item nav-item-w-divider\">\n              <a class=\"nav-link\" href=\"https://pianotriennale-ict.italia.it/\">Piano Triennale</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"https://developers.italia.it/\">Developers</a>\n          </li>\n          <li class=\"nav-item nav-item-w-divider\">\n              <a class=\"nav-link\" href=\"https://designers.italia.it/\">Designers</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"https://forum.italia.it/\">Forum</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"https://docs.italia.it/\">Docs</a>\n          </li>\n          <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"https://github.com/italia/\">GitHub</a>\n          </li>\n      </ul>\n  </div>\n</nav>\n<header class=\"navbar navbar-dark bd-navbar sticky-top\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand py-2 text-decoration-none\" href=\"#/info/welcome\">\n      <div class=\"d-flex flex-row\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 92 74\" height=\"48\">\n          <g fill=\"#FFF\">\n            <path d=\"M31.799 71.9V15.7h15.1V72h-15.1zM91.099 28.5h-13.8v23.1c0 2.3.1 3.8.2 4.8.1.9.5 1.7 1.2 2.4s1.8 1 3.3 1l8.6-.2.7 12c-5 1.1-8.9 1.7-11.5 1.7-6.8 0-11.4-1.5-13.8-4.6-2.5-3-3.7-8.6-3.7-16.8V0h15.1v15.6h13.8v12.9zM9.099 32.8c-2.6 0-4.8-.9-6.5-2.7s-2.6-4-2.6-6.6.9-4.8 2.5-6.6c1.7-1.8 3.9-2.6 6.5-2.6s4.8.9 6.5 2.7 2.5 4 2.5 6.7-.8 4.8-2.5 6.6c-1.6 1.6-3.7 2.5-6.4 2.5z\"></path>\n          </g>\n        </svg>\n        <div class=\"d-flex flex-column ps-3 ps-sm-4\">\n          <h1 class=\"bd-logo-title\">Angular Kit</h1>\n          <h2 class=\"bd-logo-subtitle\">Il kit Angular per <span class=\"d-none d-sm-inline\">lo sviluppo di applicazioni web per </span>la PA</h2>\n        </div>\n      </div>\n    </a>\n    <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n      <li class=\"nav-item pr-2\">\n        <a title=\"Vedi il codice sorgente su GitHub\" class=\"nav-link d-flex align-items-center\" href=\"https://github.com/italia/design-angular-kit\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"GitHub\">\n          <i class=\"it-github\"></i><span class=\"sr-only\">Vedi il codice sorgente su GitHub</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</header>\n<div class=\"container-fluid\">\n  \n  <div class=\"row flex-xl-nowrap\">\n    <it-table-of-content class=\"col-12 col-md-3 col-xl-2\"></it-table-of-content>\n    <main class=\"col-12 col-md-9 col-xl-10 py-md-3 px-md-3 bd-content\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n\n</div>\n\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { DesignAngularKitModule } from 'projects/design-angular-kit/src/public_api';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TableOfContentComponent } from './table-of-content/table-of-content.component';\nimport { TableOfContentItemComponent } from './table-of-content-item/table-of-content-item.component';\nimport { RouterDispatcherComponent } from './router-dispatcher/router-dispatcher.component';\nimport { LinkSortPipe } from './link-sort.pipe';\nimport { HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\nimport { TabsModule } from './tabs/tabs.module';\nimport { ItTabsModule } from 'projects/design-angular-kit/src/lib/tabs/tabs.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TableOfContentComponent,\n    TableOfContentItemComponent,\n    RouterDispatcherComponent,\n    LinkSortPipe,\n  ],\n  imports: [\n    BrowserModule,\n    DesignAngularKitModule,\n    ItTabsModule,\n    AppRoutingModule\n  ],\n  providers: [{\n    provide: HIGHLIGHT_OPTIONS,\n    useValue: {\n      coreLibraryLoader: () => import('highlight.js/lib/core'),\n      languages: {\n        typescript: () => import('highlight.js/lib/languages/typescript'),\n        HTML: () => import('highlight.js/lib/languages/xml'),\n        scss: () => import('highlight.js/lib/languages/scss')\n      }\n    }\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'linksort'\n})\nexport class LinkSortPipe implements PipeTransform {\n  transform(value: any[]): any[] {\n    return value.sort((a, b) => (a.link > b.link) ? 1 : ((b.link > a.link) ? -1 : 0));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'it-router-dispatcher',\n  templateUrl: './router-dispatcher.component.html',\n  styleUrls: ['./router-dispatcher.component.scss']\n})\nexport class RouterDispatcherComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'it-table-of-content-item',\n  templateUrl: './table-of-content-item.component.html',\n  styleUrls: ['./table-of-content-item.component.scss']\n})\nexport class TableOfContentItemComponent implements OnInit {\n\n  @Input() tocItem: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"bd-toc-item\" [routerLinkActive]=\"'active'\">\n  <a [routerLink]=\"tocItem.link\" class=\"bd-toc-link\" focusMouse >{{tocItem.label}}</a>\n  <ul class=\"nav bd-sidenav pl-2\" >\n    <li *ngFor=\"let link of tocItem.links | linksort\" [routerLinkActive]=\"['active', 'bd-sidenav-active']\">\n      <a [routerLink]=\"link.link\" class = \"list-item\" focusMouse>{{link.label}}</a>\n    </li>\n  </ul>\n</div>\n","import { Component } from '@angular/core';\nimport TableOfContent from '../../assets/table-of-content.json';\n\n@Component({\n  selector: 'it-table-of-content',\n  templateUrl: './table-of-content.component.html',\n  styleUrls: ['./table-of-content.component.scss']\n})\nexport class TableOfContentComponent {\n\n  tableOfContent = (<any>TableOfContent).tableOfContent;\n\n  public toggle(event, tocItem) {\n    this.tableOfContent = this.tableOfContent.map((item) => {\n      const newTocItem = item;\n      if (item.label === tocItem.label) {\n        newTocItem.active = true;\n        if (newTocItem.links.length > 0) {\n          newTocItem.links[0].active = true;\n        }\n      } else {\n        newTocItem.active = false;\n      }\n      return newTocItem;\n    });\n  }\n}\n","<div class=\"bd-sidebar sidebar-linklist-wrapper\">\n  <nav class=\"link-list-wrapper\">\n    <it-table-of-content-item [tocItem]=\"tocItem\" *ngFor=\"let tocItem of tableOfContent\" (click)=\"toggle($event, tocItem)\"></it-table-of-content-item>\n  </nav>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}